

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jul 21 10:04:20 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=4,class=CODE,delta=1
   104                           	psect	text86,global,reloc=4,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=4,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=4,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=4,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=4,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=4,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   131                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   132  0000                     
   133                           ; Version 2.20
   134                           ; Generated 05/05/2020 GMT
   135                           ; 
   136                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution.
   150                           ; 
   151                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   152                           ;        software without specific prior written permission.
   153                           ; 
   154                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   155                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   156                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   157                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   158                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   159                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   160                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   161                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   162                           ; 
   163                           ; 
   164                           ; Code-generator required, PIC18F47K42 Definitions
   165                           ; 
   166                           ; SFR Addresses
   167  0000                     
   168                           	psect	idataBANK0
   169  004F3A                     __pidataBANK0:
   170                           	callstack 0
   171                           
   172                           ;initializer for led_lightshow@LED_UP
   173  004F3A  01                 	db	1
   174                           
   175                           ;initializer for led_lightshow@cylon
   176  004F3B  FF                 	db	255
   177                           
   178                           	psect	idataBANK1
   179  004704                     __pidataBANK1:
   180                           	callstack 0
   181                           
   182                           ;initializer for stoa@F1139
   183  004704  28                 	db	40
   184  004705  6E                 	db	110
   185  004706  75                 	db	117
   186  004707  6C                 	db	108
   187  004708  6C                 	db	108
   188  004709  29                 	db	41
   189  00470A  00                 	db	0
   190                           
   191                           ;initializer for _sounds
   192  00470B  AF                 	db	low (_IO+6)
   193  00470C  01                 	db	high (_IO+6)
   194                           
   195                           ;initializer for _switches
   196  00470D  A9                 	db	low _IO
   197  00470E  01                 	db	high _IO
   198                           
   199                           ;initializer for _IO
   200  00470F  00                 	db	0
   201  004710  00                 	db	0
   202  004711  00                 	db	0
   203  004712  00                 	db	0
   204  004713  00                 	db	0
   205  004714  00                 	db	0
   206  004715  00                 	db	0
   207  004716  00                 	db	0
   208  004717  00                 	db	0
   209  004718  00                 	db	0
   210  004719  00                 	db	0
   211  00471A  00                 	db	0
   212  00471B  00                 	db	0
   213  00471C  00                 	db	0
   214  00471D  00                 	db	0
   215  00471E  02                 	db	2
   216  00471F  00                 	db	0
   217  004720  00                 	db	0
   218  004721  00                 	db	0
   219  004722  00                 	db	0
   220  004723  32                 	db	50
   221  004724  00                 	db	0
   222  004725  00                 	db	0
   223  004726  0000               	dw	0
   224  004728  0000               	dw	0
   225  00472A  000A               	dw	10
   226  00472C  0000               	dw	0
   227  00472E  0000               	dw	0
   228  004730  01                 	db	1
   229  004731  00                 	db	0
   230  004732  00                 	db	0
   231  004733  01                 	db	1
   232  004734  01                 	db	1
   233  004735  01                 	db	1
   234  004736  00                 	db	0
   235  004737  00                 	db	0
   236                           
   237                           ;initializer for _otto_b1
   238  004738  0190               	dw	400
   239  00473A  0E74               	dw	3700
   240  00473C  0000               	dw	0
   241  00473E  0000               	dw	0
   242  004740  0000               	dw	0
   243  004742  0000               	dw	0
   244  004744  FF00               	dw	65280
   245  0000                     _IVTADL	set	14493
   246  0000                     _IVTADH	set	14494
   247  0000                     _IVTADU	set	14495
   248  0000                     _PIR2bits	set	14754
   249  0000                     _PIE8bits	set	14744
   250  0000                     _PIR8bits	set	14760
   251  0000                     _PIE9bits	set	14745
   252  0000                     _PIR9bits	set	14761
   253  0000                     _PIR4bits	set	14756
   254  0000                     _PIE6bits	set	14742
   255  0000                     _PIE3bits	set	14739
   256  0000                     _IPR8bits	set	14728
   257  0000                     _IPR9bits	set	14729
   258  0000                     _IPR3bits	set	14723
   259  0000                     _IPR6bits	set	14726
   260  0000                     _PMD7	set	14791
   261  0000                     _PMD6	set	14790
   262  0000                     _PMD5	set	14789
   263  0000                     _PMD4	set	14788
   264  0000                     _PMD3	set	14787
   265  0000                     _PMD2	set	14786
   266  0000                     _PMD1	set	14785
   267  0000                     _PMD0	set	14784
   268  0000                     _OSCTUNE	set	14814
   269  0000                     _OSCFRQ	set	14815
   270  0000                     _OSCEN	set	14813
   271  0000                     _OSCCON3	set	14811
   272  0000                     _OSCCON1	set	14809
   273  0000                     _PLLR	set	118496
   274  0000                     _SPI1SDIPPS	set	15071
   275  0000                     _U1RXPPS	set	15077
   276  0000                     _RC6PPS	set	14870
   277  0000                     _RC5PPS	set	14869
   278  0000                     _RD1PPS	set	14873
   279  0000                     _RC3PPS	set	14867
   280  0000                     _RB6PPS	set	14862
   281  0000                     _SPI1SCKPPS	set	15070
   282  0000                     _U2RXPPS	set	15080
   283  0000                     _SLRCONE	set	14979
   284  0000                     _SLRCOND	set	14963
   285  0000                     _SLRCONC	set	14947
   286  0000                     _SLRCONB	set	14931
   287  0000                     _SLRCONA	set	14915
   288  0000                     _ODCOND	set	14962
   289  0000                     _ODCONC	set	14946
   290  0000                     _ODCONB	set	14930
   291  0000                     _ODCONA	set	14914
   292  0000                     _ODCONE	set	14978
   293  0000                     _RD1I2C	set	14971
   294  0000                     _RD0I2C	set	14970
   295  0000                     _RC4I2C	set	14955
   296  0000                     _RC3I2C	set	14954
   297  0000                     _RB2I2C	set	14939
   298  0000                     _RB1I2C	set	14938
   299  0000                     _WPUC	set	14945
   300  0000                     _WPUA	set	14913
   301  0000                     _WPUB	set	14929
   302  0000                     _WPUE	set	14977
   303  0000                     _WPUD	set	14961
   304  0000                     _ANSELA	set	14912
   305  0000                     _ANSELE	set	14976
   306  0000                     _ANSELB	set	14928
   307  0000                     _ANSELC	set	14944
   308  0000                     _ANSELD	set	14960
   309  0000                     _SPI1RXB	set	15632
   310  0000                     _SPI1TXB	set	15633
   311  0000                     _SPI1TCNTL	set	15634
   312  0000                     _SPI1CON0	set	15636
   313  0000                     _SPI1CLK	set	15644
   314  0000                     _SPI1BAUD	set	15641
   315  0000                     _SPI1CON2	set	15638
   316  0000                     _SPI1CON1	set	15637
   317  0000                     _U2RXB	set	15824
   318  0000                     _U2TXB	set	15826
   319  0000                     _U2ERRIRbits	set	15841
   320  0000                     _U2ERRIE	set	15842
   321  0000                     _U2ERRIR	set	15841
   322  0000                     _U2UIR	set	15840
   323  0000                     _U2FIFO	set	15839
   324  0000                     _U2BRGH	set	15838
   325  0000                     _U2BRGL	set	15837
   326  0000                     _U2CON2	set	15836
   327  0000                     _U2CON1	set	15835
   328  0000                     _U2CON0	set	15834
   329  0000                     _U2P3L	set	15832
   330  0000                     _U2P2L	set	15830
   331  0000                     _U2P1L	set	15828
   332  0000                     _U1RXB	set	15848
   333  0000                     _U1TXB	set	15850
   334  0000                     _U1ERRIRbits	set	15865
   335  0000                     _U1ERRIE	set	15866
   336  0000                     _U1ERRIR	set	15865
   337  0000                     _U1UIR	set	15864
   338  0000                     _U1FIFO	set	15863
   339  0000                     _U1BRGH	set	15862
   340  0000                     _U1BRGL	set	15861
   341  0000                     _U1CON2	set	15860
   342  0000                     _U1CON1	set	15859
   343  0000                     _U1CON0	set	15858
   344  0000                     _U1P3H	set	15857
   345  0000                     _U1P3L	set	15856
   346  0000                     _U1P2H	set	15855
   347  0000                     _U1P2L	set	15854
   348  0000                     _U1P1H	set	15853
   349  0000                     _U1P1L	set	15852
   350  0000                     _FVRCON	set	16065
   351  0000                     _ADRESL	set	16111
   352  0000                     _ADRESH	set	16112
   353  0000                     _ADCON0bits	set	16120
   354  0000                     _ADCON0	set	16120
   355  0000                     _ADCLK	set	16127
   356  0000                     _ADACT	set	16126
   357  0000                     _ADREF	set	16125
   358  0000                     _ADSTAT	set	16124
   359  0000                     _ADCON3	set	16123
   360  0000                     _ADCON2	set	16122
   361  0000                     _ADCON1	set	16121
   362  0000                     _ADPREH	set	16119
   363  0000                     _ADPREL	set	16118
   364  0000                     _ADCAP	set	16117
   365  0000                     _ADACQH	set	16116
   366  0000                     _ADACQL	set	16115
   367  0000                     _ADPCH	set	16113
   368  0000                     _ADRPT	set	16108
   369  0000                     _ADACCU	set	16106
   370  0000                     _ADSTPTH	set	16101
   371  0000                     _ADSTPTL	set	16100
   372  0000                     _ADUTHH	set	16097
   373  0000                     _ADUTHL	set	16096
   374  0000                     _ADLTHH	set	16095
   375  0000                     _ADLTHL	set	16094
   376  0000                     _CCPTMRS1bits	set	16223
   377  0000                     _LATCbits	set	16316
   378  0000                     _LATEbits	set	16318
   379  0000                     _T5CONbits	set	16282
   380  0000                     _T5CON	set	16282
   381  0000                     _TMR5L	set	16280
   382  0000                     _TMR5H	set	16281
   383  0000                     _T5CLK	set	16285
   384  0000                     _T5GATE	set	16284
   385  0000                     _T5GCON	set	16283
   386  0000                     _T6CON	set	16276
   387  0000                     _T6TMR	set	16274
   388  0000                     _T6PR	set	16275
   389  0000                     _T6RST	set	16279
   390  0000                     _T6HLT	set	16277
   391  0000                     _T6CLKCON	set	16278
   392  0000                     _PWM8DCL	set	16224
   393  0000                     _PWM8DCH	set	16225
   394  0000                     _PWM8CON	set	16226
   395  0000                     _T2CON	set	16300
   396  0000                     _T2TMR	set	16298
   397  0000                     _T2PR	set	16299
   398  0000                     _T2RST	set	16303
   399  0000                     _T2HLT	set	16301
   400  0000                     _T2CLKCON	set	16302
   401  0000                     _IVTLOCKbits	set	16340
   402  0000                     _IVTLOCK	set	16340
   403  0000                     _INTCON0bits	set	16338
   404  0000                     _TRISD	set	16325
   405  0000                     _TRISC	set	16324
   406  0000                     _TRISB	set	16323
   407  0000                     _TRISA	set	16322
   408  0000                     _TRISE	set	16326
   409  0000                     _LATC	set	16316
   410  0000                     _LATB	set	16315
   411  0000                     _LATA	set	16314
   412  0000                     _LATD	set	16317
   413  0000                     _LATE	set	16318
   414  0000                     _GIE	set	130711
   415                           
   416                           	psect	smallconst
   417  002000                     __psmallconst:
   418                           	callstack 0
   419  002000  00                 	db	0
   420  002001                     STR_1:
   421                           
   422                           ; BSR set to: 1
   423  002001  20                 	db	32
   424  002002  48                 	db	72	;'H'
   425  002003  20                 	db	32
   426  002004  25                 	db	37
   427  002005  69                 	db	105	;'i'
   428  002006  2C                 	db	44
   429  002007  20                 	db	32
   430  002008  4D                 	db	77	;'M'
   431  002009  20                 	db	32
   432  00200A  25                 	db	37
   433  00200B  69                 	db	105	;'i'
   434  00200C  20                 	db	32
   435  00200D  20                 	db	32
   436  00200E  20                 	db	32
   437  00200F  20                 	db	32
   438  002010  20                 	db	32
   439  002011  00                 	db	0
   440  002012                     STR_2:
   441                           
   442                           ; BSR set to: 1
   443  002012  20                 	db	32
   444  002013  53                 	db	83	;'S'
   445  002014  63                 	db	99	;'c'
   446  002015  6F                 	db	111	;'o'
   447  002016  72                 	db	114	;'r'
   448  002017  65                 	db	101	;'e'
   449  002018  20                 	db	32
   450  002019  25                 	db	37
   451  00201A  69                 	db	105	;'i'
   452  00201B  20                 	db	32
   453  00201C  25                 	db	37
   454  00201D  69                 	db	105	;'i'
   455  00201E  20                 	db	32
   456  00201F  20                 	db	32
   457  002020  20                 	db	32
   458  002021  20                 	db	32
   459  002022  00                 	db	0
   460  002023                     
   461                           ; BSR set to: 1
   462  002023  53                 	db	83	;'S'
   463  002024  57                 	db	87	;'W'
   464  002025  20                 	db	32
   465  002026  25                 	db	37
   466  002027  73                 	db	115	;'s'
   467  002028  20                 	db	32
   468  002029  50                 	db	80	;'P'
   469  00202A  6C                 	db	108	;'l'
   470  00202B  61                 	db	97	;'a'
   471  00202C  79                 	db	121	;'y'
   472  00202D  21                 	db	33
   473  00202E  00                 	db	0
   474  00202F                     
   475                           ; BSR set to: 1
   476  00202F  31                 	db	49	;'1'
   477  002030  2E                 	db	46
   478  002031  30                 	db	48	;'0'
   479  002032  37                 	db	55	;'7'
   480  002033  00                 	db	0
   481  002034                     STR_16:
   482                           
   483                           ; BSR set to: 1
   484  002034  52                 	db	82	;'R'
   485  002035  30                 	db	48	;'0'
   486  002036  0D                 	db	13
   487  002037  00                 	db	0
   488  002038                     STR_8:
   489                           
   490                           ; BSR set to: 1
   491  002038  54                 	db	84	;'T'
   492  002039  32                 	db	50	;'2'
   493  00203A  0D                 	db	13
   494  00203B  00                 	db	0
   495  00203C                     STR_10:
   496                           
   497                           ; BSR set to: 1
   498  00203C  43                 	db	67	;'C'
   499  00203D  34                 	db	52	;'4'
   500  00203E  0D                 	db	13
   501  00203F  00                 	db	0
   502  002040                     STR_12:
   503                           
   504                           ; BSR set to: 1
   505  002040  46                 	db	70	;'F'
   506  002041  34                 	db	52	;'4'
   507  002042  0D                 	db	13
   508  002043  00                 	db	0
   509  002044                     STR_14:
   510                           
   511                           ; BSR set to: 1
   512  002044  4D                 	db	77	;'M'
   513  002045  34                 	db	52	;'4'
   514  002046  0D                 	db	13
   515  002047  00                 	db	0
   516  002048                     STR_6:
   517                           
   518                           ; BSR set to: 1
   519  002048  58                 	db	88	;'X'
   520  002049  51                 	db	81	;'Q'
   521  00204A  0D                 	db	13
   522  00204B  00                 	db	0
   523  00204C                     STR_5:
   524                           
   525                           ; BSR set to: 1
   526  00204C  25                 	db	37
   527  00204D  73                 	db	115	;'s'
   528  00204E  00                 	db	0
   529  00204F  00                 	db	0	; dummy byte at the end
   530  0000                     
   531                           ; #config settings
   532                           
   533                           	psect	cinit
   534  0043A6                     __pcinit:
   535                           	callstack 0
   536  0043A6                     start_initialization:
   537                           	callstack 0
   538  0043A6                     __initialization:
   539                           	callstack 0
   540                           
   541                           ; Initialize objects allocated to BANK1 (66 bytes)
   542                           ; load TBLPTR registers with __pidataBANK1
   543  0043A6  0E04               	movlw	low __pidataBANK1
   544  0043A8  6EF6               	movwf	tblptrl,c
   545  0043AA  0E47               	movlw	high __pidataBANK1
   546  0043AC  6EF7               	movwf	tblptrh,c
   547  0043AE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   548  0043B0  6EF8               	movwf	tblptru,c
   549  0043B2  EE00  F19E         	lfsr	0,__pdataBANK1
   550  0043B6  EE10 F042          	lfsr	1,66
   551  0043BA                     copy_data0:
   552  0043BA  0009               	tblrd		*+
   553  0043BC  006F FFD7 FFEE     	movff	tablat,postinc0
   554  0043C2  50E5               	movf	postdec1,w,c
   555  0043C4  50E1               	movf	fsr1l,w,c
   556  0043C6  E1F9               	bnz	copy_data0
   557                           
   558                           ; Initialize objects allocated to BANK0 (2 bytes)
   559                           ; load TBLPTR registers with __pidataBANK0
   560  0043C8  0E3A               	movlw	low __pidataBANK0
   561  0043CA  6EF6               	movwf	tblptrl,c
   562  0043CC  0E4F               	movlw	high __pidataBANK0
   563  0043CE  6EF7               	movwf	tblptrh,c
   564  0043D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   565  0043D2  6EF8               	movwf	tblptru,c
   566  0043D4  0009               	tblrd		*+	;fetch initializer
   567  0043D6  006F FFD4  F0AC    	movff	tablat,__pdataBANK0
   568  0043DC  0009               	tblrd		*+	;fetch initializer
   569  0043DE  006F FFD4  F0AD    	movff	tablat,__pdataBANK0+1
   570                           
   571                           ; Clear objects allocated to BANK2 (32 bytes)
   572  0043E4  EE00  F280         	lfsr	0,__pbssBANK2
   573  0043E8  0E20               	movlw	32
   574  0043EA                     clear_0:
   575  0043EA  6AEE               	clrf	postinc0,c
   576  0043EC  06E8               	decf	wreg,f,c
   577  0043EE  E1FD               	bnz	clear_0
   578                           
   579                           ; Clear objects allocated to BANK1 (158 bytes)
   580  0043F0  EE00  F100         	lfsr	0,__pbssBANK1
   581  0043F4  0E9E               	movlw	158
   582  0043F6                     clear_1:
   583  0043F6  6AEE               	clrf	postinc0,c
   584  0043F8  06E8               	decf	wreg,f,c
   585  0043FA  E1FD               	bnz	clear_1
   586                           
   587                           ; Clear objects allocated to BANK0 (16 bytes)
   588  0043FC  EE00  F09C         	lfsr	0,__pbssBANK0
   589  004400  0E10               	movlw	16
   590  004402                     clear_2:
   591  004402  6AEE               	clrf	postinc0,c
   592  004404  06E8               	decf	wreg,f,c
   593  004406  E1FD               	bnz	clear_2
   594                           
   595                           ; Clear objects allocated to COMRAM (5 bytes)
   596  004408  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   597  00440A  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   598  00440C  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   599  00440E  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   600  004410  6A56               	clrf	__pbssCOMRAM& (0+255),c
   601                           
   602                           ;
   603                           ; Setup IVTBASE
   604                           ;
   605  004412  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   606  004414  6ED5               	movwf	213,c
   607  004416  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   608  004418  6ED6               	movwf	214,c
   609  00441A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   610  00441C  6ED7               	movwf	215,c
   611  00441E                     end_of_initialization:
   612                           	callstack 0
   613  00441E                     __end_of__initialization:
   614                           	callstack 0
   615  00441E  0100               	movlb	0
   616  004420  EF20  F024         	goto	_main	;jump to C main() function
   617                           
   618                           	psect	bssCOMRAM
   619  000056                     __pbssCOMRAM:
   620                           	callstack 0
   621  000056                     _flags:
   622                           	callstack 0
   623  000056                     	ds	2
   624  000058                     _uart2RxTail:
   625                           	callstack 0
   626  000058                     	ds	1
   627  000059                     _uart2RxHead:
   628                           	callstack 0
   629  000059                     	ds	1
   630  00005A                     _uart1RxHead:
   631                           	callstack 0
   632  00005A                     	ds	1
   633                           
   634                           	psect	bssBANK0
   635  00009C                     __pbssBANK0:
   636                           	callstack 0
   637  00009C                     _prec:
   638                           	callstack 0
   639  00009C                     	ds	2
   640  00009E                     led_lightshow@alive_led:
   641                           	callstack 0
   642  00009E                     	ds	2
   643  0000A0                     Digital232_RW@x:
   644                           	callstack 0
   645  0000A0                     	ds	1
   646  0000A1                     _lcd_current_column:
   647                           	callstack 0
   648  0000A1                     	ds	1
   649  0000A2                     _lcd_current_page:
   650                           	callstack 0
   651  0000A2                     	ds	1
   652  0000A3                     _uart2RxCount:
   653                           	callstack 0
   654  0000A3                     	ds	1
   655  0000A4                     _uart2TxBufferRemaining:
   656                           	callstack 0
   657  0000A4                     	ds	1
   658  0000A5                     _uart2TxTail:
   659                           	callstack 0
   660  0000A5                     	ds	1
   661  0000A6                     _uart2TxHead:
   662                           	callstack 0
   663  0000A6                     	ds	1
   664  0000A7                     _uart1RxCount:
   665                           	callstack 0
   666  0000A7                     	ds	1
   667  0000A8                     _uart1RxTail:
   668                           	callstack 0
   669  0000A8                     	ds	1
   670  0000A9                     _uart1TxBufferRemaining:
   671                           	callstack 0
   672  0000A9                     	ds	1
   673  0000AA                     _uart1TxTail:
   674                           	callstack 0
   675  0000AA                     	ds	1
   676  0000AB                     _uart1TxHead:
   677                           	callstack 0
   678  0000AB                     	ds	1
   679                           
   680                           	psect	dataBANK0
   681  0000AC                     __pdataBANK0:
   682                           	callstack 0
   683  0000AC                     led_lightshow@LED_UP:
   684                           	callstack 0
   685  0000AC                     	ds	1
   686  0000AD                     led_lightshow@cylon:
   687                           	callstack 0
   688  0000AD                     	ds	1
   689                           
   690                           	psect	bssBANK1
   691  000100                     __pbssBANK1:
   692                           	callstack 0
   693  000100                     lp_filter@smooth:
   694                           	callstack 0
   695  000100                     	ds	32
   696  000120                     _tickCount:
   697                           	callstack 0
   698  000120                     	ds	18
   699  000132                     _uart2RxStatusBuffer:
   700                           	callstack 0
   701  000132                     	ds	8
   702  00013A                     _uart2RxBuffer:
   703                           	callstack 0
   704  00013A                     	ds	8
   705  000142                     _uart2TxBuffer:
   706                           	callstack 0
   707  000142                     	ds	8
   708  00014A                     _uart1RxStatusBuffer:
   709                           	callstack 0
   710  00014A                     	ds	8
   711  000152                     _uart1RxBuffer:
   712                           	callstack 0
   713  000152                     	ds	8
   714  00015A                     _uart1TxBuffer:
   715                           	callstack 0
   716  00015A                     	ds	8
   717  000162                     wdtdelay@dcount:
   718                           	callstack 0
   719  000162                     	ds	4
   720  000166                     _TMR5_InterruptHandler:
   721                           	callstack 0
   722  000166                     	ds	3
   723  000169                     _TMR6_InterruptHandler:
   724                           	callstack 0
   725  000169                     	ds	3
   726  00016C                     _UART2_ErrorHandler:
   727                           	callstack 0
   728  00016C                     	ds	3
   729  00016F                     _UART2_OverrunErrorHandler:
   730                           	callstack 0
   731  00016F                     	ds	3
   732  000172                     _UART2_FramingErrorHandler:
   733                           	callstack 0
   734  000172                     	ds	3
   735  000175                     _UART1_ErrorHandler:
   736                           	callstack 0
   737  000175                     	ds	3
   738  000178                     _UART1_OverrunErrorHandler:
   739                           	callstack 0
   740  000178                     	ds	3
   741  00017B                     _UART1_FramingErrorHandler:
   742                           	callstack 0
   743  00017B                     	ds	3
   744  00017E                     _UART1_TxInterruptHandler:
   745                           	callstack 0
   746  00017E                     	ds	3
   747  000181                     _UART1_RxInterruptHandler:
   748                           	callstack 0
   749  000181                     	ds	3
   750  000184                     _UART2_TxInterruptHandler:
   751                           	callstack 0
   752  000184                     	ds	3
   753  000187                     _UART2_RxInterruptHandler:
   754                           	callstack 0
   755  000187                     	ds	3
   756  00018A                     _nout:
   757                           	callstack 0
   758  00018A                     	ds	2
   759  00018C                     _width:
   760                           	callstack 0
   761  00018C                     	ds	2
   762  00018E                     led_lightshow@j:
   763                           	callstack 0
   764  00018E                     	ds	2
   765  000190                     TMR5_ISR@CountCallBack:
   766                           	callstack 0
   767  000190                     	ds	2
   768  000192                     _timer5ReloadVal:
   769                           	callstack 0
   770  000192                     	ds	2
   771  000194                     _uart2RxLastError:
   772                           	callstack 0
   773  000194                     	ds	1
   774  000195                     _uart1RxLastError:
   775                           	callstack 0
   776  000195                     	ds	1
   777  000196                     _seed:
   778                           	callstack 0
   779  000196                     	ds	8
   780                           
   781                           	psect	dataBANK1
   782  00019E                     __pdataBANK1:
   783                           	callstack 0
   784  00019E                     stoa@F1139:
   785                           	callstack 0
   786  00019E                     	ds	7
   787  0001A5                     _sounds:
   788                           	callstack 0
   789  0001A5                     	ds	2
   790  0001A7                     _switches:
   791                           	callstack 0
   792  0001A7                     	ds	2
   793  0001A9                     _IO:
   794                           	callstack 0
   795  0001A9                     	ds	41
   796  0001D2                     _otto_b1:
   797                           	callstack 0
   798  0001D2                     	ds	14
   799                           
   800                           	psect	bssBANK2
   801  000280                     __pbssBANK2:
   802                           	callstack 0
   803  000280                     _dbuf:
   804                           	callstack 0
   805  000280                     	ds	32
   806                           
   807                           	psect	cstackBANK2
   808  000200                     __pcstackBANK2:
   809                           	callstack 0
   810  000200                     work_sw@buffer:
   811                           	callstack 0
   812                           
   813                           ; 128 bytes @ 0x0
   814  000200                     	ds	128
   815                           
   816                           	psect	cstackBANK0
   817  000060                     __pcstackBANK0:
   818                           	callstack 0
   819  000060                     ?_vfprintf:
   820                           	callstack 0
   821  000060                     ?_lp_filter:
   822                           	callstack 0
   823  000060                     vfprintf@fp:
   824                           	callstack 0
   825  000060                     lp_filter@new:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x0
   829  000060                     	ds	2
   830  000062                     vfprintf@fmt:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x2
   834  000062                     	ds	1
   835  000063                     vfprintf@ap:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x3
   839  000063                     	ds	1
   840  000064                     ?_sprintf:
   841                           	callstack 0
   842  000064                     ?_printf:
   843                           	callstack 0
   844  000064                     printf@fmt:
   845                           	callstack 0
   846  000064                     lp_filter@bn:
   847                           	callstack 0
   848  000064                     sprintf@s:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x4
   852  000064                     	ds	2
   853  000066                     sprintf@fmt:
   854                           	callstack 0
   855  000066                     lp_filter@slow:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x6
   859  000066                     	ds	2
   860  000068                     _lp_filter$3840:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x8
   864  000068                     	ds	1
   865  000069                     printf@ap:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x9
   869  000069                     	ds	3
   870  00006C                     lp_filter@lp_speed:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0xC
   874  00006C                     	ds	1
   875  00006D                     sprintf@ap:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0xD
   879  00006D                     	ds	1
   880  00006E                     sprintf@f:
   881                           	callstack 0
   882                           
   883                           ; 6 bytes @ 0xE
   884  00006E                     	ds	2
   885  000070                     lp_filter@lp_x:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x10
   889  000070                     	ds	4
   890  000074                     ?___fltol:
   891                           	callstack 0
   892  000074                     ___fltol@f1:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x14
   896  000074                     	ds	4
   897  000078                     ___fltol@sign1:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x18
   901  000078                     	ds	1
   902  000079                     ___fltol@exp1:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x19
   906  000079                     	ds	1
   907  00007A                     calc_pot@value:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x1A
   911  00007A                     	ds	2
   912  00007C                     ??_calc_pot:
   913                           
   914                           ; 1 bytes @ 0x1C
   915  00007C                     	ds	2
   916  00007E                     ??_Digital232_RW:
   917                           
   918                           ; 1 bytes @ 0x1E
   919  00007E                     	ds	2
   920  000080                     Digital232_RW@i:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x20
   924  000080                     	ds	1
   925  000081                     Digital232_RW@j:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x21
   929  000081                     	ds	1
   930  000082                     main@buffer:
   931                           	callstack 0
   932                           
   933                           ; 24 bytes @ 0x22
   934  000082                     	ds	25
   935  00009B                     main@y:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x3B
   939  00009B                     	ds	1
   940                           
   941                           	psect	cstackCOMRAM
   942  000001                     __pcstackCOMRAM:
   943                           	callstack 0
   944  000001                     
   945                           ; 1 bytes @ 0x0
   946  000001                     	ds	2
   947  000003                     TMR6_DefaultInterruptHandler@i:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x2
   951  000003                     	ds	1
   952  000004                     ??_TMR5_DefaultInterruptHandler:
   953  000004                     TMR5_WriteTimer@timerVal:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x3
   957  000004                     	ds	1
   958  000005                     
   959                           ; 1 bytes @ 0x4
   960  000005                     	ds	1
   961  000006                     ?_strlen:
   962                           	callstack 0
   963  000006                     ?_ADCC_GetConversionResult:
   964                           	callstack 0
   965  000006                     ?___awdiv:
   966                           	callstack 0
   967  000006                     ?___fladd:
   968                           	callstack 0
   969  000006                     ?___xxtofl:
   970                           	callstack 0
   971  000006                     ?___omul:
   972                           	callstack 0
   973  000006                     ?___aodiv:
   974                           	callstack 0
   975  000006                     ?___aomod:
   976                           	callstack 0
   977  000006                     INTERRUPT_Initialize@state:
   978                           	callstack 0
   979  000006                     UART2_Read@readValue:
   980                           	callstack 0
   981  000006                     UART2_Write@txData:
   982                           	callstack 0
   983  000006                     ADCC_StartConversion@channel:
   984                           	callstack 0
   985  000006                     SPI1_Exchange8bit@data:
   986                           	callstack 0
   987  000006                     lcd_inc_page@s:
   988                           	callstack 0
   989  000006                     PWM8_LoadDutyValue@dutyValue:
   990                           	callstack 0
   991  000006                     once@once_flag:
   992                           	callstack 0
   993  000006                     StartTimer@count:
   994                           	callstack 0
   995  000006                     lcd_inc_column@s:
   996                           	callstack 0
   997  000006                     ___awdiv@dividend:
   998                           	callstack 0
   999  000006                     srand@s:
  1000                           	callstack 0
  1001  000006                     strlen@s:
  1002                           	callstack 0
  1003  000006                     UART1_SetFramingErrorHandler@interruptHandler:
  1004                           	callstack 0
  1005  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
  1006                           	callstack 0
  1007  000006                     UART1_SetErrorHandler@interruptHandler:
  1008                           	callstack 0
  1009  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
  1010                           	callstack 0
  1011  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
  1012                           	callstack 0
  1013  000006                     UART2_SetFramingErrorHandler@interruptHandler:
  1014                           	callstack 0
  1015  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
  1016                           	callstack 0
  1017  000006                     UART2_SetErrorHandler@interruptHandler:
  1018                           	callstack 0
  1019  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
  1020                           	callstack 0
  1021  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
  1022                           	callstack 0
  1023  000006                     TMR6_SetInterruptHandler@InterruptHandler:
  1024                           	callstack 0
  1025  000006                     TMR5_SetInterruptHandler@InterruptHandler:
  1026                           	callstack 0
  1027  000006                     wdtdelay@delay:
  1028                           	callstack 0
  1029  000006                     ___fladd@b:
  1030                           	callstack 0
  1031  000006                     ___xxtofl@val:
  1032                           	callstack 0
  1033  000006                     ___omul@multiplier:
  1034                           	callstack 0
  1035  000006                     ___aodiv@dividend:
  1036                           	callstack 0
  1037  000006                     ___aomod@dividend:
  1038                           	callstack 0
  1039                           
  1040                           ; 8 bytes @ 0x5
  1041  000006                     	ds	1
  1042  000007                     putch@txData:
  1043                           	callstack 0
  1044  000007                     lcd_inc_page@p:
  1045                           	callstack 0
  1046  000007                     lcd_command@cmd:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x6
  1050  000007                     	ds	1
  1051  000008                     ??_StartTimer:
  1052  000008                     ??_srand:
  1053  000008                     ??_PWM8_LoadDutyValue:
  1054  000008                     ??_ADCC_GetConversionResult:
  1055  000008                     TimerDone@timer:
  1056                           	callstack 0
  1057  000008                     lcd_inc_column@c:
  1058                           	callstack 0
  1059  000008                     ___awdiv@divisor:
  1060                           	callstack 0
  1061  000008                     fputc@c:
  1062                           	callstack 0
  1063  000008                     strlen@a:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x7
  1067  000008                     	ds	1
  1068  000009                     ??_TMR5_Initialize:
  1069  000009                     
  1070                           ; 1 bytes @ 0x8
  1071  000009                     	ds	1
  1072  00000A                     ??___xxtofl:
  1073  00000A                     StartTimer@timer:
  1074                           	callstack 0
  1075  00000A                     send_lcd_cmd@cmd:
  1076                           	callstack 0
  1077  00000A                     lcd_moveto_xy@column:
  1078                           	callstack 0
  1079  00000A                     lcd_data@data:
  1080                           	callstack 0
  1081  00000A                     ___awdiv@counter:
  1082                           	callstack 0
  1083  00000A                     eaDogM_WriteString@strPtr:
  1084                           	callstack 0
  1085  00000A                     fputc@fp:
  1086                           	callstack 0
  1087  00000A                     ___fladd@a:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x9
  1091  00000A                     	ds	1
  1092  00000B                     lcd_moveto_xy@page:
  1093                           	callstack 0
  1094  00000B                     ___awdiv@sign:
  1095                           	callstack 0
  1096  00000B                     WaitMs@numMilliseconds:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0xA
  1100  00000B                     	ds	1
  1101  00000C                     ??_fputc:
  1102  00000C                     eaDogM_WriteString@i:
  1103                           	callstack 0
  1104  00000C                     lcd_move_xy@columns:
  1105                           	callstack 0
  1106  00000C                     ___awdiv@quotient:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0xB
  1110  00000C                     	ds	1
  1111  00000D                     eaDogM_WriteString@bytesWritten:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0xC
  1115  00000D                     	ds	1
  1116  00000E                     ??___fladd:
  1117  00000E                     eaDogM_WriteStringAtPos@c:
  1118                           	callstack 0
  1119  00000E                     lcd_move_xy@pages:
  1120                           	callstack 0
  1121  00000E                     ___xxtofl@sign:
  1122                           	callstack 0
  1123  00000E                     led_lightshow@speed:
  1124                           	callstack 0
  1125  00000E                     ___omul@multiplicand:
  1126                           	callstack 0
  1127  00000E                     ___aodiv@divisor:
  1128                           	callstack 0
  1129  00000E                     ___aomod@divisor:
  1130                           	callstack 0
  1131                           
  1132                           ; 8 bytes @ 0xD
  1133  00000E                     	ds	1
  1134  00000F                     lcd_clear_area@columns:
  1135                           	callstack 0
  1136  00000F                     ___xxtofl@exp:
  1137                           	callstack 0
  1138  00000F                     eaDogM_WriteStringAtPos@strPtr:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0xE
  1142  00000F                     	ds	1
  1143  000010                     ??_led_lightshow:
  1144  000010                     lcd_clear_area@style:
  1145                           	callstack 0
  1146  000010                     ___xxtofl@arg:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0xF
  1150  000010                     	ds	1
  1151  000011                     ??_lcd_clear_area:
  1152  000011                     ?_stoa:
  1153                           	callstack 0
  1154  000011                     eaDogM_WriteStringAtPos@r:
  1155                           	callstack 0
  1156  000011                     stoa@fp:
  1157                           	callstack 0
  1158  000011                     fputs@s:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x10
  1162  000011                     	ds	1
  1163  000012                     led_lightshow@seq:
  1164                           	callstack 0
  1165  000012                     ___fladd@signs:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x11
  1169  000012                     	ds	1
  1170  000013                     lcd_clear_area@inv:
  1171                           	callstack 0
  1172  000013                     ___fladd@aexp:
  1173                           	callstack 0
  1174  000013                     stoa@s:
  1175                           	callstack 0
  1176  000013                     fputs@fp:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x12
  1180  000013                     	ds	1
  1181  000014                     ___fladd@bexp:
  1182                           	callstack 0
  1183  000014                     _lcd_clear_area$2772:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x13
  1187  000014                     	ds	1
  1188  000015                     ??_stoa:
  1189  000015                     ___fladd@grs:
  1190                           	callstack 0
  1191  000015                     fputs@c:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x14
  1195  000015                     	ds	1
  1196  000016                     ?___flmul:
  1197                           	callstack 0
  1198  000016                     lcd_clear_area@i:
  1199                           	callstack 0
  1200  000016                     ___aodiv@counter:
  1201                           	callstack 0
  1202  000016                     ___aomod@counter:
  1203                           	callstack 0
  1204  000016                     fputs@i:
  1205                           	callstack 0
  1206  000016                     ___flmul@b:
  1207                           	callstack 0
  1208  000016                     stoa@nuls:
  1209                           	callstack 0
  1210  000016                     ___omul@product:
  1211                           	callstack 0
  1212                           
  1213                           ; 8 bytes @ 0x15
  1214  000016                     	ds	1
  1215  000017                     lcd_clear_area@j:
  1216                           	callstack 0
  1217  000017                     ___aodiv@sign:
  1218                           	callstack 0
  1219  000017                     ___aomod@sign:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x16
  1223  000017                     	ds	1
  1224  000018                     ?_abs:
  1225                           	callstack 0
  1226  000018                     ?_pad:
  1227                           	callstack 0
  1228  000018                     lcd_clear_area@max:
  1229                           	callstack 0
  1230  000018                     pad@fp:
  1231                           	callstack 0
  1232  000018                     abs@a:
  1233                           	callstack 0
  1234  000018                     ___aodiv@quotient:
  1235                           	callstack 0
  1236                           
  1237                           ; 8 bytes @ 0x17
  1238  000018                     	ds	1
  1239  000019                     lcd_clear_area@pages:
  1240                           	callstack 0
  1241                           
  1242                           ; 1 bytes @ 0x18
  1243  000019                     	ds	1
  1244  00001A                     ??_abs:
  1245  00001A                     lcd_clear_area_xy@columns:
  1246                           	callstack 0
  1247  00001A                     pad@buf:
  1248                           	callstack 0
  1249  00001A                     ___flmul@a:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x19
  1253  00001A                     	ds	1
  1254  00001B                     lcd_clear_area_xy@style:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x1A
  1258  00001B                     	ds	1
  1259  00001C                     lcd_clear_area_xy@page:
  1260                           	callstack 0
  1261  00001C                     pad@p:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x1B
  1265  00001C                     	ds	1
  1266  00001D                     lcd_clear_area_xy@col:
  1267                           	callstack 0
  1268  00001D                     stoa@i:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x1C
  1272  00001D                     	ds	1
  1273  00001E                     ??___flmul:
  1274  00001E                     ??_pad:
  1275  00001E                     ?_rand:
  1276                           	callstack 0
  1277  00001E                     lcd_clear_area_xy@pages:
  1278                           	callstack 0
  1279                           
  1280                           ; 1 bytes @ 0x1D
  1281  00001E                     	ds	1
  1282  00001F                     pad@i:
  1283                           	callstack 0
  1284  00001F                     stoa@w:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x1E
  1288  00001F                     	ds	1
  1289  000020                     ??_rand:
  1290                           
  1291                           ; 1 bytes @ 0x1F
  1292  000020                     	ds	1
  1293  000021                     pad@w:
  1294                           	callstack 0
  1295  000021                     stoa@cp:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x20
  1299  000021                     	ds	1
  1300  000022                     ___flmul@sign:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x21
  1304  000022                     	ds	1
  1305  000023                     ?_dtoa:
  1306                           	callstack 0
  1307  000023                     ___flmul@aexp:
  1308                           	callstack 0
  1309  000023                     dtoa@fp:
  1310                           	callstack 0
  1311  000023                     stoa@p:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x22
  1315  000023                     	ds	1
  1316  000024                     ___flmul@bexp:
  1317                           	callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x23
  1320  000024                     	ds	1
  1321  000025                     stoa@l:
  1322                           	callstack 0
  1323  000025                     ___flmul@grs:
  1324                           	callstack 0
  1325  000025                     dtoa@d:
  1326                           	callstack 0
  1327                           
  1328                           ; 8 bytes @ 0x24
  1329  000025                     	ds	4
  1330  000029                     ___flmul@prod:
  1331                           	callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x28
  1334  000029                     	ds	4
  1335  00002D                     ??_dtoa:
  1336  00002D                     ___flmul@temp:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x2C
  1340  00002D                     	ds	2
  1341  00002F                     ?___flsub:
  1342                           	callstack 0
  1343  00002F                     ___flsub@b:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x2E
  1347  00002F                     	ds	4
  1348  000033                     ___flsub@a:
  1349                           	callstack 0
  1350                           
  1351                           ; 4 bytes @ 0x32
  1352  000033                     	ds	2
  1353  000035                     _dtoa$3288:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x34
  1357  000035                     	ds	2
  1358  000037                     ?___fldiv:
  1359                           	callstack 0
  1360  000037                     dtoa@p:
  1361                           	callstack 0
  1362  000037                     ___fldiv@b:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x36
  1366  000037                     	ds	2
  1367  000039                     dtoa@w:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x38
  1371  000039                     	ds	2
  1372  00003B                     dtoa@s:
  1373                           	callstack 0
  1374  00003B                     ___fldiv@a:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x3A
  1378  00003B                     	ds	2
  1379  00003D                     dtoa@n:
  1380                           	callstack 0
  1381                           
  1382                           ; 8 bytes @ 0x3C
  1383  00003D                     	ds	2
  1384  00003F                     ??___fldiv:
  1385                           
  1386                           ; 1 bytes @ 0x3E
  1387  00003F                     	ds	4
  1388  000043                     ___fldiv@rem:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x42
  1392  000043                     	ds	2
  1393  000045                     dtoa@i:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x44
  1397  000045                     	ds	2
  1398  000047                     ?_vfpfcnvrt:
  1399                           	callstack 0
  1400  000047                     ___fldiv@sign:
  1401                           	callstack 0
  1402  000047                     vfpfcnvrt@fp:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x46
  1406  000047                     	ds	1
  1407  000048                     ___fldiv@new_exp:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x47
  1411  000048                     	ds	1
  1412  000049                     vfpfcnvrt@fmt:
  1413                           	callstack 0
  1414                           
  1415                           ; 1 bytes @ 0x48
  1416  000049                     	ds	1
  1417  00004A                     vfpfcnvrt@ap:
  1418                           	callstack 0
  1419  00004A                     ___fldiv@grs:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x49
  1423  00004A                     	ds	1
  1424  00004B                     vfpfcnvrt@ll:
  1425                           	callstack 0
  1426                           
  1427                           ; 8 bytes @ 0x4A
  1428  00004B                     	ds	3
  1429  00004E                     ___fldiv@bexp:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x4D
  1433  00004E                     	ds	1
  1434  00004F                     ___fldiv@aexp:
  1435                           	callstack 0
  1436                           
  1437                           ; 1 bytes @ 0x4E
  1438  00004F                     	ds	1
  1439  000050                     ??_lp_filter:
  1440                           
  1441                           ; 1 bytes @ 0x4F
  1442  000050                     	ds	2
  1443  000052                     ??___fltol:
  1444                           
  1445                           ; 1 bytes @ 0x51
  1446  000052                     	ds	1
  1447  000053                     vfpfcnvrt@cp:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x52
  1451  000053                     	ds	2
  1452  000055                     vfprintf@cfmt:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x54
  1456  000055                     	ds	1
  1457  000056                     
  1458                           ; 1 bytes @ 0x55
  1459 ;;
  1460 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1461 ;;
  1462 ;; *************** function _main *****************
  1463 ;; Defined at:
  1464 ;;		line 103 in file "main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  buffer         24   34[BANK0 ] unsigned char [24]
  1469 ;;  y               1   59[BANK0 ] unsigned char 
  1470 ;;  x               1    0        unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 3F/3D
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1481 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1483 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1484 ;;Total ram usage:       26 bytes
  1485 ;; Hardware stack levels required when called:   14
  1486 ;; This function calls:
  1487 ;;		_Digital232_RW
  1488 ;;		_Digital232_init
  1489 ;;		_SYSTEM_Initialize
  1490 ;;		_StartTimer
  1491 ;;		_TimerDone
  1492 ;;		___awdiv
  1493 ;;		___fldiv
  1494 ;;		___xxtofl
  1495 ;;		_eaDogM_WriteStringAtPos
  1496 ;;		_init_display
  1497 ;;		_lcd_command
  1498 ;;		_lcd_data
  1499 ;;		_led_lightshow
  1500 ;;		_once
  1501 ;;		_rand
  1502 ;;		_sprintf
  1503 ;;		_srand
  1504 ;;		_work_sw
  1505 ;; This function is called by:
  1506 ;;		Startup code after reset
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text0
  1511  004840                     __ptext0:
  1512                           	callstack 0
  1513  004840                     _main:
  1514                           	callstack 17
  1515                           
  1516                           ;incstack = 0
  1517  004840  0E00               	movlw	0
  1518  004842  0100               	movlb	0	; () banked
  1519  004844  6F9B               	movwf	main@y& (0+255),b
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 106:  char buffer[24];;main.c: 108:  SYSTEM_Initialize();
  1523  004846  EC74  F024         	call	_SYSTEM_Initialize	;wreg free
  1524                           
  1525                           ; BSR set to: 61
  1526                           ;main.c: 115:  (INTCON0bits.GIEH = 1);
  1527  00484A  8ED2               	bsf	210,7,c	;volatile
  1528                           
  1529                           ; BSR set to: 61
  1530                           ;main.c: 118:  (INTCON0bits.GIEL = 1);
  1531  00484C  8CD2               	bsf	210,6,c	;volatile
  1532                           
  1533                           ; BSR set to: 61
  1534                           ;main.c: 126:  IO.input_ok = 0;
  1535  00484E  0E00               	movlw	0
  1536  004850  0101               	movlb	1	; () banked
  1537  004852  6FB3               	movwf	(_IO+10)& (0+255),b
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;main.c: 127:  IO.output_ok = 0;
  1541  004854  0E00               	movlw	0
  1542  004856  6FB4               	movwf	(_IO+11)& (0+255),b
  1543                           
  1544                           ; BSR set to: 1
  1545                           ;main.c: 128:  IO.d232 = D232_IDLE;
  1546  004858  0E00               	movlw	0
  1547  00485A  6FB6               	movwf	(_IO+13)& (0+255),b
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;main.c: 129:  IO.io = IO_IDLE;
  1551  00485C  0E00               	movlw	0
  1552  00485E  6FB5               	movwf	(_IO+12)& (0+255),b
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;main.c: 131:  init_display();
  1556  004860  EC76  F026         	call	_init_display	;wreg free
  1557  004864                     l8144:
  1558                           
  1559                           ; BSR set to: 61
  1560                           ;main.c: 134:   lcd_data(0xff);
  1561  004864  0EFF               	movlw	255
  1562  004866  ECA0  F026         	call	_lcd_data
  1563                           
  1564                           ;main.c: 135:   lcd_data(0x00);
  1565  00486A  0E00               	movlw	0
  1566  00486C  ECA0  F026         	call	_lcd_data
  1567                           
  1568                           ;main.c: 136:   lcd_command(0xAE | 1);
  1569  004870  0EAF               	movlw	175
  1570  004872  EC1B  F027         	call	_lcd_command
  1571  004876  D7F6               	goto	l8144
  1572  004878                     __end_of_main:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _work_sw *****************
  1576 ;; Defined at:
  1577 ;;		line 85 in file "main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  buffer        128    0[BANK2 ] unsigned char [64][2]
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1592 ;;      Locals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1594 ;;      Totals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1595 ;;Total ram usage:      128 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:   13
  1598 ;; This function calls:
  1599 ;;		_StartTimer
  1600 ;;		_TimerDone
  1601 ;;		_eaDogM_WriteStringAtPos
  1602 ;;		_sprintf
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text1
  1609  00429A                     __ptext1:
  1610                           	callstack 0
  1611  00429A                     _work_sw:
  1612                           	callstack 17
  1613                           
  1614                           ;main.c: 87:  char buffer[2][64];;main.c: 88:  if (TimerDone(TMR_INIT)) {
  1615                           
  1616                           ; BSR set to: 61
  1617                           ;incstack = 0
  1618  00429A  0E01               	movlw	1
  1619  00429C  ECA6  F025         	call	_TimerDone
  1620  0042A0  0900               	iorlw	0
  1621  0042A2  B4D8               	btfsc	status,2,c
  1622  0042A4  0012               	return	
  1623                           
  1624                           ;main.c: 89:   IO.clock++;
  1625  0042A6  0101               	movlb	1	; () banked
  1626  0042A8  4BC8               	infsnz	(_IO+31)& (0+255),f,b
  1627  0042AA  2BC9               	incf	(_IO+32)& (0+255),f,b
  1628                           
  1629                           ; BSR set to: 1
  1630                           ;main.c: 90:   sprintf(buffer[0], " H %i, M %i     ", IO.hits, IO.misses);
  1631  0042AC  0E00               	movlw	low work_sw@buffer
  1632  0042AE  0100               	movlb	0	; () banked
  1633  0042B0  6F64               	movwf	sprintf@s& (0+255),b
  1634  0042B2  0E02               	movlw	high work_sw@buffer
  1635  0042B4  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1636  0042B6  0E01               	movlw	low STR_1
  1637  0042B8  6F66               	movwf	sprintf@fmt& (0+255),b
  1638  0042BA  C1BB  F067         	movff	_IO+18,?_sprintf+3
  1639  0042BE  6B68               	clrf	(?_sprintf+4)& (0+255),b
  1640  0042C0  C1BC  F069         	movff	_IO+19,?_sprintf+5
  1641  0042C4  6B6A               	clrf	(?_sprintf+6)& (0+255),b
  1642  0042C6  ECA3  F023         	call	_sprintf	;wreg free
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;main.c: 91:   sprintf(buffer[1], " Score %i %i    ", IO.score, otto_b1.result);
  1646  0042CA  0E40               	movlw	low (work_sw@buffer+64)
  1647  0042CC  6F64               	movwf	sprintf@s& (0+255),b
  1648  0042CE  0E02               	movlw	high (work_sw@buffer+64)
  1649  0042D0  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1650  0042D2  0E12               	movlw	low STR_2
  1651  0042D4  6F66               	movwf	sprintf@fmt& (0+255),b
  1652  0042D6  C1BD  F067         	movff	_IO+20,?_sprintf+3
  1653  0042DA  6B68               	clrf	(?_sprintf+4)& (0+255),b
  1654  0042DC  C1DE  F069         	movff	_otto_b1+12,?_sprintf+5
  1655  0042E0  C1DF  F06A         	movff	_otto_b1+13,?_sprintf+6
  1656  0042E4  ECA3  F023         	call	_sprintf	;wreg free
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;main.c: 93:   buffer[1][16] = 0;
  1660  0042E8  0E00               	movlw	0
  1661  0042EA  0102               	movlb	2	; () banked
  1662  0042EC  6F50               	movwf	(work_sw@buffer+80)& (0+255),b
  1663                           
  1664                           ; BSR set to: 2
  1665                           ;main.c: 94:   eaDogM_WriteStringAtPos(1, 0, buffer[0]);
  1666  0042EE  0E00               	movlw	0
  1667  0042F0  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1668  0042F2  0E00               	movlw	low work_sw@buffer
  1669  0042F4  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1670  0042F6  0E02               	movlw	high work_sw@buffer
  1671  0042F8  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1672  0042FA  0E01               	movlw	1
  1673  0042FC  EC58  F026         	call	_eaDogM_WriteStringAtPos
  1674                           
  1675                           ;main.c: 95:   eaDogM_WriteStringAtPos(2, 0, buffer[1]);
  1676  004300  0E00               	movlw	0
  1677  004302  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1678  004304  0E40               	movlw	low (work_sw@buffer+64)
  1679  004306  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1680  004308  0E02               	movlw	high (work_sw@buffer+64)
  1681  00430A  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1682  00430C  0E02               	movlw	2
  1683  00430E  EC58  F026         	call	_eaDogM_WriteStringAtPos
  1684                           
  1685                           ;main.c: 96:   StartTimer(TMR_INIT, 500);
  1686  004312  0E01               	movlw	1
  1687  004314  6E07               	movwf	(StartTimer@count+1)^0,c
  1688  004316  0EF4               	movlw	244
  1689  004318  6E06               	movwf	StartTimer@count^0,c
  1690  00431A  0E01               	movlw	1
  1691  00431C  EC3C  F025         	call	_StartTimer
  1692  004320  0012               	return		;funcret
  1693  004322                     __end_of_work_sw:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _sprintf *****************
  1697 ;; Defined at:
  1698 ;;		line 9 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/nf_sprintf.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  s               2    4[BANK0 ] PTR unsigned char 
  1701 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1702 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  1703 ;;		 -> STR_3(12), STR_2(17), STR_1(17), 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  f               6   14[BANK0 ] struct _IO_FILE
  1706 ;;  ret             2    0        int 
  1707 ;;  ap              1   13[BANK0 ] PTR void [1]
  1708 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2    4[BANK0 ] int 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 3F/0
  1715 ;;		On exit  : 3F/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1718 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1719 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1721 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1722 ;;Total ram usage:       16 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:   12
  1725 ;; This function calls:
  1726 ;;		_vfprintf
  1727 ;; This function is called by:
  1728 ;;		_work_sw
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text2
  1734  004746                     __ptext2:
  1735                           	callstack 0
  1736  004746                     _sprintf:
  1737                           	callstack 17
  1738                           
  1739                           ; BSR set to: 0
  1740                           
  1741                           ;incstack = 0
  1742  004746  0E67               	movlw	low (?_sprintf+3)
  1743  004748  6F6D               	movwf	sprintf@ap& (0+255),b
  1744  00474A  C064  F06E         	movff	sprintf@s,sprintf@f
  1745  00474E  C065  F06F         	movff	sprintf@s+1,sprintf@f+1
  1746                           
  1747                           ; BSR set to: 0
  1748  004752  0E00               	movlw	0
  1749  004754  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1750  004756  0E00               	movlw	0
  1751  004758  6F70               	movwf	(sprintf@f+2)& (0+255),b
  1752                           
  1753                           ; BSR set to: 0
  1754  00475A  0E00               	movlw	0
  1755  00475C  6F73               	movwf	(sprintf@f+5)& (0+255),b
  1756  00475E  0E00               	movlw	0
  1757  004760  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1758                           
  1759                           ; BSR set to: 0
  1760  004762  0E6E               	movlw	low sprintf@f
  1761  004764  6F60               	movwf	vfprintf@fp& (0+255),b
  1762  004766  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  1763  004768  C066  F062         	movff	sprintf@fmt,vfprintf@fmt
  1764  00476C  0E6D               	movlw	low sprintf@ap
  1765  00476E  6F63               	movwf	vfprintf@ap& (0+255),b
  1766  004770  ECA6  F022         	call	_vfprintf	;wreg free
  1767                           
  1768                           ; BSR set to: 1
  1769  004774  0100               	movlb	0	; () banked
  1770  004776  5170               	movf	(sprintf@f+2)& (0+255),w,b
  1771  004778  2564               	addwf	sprintf@s& (0+255),w,b
  1772  00477A  6ED9               	movwf	fsr2l,c
  1773  00477C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1774  00477E  2165               	addwfc	(sprintf@s+1)& (0+255),w,b
  1775  004780  6EDA               	movwf	fsr2h,c
  1776  004782  0E00               	movlw	0
  1777  004784  6EDF               	movwf	indf2,c
  1778                           
  1779                           ; BSR set to: 0
  1780  004786  0012               	return		;funcret
  1781  004788                     __end_of_sprintf:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _eaDogM_WriteStringAtPos *****************
  1785 ;; Defined at:
  1786 ;;		line 116 in file "eadog.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  r               1    wreg     const unsigned char 
  1789 ;;  c               1   13[COMRAM] const unsigned char 
  1790 ;;  strPtr          2   14[COMRAM] PTR unsigned char 
  1791 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  r               1   16[COMRAM] const unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/2
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1803 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1807 ;;Total ram usage:        4 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    6
  1810 ;; This function calls:
  1811 ;;		_eaDogM_WriteString
  1812 ;;		_send_lcd_cmd
  1813 ;; This function is called by:
  1814 ;;		_work_sw
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text3
  1820  004CB0                     __ptext3:
  1821                           	callstack 0
  1822  004CB0                     _eaDogM_WriteStringAtPos:
  1823                           	callstack 23
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;incstack = 0
  1827                           ;eaDogM_WriteStringAtPos@r stored from wreg
  1828  004CB0  6E11               	movwf	eaDogM_WriteStringAtPos@r^0,c
  1829                           
  1830                           ;eadog.c: 116: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 117: {;eadog.c: 118:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  1831  004CB2  5011               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  1832  004CB4  0D10               	mullw	16
  1833  004CB6  50F3               	movf	243,w,c
  1834  004CB8  240E               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  1835  004CBA  0F80               	addlw	128
  1836  004CBC  EC3C  F024         	call	_send_lcd_cmd
  1837                           
  1838                           ; BSR set to: 1
  1839                           ;eadog.c: 119:  eaDogM_WriteString(strPtr);
  1840  004CC0  C00F  F00A         	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  1841  004CC4  C010  F00B         	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  1842  004CC8  EC12  F022         	call	_eaDogM_WriteString	;wreg free
  1843  004CCC  0012               	return		;funcret
  1844  004CCE                     __end_of_eaDogM_WriteStringAtPos:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _send_lcd_cmd *****************
  1848 ;; Defined at:
  1849 ;;		line 49 in file "eadog.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  cmd             1    wreg     const unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  cmd             1    9[COMRAM] const unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/2
  1860 ;;		On exit  : 3F/1
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1867 ;;Total ram usage:        1 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    5
  1870 ;; This function calls:
  1871 ;;		_SPI1_Exchange8bit
  1872 ;;		_wdtdelay
  1873 ;; This function is called by:
  1874 ;;		_eaDogM_WriteStringAtPos
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text4
  1879  004878                     __ptext4:
  1880                           	callstack 0
  1881  004878                     _send_lcd_cmd:
  1882                           	callstack 23
  1883                           
  1884                           ;incstack = 0
  1885                           ;send_lcd_cmd@cmd stored from wreg
  1886  004878  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  1887                           
  1888                           ;eadog.c: 49: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 50: {;eadog.c: 51:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  1889  00487A  92BC               	bcf	188,1,c	;volatile
  1890                           
  1891                           ;eadog.c: 52:  do { LATCbits.LATC2 = 0; } while(0);
  1892  00487C  94BC               	bcf	188,2,c	;volatile
  1893                           
  1894                           ;eadog.c: 53:  wdtdelay(10);
  1895  00487E  0E0A               	movlw	10
  1896  004880  6E06               	movwf	wdtdelay@delay^0,c
  1897  004882  0E00               	movlw	0
  1898  004884  6E07               	movwf	(wdtdelay@delay+1)^0,c
  1899  004886  0E00               	movlw	0
  1900  004888  6E08               	movwf	(wdtdelay@delay+2)^0,c
  1901  00488A  0E00               	movlw	0
  1902  00488C  6E09               	movwf	(wdtdelay@delay+3)^0,c
  1903  00488E  EC03  F024         	call	_wdtdelay	;wreg free
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;eadog.c: 54:  SPI1_Exchange8bit(cmd);
  1907  004892  500A               	movf	send_lcd_cmd@cmd^0,w,c
  1908  004894  ECBC  F026         	call	_SPI1_Exchange8bit
  1909                           
  1910                           ; BSR set to: 61
  1911                           ;eadog.c: 55:  wdtdelay(10);
  1912  004898  0E0A               	movlw	10
  1913  00489A  6E06               	movwf	wdtdelay@delay^0,c
  1914  00489C  0E00               	movlw	0
  1915  00489E  6E07               	movwf	(wdtdelay@delay+1)^0,c
  1916  0048A0  0E00               	movlw	0
  1917  0048A2  6E08               	movwf	(wdtdelay@delay+2)^0,c
  1918  0048A4  0E00               	movlw	0
  1919  0048A6  6E09               	movwf	(wdtdelay@delay+3)^0,c
  1920  0048A8  EC03  F024         	call	_wdtdelay	;wreg free
  1921                           
  1922                           ; BSR set to: 1
  1923  0048AC  82BC               	bsf	188,1,c	;volatile
  1924                           
  1925                           ; BSR set to: 1
  1926  0048AE  0012               	return		;funcret
  1927  0048B0                     __end_of_send_lcd_cmd:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _eaDogM_WriteString *****************
  1931 ;; Defined at:
  1932 ;;		line 97 in file "eadog.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  1935 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  bytesWritten    1   12[COMRAM] unsigned char 
  1938 ;;  i               1   11[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 3F/1
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1952 ;;Total ram usage:        4 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    5
  1955 ;; This function calls:
  1956 ;;		_SPI1_Exchange8bit
  1957 ;;		_strlen
  1958 ;;		_wdtdelay
  1959 ;; This function is called by:
  1960 ;;		_eaDogM_WriteStringAtPos
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text5
  1965  004424                     __ptext5:
  1966                           	callstack 0
  1967  004424                     _eaDogM_WriteString:
  1968                           	callstack 23
  1969                           
  1970                           ; BSR set to: 1
  1971                           ;eadog.c: 97: void eaDogM_WriteString(char *strPtr);eadog.c: 98: {;eadog.c: 99:  uint8_t
      +                           i = strlen(strPtr);
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;incstack = 0
  1975  004424  C00A  F006         	movff	eaDogM_WriteString@strPtr,strlen@s
  1976  004428  C00B  F007         	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  1977  00442C  ECCE  F022         	call	_strlen	;wreg free
  1978  004430  5006               	movf	?_strlen^0,w,c
  1979  004432  6E0C               	movwf	eaDogM_WriteString@i^0,c
  1980                           
  1981                           ;eadog.c: 100:  uint8_t bytesWritten = 0;
  1982  004434  0E00               	movlw	0
  1983  004436  6E0D               	movwf	eaDogM_WriteString@bytesWritten^0,c
  1984  004438  82BC               	bsf	188,1,c	;volatile
  1985  00443A  94BC               	bcf	188,2,c	;volatile
  1986                           
  1987                           ;eadog.c: 104:  if (i > 64) {
  1988  00443C  0E40               	movlw	64
  1989  00443E  640C               	cpfsgt	eaDogM_WriteString@i^0,c
  1990  004440  D01F               	goto	l7374
  1991                           
  1992                           ;eadog.c: 105:   strPtr[64] = 0;
  1993  004442  EE20 F040          	lfsr	2,64
  1994  004446  500A               	movf	eaDogM_WriteString@strPtr^0,w,c
  1995  004448  26D9               	addwf	fsr2l,f,c
  1996  00444A  500B               	movf	(eaDogM_WriteString@strPtr+1)^0,w,c
  1997  00444C  22DA               	addwfc	fsr2h,f,c
  1998  00444E  0E00               	movlw	0
  1999  004450  6EDF               	movwf	indf2,c
  2000                           
  2001                           ;eadog.c: 106:   i = 64;
  2002  004452  0E40               	movlw	64
  2003  004454  6E0C               	movwf	eaDogM_WriteString@i^0,c
  2004  004456  D014               	goto	l7374
  2005  004458                     l7368:
  2006                           
  2007                           ;eadog.c: 110:   wdtdelay(9);
  2008  004458  0E09               	movlw	9
  2009  00445A  6E06               	movwf	wdtdelay@delay^0,c
  2010  00445C  0E00               	movlw	0
  2011  00445E  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2012  004460  0E00               	movlw	0
  2013  004462  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2014  004464  0E00               	movlw	0
  2015  004466  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2016  004468  EC03  F024         	call	_wdtdelay	;wreg free
  2017                           
  2018                           ; BSR set to: 1
  2019                           ;eadog.c: 111:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  2020  00446C  500D               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  2021  00446E  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  2022  004470  6ED9               	movwf	fsr2l,c
  2023  004472  0E00               	movlw	0
  2024  004474  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  2025  004476  6EDA               	movwf	fsr2h,c
  2026  004478  50DF               	movf	indf2,w,c
  2027  00447A  ECBC  F026         	call	_SPI1_Exchange8bit
  2028                           
  2029                           ; BSR set to: 61
  2030                           ;eadog.c: 112:   bytesWritten++;
  2031  00447E  2A0D               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  2032  004480                     l7374:
  2033                           
  2034                           ;eadog.c: 109:  while (bytesWritten < i) {
  2035  004480  500C               	movf	eaDogM_WriteString@i^0,w,c
  2036  004482  5C0D               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  2037  004484  B0D8               	btfsc	status,0,c
  2038  004486  0012               	return	
  2039  004488  D7E7               	goto	l7368
  2040  00448A                     __end_of_eaDogM_WriteString:
  2041                           	callstack 0
  2042                           
  2043 ;; *************** function _srand *****************
  2044 ;; Defined at:
  2045 ;;		line 10 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/rand.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  s               2    5[COMRAM] unsigned int 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 3F/1
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2063 ;;Total ram usage:        6 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    4
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text6
  2074  004A1A                     __ptext6:
  2075                           	callstack 0
  2076  004A1A                     _srand:
  2077                           	callstack 26
  2078                           
  2079                           ;incstack = 0
  2080  004A1A  0EFF               	movlw	255
  2081  004A1C  6E08               	movwf	??_srand^0,c
  2082  004A1E  0EFF               	movlw	255
  2083  004A20  6E09               	movwf	(??_srand+1)^0,c
  2084  004A22  C006  F00A         	movff	srand@s,??_srand+2
  2085  004A26  C007  F00B         	movff	srand@s+1,??_srand+3
  2086  004A2A  5008               	movf	??_srand^0,w,c
  2087  004A2C  260A               	addwf	(??_srand+2)^0,f,c
  2088  004A2E  5009               	movf	(??_srand+1)^0,w,c
  2089  004A30  220B               	addwfc	(??_srand+3)^0,f,c
  2090  004A32  C00A  F196         	movff	??_srand+2,_seed
  2091  004A36  C00B  F197         	movff	??_srand+3,_seed+1
  2092  004A3A  0101               	movlb	1	; () banked
  2093  004A3C  6B98               	clrf	(_seed+2)& (0+255),b
  2094  004A3E  6B99               	clrf	(_seed+3)& (0+255),b
  2095  004A40  6B9A               	clrf	(_seed+4)& (0+255),b
  2096  004A42  6B9B               	clrf	(_seed+5)& (0+255),b
  2097  004A44  6B9C               	clrf	(_seed+6)& (0+255),b
  2098  004A46  6B9D               	clrf	(_seed+7)& (0+255),b
  2099                           
  2100                           ; BSR set to: 1
  2101  004A48  0012               	return		;funcret
  2102  004A4A                     __end_of_srand:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function _rand *****************
  2106 ;; Defined at:
  2107 ;;		line 15 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/rand.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  2   29[COMRAM] int 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 3F/1
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2123 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2124 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2125 ;;Total ram usage:       10 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    5
  2128 ;; This function calls:
  2129 ;;		___omul
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text7
  2136  003B4E                     __ptext7:
  2137                           	callstack 0
  2138  003B4E                     _rand:
  2139                           	callstack 25
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;incstack = 0
  2143  003B4E  C196  F006         	movff	_seed,___omul@multiplier
  2144  003B52  C197  F007         	movff	_seed+1,___omul@multiplier+1
  2145  003B56  C198  F008         	movff	_seed+2,___omul@multiplier+2
  2146  003B5A  C199  F009         	movff	_seed+3,___omul@multiplier+3
  2147  003B5E  C19A  F00A         	movff	_seed+4,___omul@multiplier+4
  2148  003B62  C19B  F00B         	movff	_seed+5,___omul@multiplier+5
  2149  003B66  C19C  F00C         	movff	_seed+6,___omul@multiplier+6
  2150  003B6A  C19D  F00D         	movff	_seed+7,___omul@multiplier+7
  2151  003B6E  0E2D               	movlw	45
  2152  003B70  6E0E               	movwf	___omul@multiplicand^0,c
  2153  003B72  0E7F               	movlw	127
  2154  003B74  6E0F               	movwf	(___omul@multiplicand+1)^0,c
  2155  003B76  0E95               	movlw	149
  2156  003B78  6E10               	movwf	(___omul@multiplicand+2)^0,c
  2157  003B7A  0E4C               	movlw	76
  2158  003B7C  6E11               	movwf	(___omul@multiplicand+3)^0,c
  2159  003B7E  0E2D               	movlw	45
  2160  003B80  6E12               	movwf	(___omul@multiplicand+4)^0,c
  2161  003B82  0EF4               	movlw	244
  2162  003B84  6E13               	movwf	(___omul@multiplicand+5)^0,c
  2163  003B86  0E51               	movlw	81
  2164  003B88  6E14               	movwf	(___omul@multiplicand+6)^0,c
  2165  003B8A  0E58               	movlw	88
  2166  003B8C  6E15               	movwf	(___omul@multiplicand+7)^0,c
  2167  003B8E  EC08  F021         	call	___omul	;wreg free
  2168  003B92  C006  F020         	movff	?___omul,??_rand
  2169  003B96  C007  F021         	movff	?___omul+1,??_rand+1
  2170  003B9A  C008  F022         	movff	?___omul+2,??_rand+2
  2171  003B9E  C009  F023         	movff	?___omul+3,??_rand+3
  2172  003BA2  C00A  F024         	movff	?___omul+4,??_rand+4
  2173  003BA6  C00B  F025         	movff	?___omul+5,??_rand+5
  2174  003BAA  C00C  F026         	movff	?___omul+6,??_rand+6
  2175  003BAE  C00D  F027         	movff	?___omul+7,??_rand+7
  2176  003BB2  0E01               	movlw	1
  2177  003BB4  2420               	addwf	??_rand^0,w,c
  2178  003BB6  0101               	movlb	1	; () banked
  2179  003BB8  6F96               	movwf	_seed& (0+255),b
  2180  003BBA  0E00               	movlw	0
  2181  003BBC  2021               	addwfc	(??_rand+1)^0,w,c
  2182  003BBE  6F97               	movwf	(_seed+1)& (0+255),b
  2183  003BC0  0E00               	movlw	0
  2184  003BC2  2022               	addwfc	(??_rand+2)^0,w,c
  2185  003BC4  6F98               	movwf	(_seed+2)& (0+255),b
  2186  003BC6  0E00               	movlw	0
  2187  003BC8  2023               	addwfc	(??_rand+3)^0,w,c
  2188  003BCA  6F99               	movwf	(_seed+3)& (0+255),b
  2189  003BCC  0E00               	movlw	0
  2190  003BCE  2024               	addwfc	(??_rand+4)^0,w,c
  2191  003BD0  6F9A               	movwf	(_seed+4)& (0+255),b
  2192  003BD2  0E00               	movlw	0
  2193  003BD4  2025               	addwfc	(??_rand+5)^0,w,c
  2194  003BD6  6F9B               	movwf	(_seed+5)& (0+255),b
  2195  003BD8  0E00               	movlw	0
  2196  003BDA  2026               	addwfc	(??_rand+6)^0,w,c
  2197  003BDC  6F9C               	movwf	(_seed+6)& (0+255),b
  2198  003BDE  0E00               	movlw	0
  2199  003BE0  2027               	addwfc	(??_rand+7)^0,w,c
  2200  003BE2  6F9D               	movwf	(_seed+7)& (0+255),b
  2201                           
  2202                           ; BSR set to: 1
  2203  003BE4  C196  F020         	movff	_seed,??_rand
  2204  003BE8  C197  F021         	movff	_seed+1,??_rand+1
  2205  003BEC  C198  F022         	movff	_seed+2,??_rand+2
  2206  003BF0  C199  F023         	movff	_seed+3,??_rand+3
  2207  003BF4  C19A  F024         	movff	_seed+4,??_rand+4
  2208  003BF8  C19B  F025         	movff	_seed+5,??_rand+5
  2209  003BFC  C19C  F026         	movff	_seed+6,??_rand+6
  2210  003C00  C19D  F027         	movff	_seed+7,??_rand+7
  2211  003C04  0E32               	movlw	50
  2212  003C06  D009               	goto	u7900
  2213  003C08                     u7905:
  2214  003C08  90D8               	bcf	status,0,c
  2215  003C0A  3227               	rrcf	(??_rand+7)^0,f,c
  2216  003C0C  3226               	rrcf	(??_rand+6)^0,f,c
  2217  003C0E  3225               	rrcf	(??_rand+5)^0,f,c
  2218  003C10  3224               	rrcf	(??_rand+4)^0,f,c
  2219  003C12  3223               	rrcf	(??_rand+3)^0,f,c
  2220  003C14  3222               	rrcf	(??_rand+2)^0,f,c
  2221  003C16  3221               	rrcf	(??_rand+1)^0,f,c
  2222  003C18  3220               	rrcf	??_rand^0,f,c
  2223  003C1A                     u7900:
  2224  003C1A  2EE8               	decfsz	wreg,f,c
  2225  003C1C  D7F5               	goto	u7905
  2226  003C1E  C020  F01E         	movff	??_rand,?_rand
  2227  003C22  C022  F01F         	movff	??_rand+2,?_rand+1
  2228                           
  2229                           ; BSR set to: 1
  2230  003C26  0012               	return		;funcret
  2231  003C28                     __end_of_rand:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function ___omul *****************
  2235 ;; Defined at:
  2236 ;;		line 91 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/Umul64.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  multiplier      8    5[COMRAM] unsigned long long 
  2239 ;;  multiplicand    8   13[COMRAM] unsigned long long 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  product         8   21[COMRAM] unsigned long long 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  8    5[COMRAM] unsigned long long 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2251 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2252 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2254 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2255 ;;Total ram usage:       24 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    4
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_rand
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text8
  2266  004210                     __ptext8:
  2267                           	callstack 0
  2268  004210                     ___omul:
  2269                           	callstack 25
  2270                           
  2271                           ; BSR set to: 1
  2272                           ;incstack = 0
  2273  004210  EE20  F016         	lfsr	2,___omul@product
  2274  004214  0E07               	movlw	7
  2275  004216                     u7291:
  2276  004216  6ADE               	clrf	postinc2,c
  2277  004218  06E8               	decf	wreg,f,c
  2278  00421A  E2FD               	bc	u7291
  2279  00421C                     l7730:
  2280  00421C  A006               	btfss	___omul@multiplier^0,0,c
  2281  00421E  D010               	goto	l7734
  2282  004220  500E               	movf	___omul@multiplicand^0,w,c
  2283  004222  2616               	addwf	___omul@product^0,f,c
  2284  004224  500F               	movf	(___omul@multiplicand+1)^0,w,c
  2285  004226  2217               	addwfc	(___omul@product+1)^0,f,c
  2286  004228  5010               	movf	(___omul@multiplicand+2)^0,w,c
  2287  00422A  2218               	addwfc	(___omul@product+2)^0,f,c
  2288  00422C  5011               	movf	(___omul@multiplicand+3)^0,w,c
  2289  00422E  2219               	addwfc	(___omul@product+3)^0,f,c
  2290  004230  5012               	movf	(___omul@multiplicand+4)^0,w,c
  2291  004232  221A               	addwfc	(___omul@product+4)^0,f,c
  2292  004234  5013               	movf	(___omul@multiplicand+5)^0,w,c
  2293  004236  221B               	addwfc	(___omul@product+5)^0,f,c
  2294  004238  5014               	movf	(___omul@multiplicand+6)^0,w,c
  2295  00423A  221C               	addwfc	(___omul@product+6)^0,f,c
  2296  00423C  5015               	movf	(___omul@multiplicand+7)^0,w,c
  2297  00423E  221D               	addwfc	(___omul@product+7)^0,f,c
  2298  004240                     l7734:
  2299  004240  90D8               	bcf	status,0,c
  2300  004242  360E               	rlcf	___omul@multiplicand^0,f,c
  2301  004244  360F               	rlcf	(___omul@multiplicand+1)^0,f,c
  2302  004246  3610               	rlcf	(___omul@multiplicand+2)^0,f,c
  2303  004248  3611               	rlcf	(___omul@multiplicand+3)^0,f,c
  2304  00424A  3612               	rlcf	(___omul@multiplicand+4)^0,f,c
  2305  00424C  3613               	rlcf	(___omul@multiplicand+5)^0,f,c
  2306  00424E  3614               	rlcf	(___omul@multiplicand+6)^0,f,c
  2307  004250  3615               	rlcf	(___omul@multiplicand+7)^0,f,c
  2308  004252  90D8               	bcf	status,0,c
  2309  004254  320D               	rrcf	(___omul@multiplier+7)^0,f,c
  2310  004256  320C               	rrcf	(___omul@multiplier+6)^0,f,c
  2311  004258  320B               	rrcf	(___omul@multiplier+5)^0,f,c
  2312  00425A  320A               	rrcf	(___omul@multiplier+4)^0,f,c
  2313  00425C  3209               	rrcf	(___omul@multiplier+3)^0,f,c
  2314  00425E  3208               	rrcf	(___omul@multiplier+2)^0,f,c
  2315  004260  3207               	rrcf	(___omul@multiplier+1)^0,f,c
  2316  004262  3206               	rrcf	___omul@multiplier^0,f,c
  2317  004264  5006               	movf	___omul@multiplier^0,w,c
  2318  004266  1007               	iorwf	(___omul@multiplier+1)^0,w,c
  2319  004268  1008               	iorwf	(___omul@multiplier+2)^0,w,c
  2320  00426A  1009               	iorwf	(___omul@multiplier+3)^0,w,c
  2321  00426C  100A               	iorwf	(___omul@multiplier+4)^0,w,c
  2322  00426E  100B               	iorwf	(___omul@multiplier+5)^0,w,c
  2323  004270  100C               	iorwf	(___omul@multiplier+6)^0,w,c
  2324  004272  100D               	iorwf	(___omul@multiplier+7)^0,w,c
  2325  004274  A4D8               	btfss	status,2,c
  2326  004276  D7D2               	goto	l7730
  2327  004278  C016  F006         	movff	___omul@product,?___omul
  2328  00427C  C017  F007         	movff	___omul@product+1,?___omul+1
  2329  004280  C018  F008         	movff	___omul@product+2,?___omul+2
  2330  004284  C019  F009         	movff	___omul@product+3,?___omul+3
  2331  004288  C01A  F00A         	movff	___omul@product+4,?___omul+4
  2332  00428C  C01B  F00B         	movff	___omul@product+5,?___omul+5
  2333  004290  C01C  F00C         	movff	___omul@product+6,?___omul+6
  2334  004294  C01D  F00D         	movff	___omul@product+7,?___omul+7
  2335  004298  0012               	return		;funcret
  2336  00429A                     __end_of___omul:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _once *****************
  2340 ;; Defined at:
  2341 ;;		line 287 in file "d232.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  once_flag       2    5[COMRAM] PTR _Bool 
  2344 ;;		 -> IO(41), 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      _Bool 
  2349 ;; Registers used:
  2350 ;;		wreg, fsr2l, fsr2h, status,2
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2360 ;;Total ram usage:        2 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    4
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text9
  2371  004AA6                     __ptext9:
  2372                           	callstack 0
  2373  004AA6                     _once:
  2374                           	callstack 26
  2375                           
  2376                           ;d232.c: 287: _Bool once(_Bool *once_flag);d232.c: 288: {;d232.c: 289:  if (*once_flag) 
      +                          {
  2377                           
  2378                           ;incstack = 0
  2379  004AA6  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2380  004AAC  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2381  004AB2  50DF               	movf	indf2,w,c
  2382  004AB4  B4D8               	btfsc	status,2,c
  2383  004AB6  D00A               	goto	l8116
  2384                           
  2385                           ;d232.c: 290:   *once_flag = 0;
  2386  004AB8  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2387  004ABE  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2388  004AC4  0E00               	movlw	0
  2389  004AC6  6EDF               	movwf	indf2,c
  2390                           
  2391                           ;d232.c: 291:   return 1;
  2392  004AC8  0E01               	movlw	1
  2393  004ACA  0012               	return	
  2394  004ACC                     l8116:
  2395                           
  2396                           ;d232.c: 294:   return 0;
  2397  004ACC  0E00               	movlw	0
  2398  004ACE  0012               	return		;funcret
  2399  004AD0                     __end_of_once:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _led_lightshow *****************
  2403 ;; Defined at:
  2404 ;;		line 178 in file "d232.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  seq             1    wreg     unsigned char 
  2407 ;;  speed           2   13[COMRAM] unsigned short 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  seq             1   17[COMRAM] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2422 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2423 ;;Total ram usage:        5 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    5
  2426 ;; This function calls:
  2427 ;;		_StartTimer
  2428 ;;		_TimerDone
  2429 ;;		___awdiv
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text10
  2436  0026AC                     __ptext10:
  2437                           	callstack 0
  2438  0026AC                     _led_lightshow:
  2439                           	callstack 25
  2440                           
  2441                           ;incstack = 0
  2442                           ;led_lightshow@seq stored from wreg
  2443  0026AC  6E12               	movwf	led_lightshow@seq^0,c
  2444                           
  2445                           ;d232.c: 178: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 179: {;d232.c: 180
      +                          :  static uint16_t j = 0;;d232.c: 181:  static uint8_t cylon = 0xff;;d232.c: 182:  stati
      +                          c int16_t alive_led = 0;;d232.c: 183:  static _Bool LED_UP = 1;;d232.c: 185:  if (seq ==
      +                           1) {
  2446  0026AE  0412               	decf	led_lightshow@seq^0,w,c
  2447  0026B0  A4D8               	btfss	status,2,c
  2448  0026B2  D003               	goto	l7980
  2449                           
  2450                           ;d232.c: 186:   IO.outbytes[2] = IO.inbytes[0];
  2451  0026B4  C1A9  F1B0         	movff	_IO,_IO+7
  2452                           
  2453                           ;d232.c: 187:   return;
  2454  0026B8  0012               	return	
  2455  0026BA                     l7980:
  2456                           
  2457                           ;d232.c: 190:  if (seq == 2) {
  2458  0026BA  0E02               	movlw	2
  2459  0026BC  1812               	xorwf	led_lightshow@seq^0,w,c
  2460  0026BE  A4D8               	btfss	status,2,c
  2461  0026C0  D010               	goto	l7992
  2462                           
  2463                           ;d232.c: 191:   if (IO.sequence_done) {
  2464  0026C2  0101               	movlb	1	; () banked
  2465  0026C4  51CB               	movf	(_IO+34)& (0+255),w,b
  2466  0026C6  B4D8               	btfsc	status,2,c
  2467  0026C8  D009               	goto	l7988
  2468                           
  2469                           ; BSR set to: 1
  2470                           ;d232.c: 192:    IO.sequence_done = 0;
  2471  0026CA  0E00               	movlw	0
  2472  0026CC  6FCB               	movwf	(_IO+34)& (0+255),b
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;d232.c: 193:    StartTimer(TMR_SEQ, 30000);
  2476  0026CE  0E75               	movlw	117
  2477  0026D0  6E07               	movwf	(StartTimer@count+1)^0,c
  2478  0026D2  0E30               	movlw	48
  2479  0026D4  6E06               	movwf	StartTimer@count^0,c
  2480  0026D6  0E06               	movlw	6
  2481  0026D8  EC3C  F025         	call	_StartTimer
  2482  0026DC                     l7988:
  2483                           
  2484                           ;d232.c: 195:   IO.outbytes[2]++;
  2485  0026DC  0101               	movlb	1	; () banked
  2486  0026DE  2BB0               	incf	(_IO+7)& (0+255),f,b
  2487  0026E0  0012               	return	
  2488  0026E2                     l7992:
  2489                           
  2490                           ;d232.c: 199:  if (seq == 0) {
  2491  0026E2  5012               	movf	led_lightshow@seq^0,w,c
  2492  0026E4  A4D8               	btfss	status,2,c
  2493  0026E6  D055               	goto	l8020
  2494                           
  2495                           ;d232.c: 200:   if (j++ >= speed) {
  2496  0026E8  0101               	movlb	1	; () banked
  2497  0026EA  518E               	movf	led_lightshow@j& (0+255),w,b
  2498  0026EC  6E10               	movwf	??_led_lightshow^0,c
  2499  0026EE  518F               	movf	(led_lightshow@j+1)& (0+255),w,b
  2500  0026F0  6E11               	movwf	(??_led_lightshow+1)^0,c
  2501  0026F2  4B8E               	infsnz	led_lightshow@j& (0+255),f,b
  2502  0026F4  2B8F               	incf	(led_lightshow@j+1)& (0+255),f,b
  2503  0026F6  500E               	movf	led_lightshow@speed^0,w,c
  2504  0026F8  5C10               	subwf	??_led_lightshow^0,w,c
  2505  0026FA  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2506  0026FC  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  2507  0026FE  A0D8               	btfss	status,0,c
  2508  002700  D048               	goto	l8020
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;d232.c: 204:     IO.outbytes[2] = cylon;
  2512  002702  C0AD  F1B0         	movff	led_lightshow@cylon,_IO+7
  2513                           
  2514                           ; BSR set to: 1
  2515                           ;d232.c: 207:    if (LED_UP && (alive_led != 0)) {
  2516  002706  0100               	movlb	0	; () banked
  2517  002708  51AC               	movf	led_lightshow@LED_UP& (0+255),w,b
  2518  00270A  B4D8               	btfsc	status,2,c
  2519  00270C  D00C               	goto	l8006
  2520                           
  2521                           ; BSR set to: 0
  2522  00270E  519E               	movf	led_lightshow@alive_led& (0+255),w,b
  2523  002710  119F               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2524  002712  B4D8               	btfsc	status,2,c
  2525  002714  D008               	goto	l8006
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;d232.c: 208:     alive_led = alive_led * 2;
  2529  002716  90D8               	bcf	status,0,c
  2530  002718  359E               	rlcf	led_lightshow@alive_led& (0+255),w,b
  2531  00271A  6F9E               	movwf	led_lightshow@alive_led& (0+255),b
  2532  00271C  359F               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  2533  00271E  6F9F               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2534                           
  2535                           ;d232.c: 209:     cylon = cylon << 1;
  2536  002720  51AD               	movf	led_lightshow@cylon& (0+255),w,b
  2537  002722  25AD               	addwf	led_lightshow@cylon& (0+255),w,b
  2538  002724  D014               	goto	L1
  2539  002726                     l8006:
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;d232.c: 211:     if (alive_led != 0) alive_led = alive_led / 2;
  2543  002726  519E               	movf	led_lightshow@alive_led& (0+255),w,b
  2544  002728  119F               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2545  00272A  B4D8               	btfsc	status,2,c
  2546  00272C  D00E               	goto	l8010
  2547                           
  2548                           ; BSR set to: 0
  2549  00272E  C09E  F006         	movff	led_lightshow@alive_led,___awdiv@dividend
  2550  002732  C09F  F007         	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  2551  002736  0E00               	movlw	0
  2552  002738  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2553  00273A  0E02               	movlw	2
  2554  00273C  6E08               	movwf	___awdiv@divisor^0,c
  2555  00273E  EC91  F021         	call	___awdiv	;wreg free
  2556  002742  C006  F09E         	movff	?___awdiv,led_lightshow@alive_led
  2557  002746  C007  F09F         	movff	?___awdiv+1,led_lightshow@alive_led+1
  2558  00274A                     l8010:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;d232.c: 212:     cylon = cylon >> 1;
  2562  00274A  90D8               	bcf	status,0,c
  2563  00274C  31AD               	rrcf	led_lightshow@cylon& (0+255),w,b
  2564  00274E                     L1:
  2565  00274E  6FAD               	movwf	led_lightshow@cylon& (0+255),b
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;d232.c: 214:    if (alive_led < 2) {
  2569  002750  BF9F               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2570  002752  D006               	goto	u7650
  2571  002754  519F               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2572  002756  E10A               	bnz	l8016
  2573  002758  0E02               	movlw	2
  2574  00275A  5D9E               	subwf	led_lightshow@alive_led& (0+255),w,b
  2575  00275C  B0D8               	btfsc	status,0,c
  2576  00275E  D006               	goto	l8016
  2577  002760                     u7650:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;d232.c: 215:     alive_led = 2;
  2581  002760  0E00               	movlw	0
  2582  002762  6F9F               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2583  002764  0E02               	movlw	2
  2584  002766  6F9E               	movwf	led_lightshow@alive_led& (0+255),b
  2585                           
  2586                           ;d232.c: 216:     LED_UP = 1;
  2587  002768  0E01               	movlw	1
  2588  00276A  D00D               	goto	L2
  2589  00276C                     l8016:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;d232.c: 218:     if (alive_led > 128) {
  2593  00276C  BF9F               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2594  00276E  D00C               	goto	l1221
  2595  002770  519F               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2596  002772  E104               	bnz	u7660
  2597  002774  0E81               	movlw	129
  2598  002776  5D9E               	subwf	led_lightshow@alive_led& (0+255),w,b
  2599  002778  A0D8               	btfss	status,0,c
  2600  00277A  D006               	goto	l1221
  2601  00277C                     u7660:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;d232.c: 219:      alive_led = 128;
  2605  00277C  0E00               	movlw	0
  2606  00277E  6F9F               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2607  002780  0E80               	movlw	128
  2608  002782  6F9E               	movwf	led_lightshow@alive_led& (0+255),b
  2609                           
  2610                           ;d232.c: 220:      LED_UP = 0;
  2611  002784  0E00               	movlw	0
  2612  002786                     L2:
  2613  002786  6FAC               	movwf	led_lightshow@LED_UP& (0+255),b
  2614  002788                     l1221:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;d232.c: 223:    j = 0;
  2618  002788  0E00               	movlw	0
  2619  00278A  0101               	movlb	1	; () banked
  2620  00278C  6F8F               	movwf	(led_lightshow@j+1)& (0+255),b
  2621  00278E  0E00               	movlw	0
  2622  002790  6F8E               	movwf	led_lightshow@j& (0+255),b
  2623  002792                     l8020:
  2624                           
  2625                           ;d232.c: 227:  if (seq == 3) {
  2626  002792  0E03               	movlw	3
  2627  002794  1812               	xorwf	led_lightshow@seq^0,w,c
  2628  002796  A4D8               	btfss	status,2,c
  2629  002798  0012               	return	
  2630                           
  2631                           ;d232.c: 229:   if (otto_b1.result <= -120) {
  2632  00279A  0101               	movlb	1	; () banked
  2633  00279C  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2634  00279E  D00A               	goto	l8026
  2635  0027A0  0E89               	movlw	137
  2636  0027A2  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2637  0027A4  0EFF               	movlw	255
  2638  0027A6  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2639  0027A8  B0D8               	btfsc	status,0,c
  2640  0027AA  D004               	goto	l8026
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;d232.c: 230:    IO.outbytes[2] = 0b10000000;
  2644  0027AC  0E80               	movlw	128
  2645  0027AE  6FB0               	movwf	(_IO+7)& (0+255),b
  2646                           
  2647                           ;d232.c: 231:    IO.BAL = UP;
  2648  0027B0  0E00               	movlw	0
  2649  0027B2  6FB8               	movwf	(_IO+15)& (0+255),b
  2650  0027B4                     l8026:
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;d232.c: 233:   if (otto_b1.result > -120 && otto_b1.result < -80) {
  2654  0027B4  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2655  0027B6  D006               	goto	u7690
  2656  0027B8  0E89               	movlw	137
  2657  0027BA  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2658  0027BC  0EFF               	movlw	255
  2659  0027BE  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2660  0027C0  A0D8               	btfss	status,0,c
  2661  0027C2  D00C               	goto	l8032
  2662  0027C4                     u7690:
  2663                           
  2664                           ; BSR set to: 1
  2665  0027C4  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2666  0027C6  D00A               	goto	l8032
  2667  0027C8  0EB0               	movlw	176
  2668  0027CA  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2669  0027CC  0EFF               	movlw	255
  2670  0027CE  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2671  0027D0  B0D8               	btfsc	status,0,c
  2672  0027D2  D004               	goto	l8032
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;d232.c: 234:    IO.outbytes[2] = 0b01000000;
  2676  0027D4  0E40               	movlw	64
  2677  0027D6  6FB0               	movwf	(_IO+7)& (0+255),b
  2678                           
  2679                           ;d232.c: 235:    IO.BAL = UP;
  2680  0027D8  0E00               	movlw	0
  2681  0027DA  6FB8               	movwf	(_IO+15)& (0+255),b
  2682  0027DC                     l8032:
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;d232.c: 237:   if (otto_b1.result >= -80 && otto_b1.result < -30) {
  2686  0027DC  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2687  0027DE  D006               	goto	u7710
  2688  0027E0  0EB0               	movlw	176
  2689  0027E2  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2690  0027E4  0EFF               	movlw	255
  2691  0027E6  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2692  0027E8  A0D8               	btfss	status,0,c
  2693  0027EA  D00C               	goto	l8038
  2694  0027EC                     u7710:
  2695                           
  2696                           ; BSR set to: 1
  2697  0027EC  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2698  0027EE  D00A               	goto	l8038
  2699  0027F0  0EE2               	movlw	226
  2700  0027F2  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2701  0027F4  0EFF               	movlw	255
  2702  0027F6  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2703  0027F8  B0D8               	btfsc	status,0,c
  2704  0027FA  D004               	goto	l8038
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;d232.c: 238:    IO.outbytes[2] = 0b00100000;
  2708  0027FC  0E20               	movlw	32
  2709  0027FE  6FB0               	movwf	(_IO+7)& (0+255),b
  2710                           
  2711                           ;d232.c: 239:    IO.BAL = UP;
  2712  002800  0E00               	movlw	0
  2713  002802  6FB8               	movwf	(_IO+15)& (0+255),b
  2714  002804                     l8038:
  2715                           
  2716                           ; BSR set to: 1
  2717                           ;d232.c: 241:   if (otto_b1.result >= -30 && otto_b1.result < -5) {
  2718  002804  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2719  002806  D006               	goto	u7730
  2720  002808  0EE2               	movlw	226
  2721  00280A  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2722  00280C  0EFF               	movlw	255
  2723  00280E  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2724  002810  A0D8               	btfss	status,0,c
  2725  002812  D01B               	goto	l8054
  2726  002814                     u7730:
  2727                           
  2728                           ; BSR set to: 1
  2729  002814  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2730  002816  D019               	goto	l8054
  2731  002818  0EFB               	movlw	251
  2732  00281A  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2733  00281C  0EFF               	movlw	255
  2734  00281E  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2735  002820  B0D8               	btfsc	status,0,c
  2736  002822  D013               	goto	l8054
  2737                           
  2738                           ; BSR set to: 1
  2739                           ;d232.c: 242:    if (IO.BAL != UP) {
  2740  002824  51B8               	movf	(_IO+15)& (0+255),w,b
  2741  002826  B4D8               	btfsc	status,2,c
  2742  002828  D00B               	goto	l8050
  2743                           
  2744                           ; BSR set to: 1
  2745                           ;d232.c: 243:     IO.outbytes[1] = IO.outbytes[1] | 0x02;
  2746  00282A  51AF               	movf	(_IO+6)& (0+255),w,b
  2747  00282C  0902               	iorlw	2
  2748  00282E  6FAF               	movwf	(_IO+6)& (0+255),b
  2749                           
  2750                           ; BSR set to: 1
  2751                           ;d232.c: 244:     IO.score--;
  2752  002830  07BD               	decf	(_IO+20)& (0+255),f,b
  2753                           
  2754                           ; BSR set to: 1
  2755                           ;d232.c: 245:     StartTimer(TMR_BAL, 500);
  2756  002832  0E01               	movlw	1
  2757  002834  6E07               	movwf	(StartTimer@count+1)^0,c
  2758  002836  0EF4               	movlw	244
  2759  002838  6E06               	movwf	StartTimer@count^0,c
  2760  00283A  0E07               	movlw	7
  2761  00283C  EC3C  F025         	call	_StartTimer
  2762  002840                     l8050:
  2763                           
  2764                           ;d232.c: 247:    IO.outbytes[2] = 0b00010000;
  2765  002840  0E10               	movlw	16
  2766  002842  0101               	movlb	1	; () banked
  2767  002844  6FB0               	movwf	(_IO+7)& (0+255),b
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;d232.c: 248:    IO.BAL = UP;
  2771  002846  0E00               	movlw	0
  2772  002848  6FB8               	movwf	(_IO+15)& (0+255),b
  2773  00284A                     l8054:
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;d232.c: 250:   if (otto_b1.result >= -5 && otto_b1.result <= 5) {
  2777  00284A  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2778  00284C  D006               	goto	u7760
  2779  00284E  0EFB               	movlw	251
  2780  002850  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2781  002852  0EFF               	movlw	255
  2782  002854  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2783  002856  A0D8               	btfss	status,0,c
  2784  002858  D025               	goto	l8074
  2785  00285A                     u7760:
  2786                           
  2787                           ; BSR set to: 1
  2788  00285A  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2789  00285C  D006               	goto	u7770
  2790  00285E  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2791  002860  E121               	bnz	l8074
  2792  002862  0E06               	movlw	6
  2793  002864  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2794  002866  B0D8               	btfsc	status,0,c
  2795  002868  D01D               	goto	l8074
  2796  00286A                     u7770:
  2797                           
  2798                           ; BSR set to: 1
  2799                           ;d232.c: 251:    if (IO.BAL != ON) {
  2800  00286A  05B8               	decf	(_IO+15)& (0+255),w,b
  2801  00286C  B4D8               	btfsc	status,2,c
  2802  00286E  D015               	goto	l8070
  2803                           
  2804                           ; BSR set to: 1
  2805                           ;d232.c: 252:     IO.outbytes[1] = IO.outbytes[1] | 0x01;
  2806  002870  51AF               	movf	(_IO+6)& (0+255),w,b
  2807  002872  0901               	iorlw	1
  2808  002874  6FAF               	movwf	(_IO+6)& (0+255),b
  2809                           
  2810                           ; BSR set to: 1
  2811                           ;d232.c: 254:     if (TimerDone(TMR_BAL)) {
  2812  002876  0E07               	movlw	7
  2813  002878  ECA6  F025         	call	_TimerDone
  2814  00287C  0900               	iorlw	0
  2815  00287E  B4D8               	btfsc	status,2,c
  2816  002880  D005               	goto	l8068
  2817                           
  2818                           ;d232.c: 255:      if (IO.score < 50)
  2819  002882  0E32               	movlw	50
  2820  002884  0101               	movlb	1	; () banked
  2821  002886  61BD               	cpfslt	(_IO+20)& (0+255),b
  2822  002888  D001               	goto	l8068
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;d232.c: 256:       IO.score++;
  2826  00288A  2BBD               	incf	(_IO+20)& (0+255),f,b
  2827  00288C                     l8068:
  2828                           
  2829                           ;d232.c: 258:     StartTimer(TMR_BAL, 500);
  2830  00288C  0E01               	movlw	1
  2831  00288E  6E07               	movwf	(StartTimer@count+1)^0,c
  2832  002890  0EF4               	movlw	244
  2833  002892  6E06               	movwf	StartTimer@count^0,c
  2834  002894  0E07               	movlw	7
  2835  002896  EC3C  F025         	call	_StartTimer
  2836  00289A                     l8070:
  2837                           
  2838                           ;d232.c: 260:    IO.outbytes[2] = 0b00000000;
  2839  00289A  0E00               	movlw	0
  2840  00289C  0101               	movlb	1	; () banked
  2841  00289E  6FB0               	movwf	(_IO+7)& (0+255),b
  2842                           
  2843                           ; BSR set to: 1
  2844                           ;d232.c: 261:    IO.BAL = ON;
  2845  0028A0  0E01               	movlw	1
  2846  0028A2  6FB8               	movwf	(_IO+15)& (0+255),b
  2847  0028A4                     l8074:
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;d232.c: 263:   if (otto_b1.result > 5 && otto_b1.result < 30) {
  2851  0028A4  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2852  0028A6  D022               	goto	l8090
  2853  0028A8  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2854  0028AA  E104               	bnz	u7810
  2855  0028AC  0E06               	movlw	6
  2856  0028AE  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2857  0028B0  A0D8               	btfss	status,0,c
  2858  0028B2  D01C               	goto	l8090
  2859  0028B4                     u7810:
  2860                           
  2861                           ; BSR set to: 1
  2862  0028B4  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2863  0028B6  D006               	goto	u7820
  2864  0028B8  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2865  0028BA  E118               	bnz	l8090
  2866  0028BC  0E1E               	movlw	30
  2867  0028BE  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2868  0028C0  B0D8               	btfsc	status,0,c
  2869  0028C2  D014               	goto	l8090
  2870  0028C4                     u7820:
  2871                           
  2872                           ; BSR set to: 1
  2873                           ;d232.c: 264:    if (IO.BAL != DOWN) {
  2874  0028C4  0E02               	movlw	2
  2875  0028C6  19B8               	xorwf	(_IO+15)& (0+255),w,b
  2876  0028C8  B4D8               	btfsc	status,2,c
  2877  0028CA  D00C               	goto	l8086
  2878                           
  2879                           ; BSR set to: 1
  2880                           ;d232.c: 265:     IO.outbytes[1] = IO.outbytes[1] | 0x04;
  2881  0028CC  51AF               	movf	(_IO+6)& (0+255),w,b
  2882  0028CE  0904               	iorlw	4
  2883  0028D0  6FAF               	movwf	(_IO+6)& (0+255),b
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;d232.c: 266:     StartTimer(TMR_BAL, 500);
  2887  0028D2  0E01               	movlw	1
  2888  0028D4  6E07               	movwf	(StartTimer@count+1)^0,c
  2889  0028D6  0EF4               	movlw	244
  2890  0028D8  6E06               	movwf	StartTimer@count^0,c
  2891  0028DA  0E07               	movlw	7
  2892  0028DC  EC3C  F025         	call	_StartTimer
  2893                           
  2894                           ;d232.c: 267:     IO.score--;
  2895  0028E0  0101               	movlb	1	; () banked
  2896  0028E2  07BD               	decf	(_IO+20)& (0+255),f,b
  2897  0028E4                     l8086:
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;d232.c: 269:    IO.outbytes[2] = 0b00001000;
  2901  0028E4  0E08               	movlw	8
  2902  0028E6  6FB0               	movwf	(_IO+7)& (0+255),b
  2903                           
  2904                           ; BSR set to: 1
  2905                           ;d232.c: 270:    IO.BAL = DOWN;
  2906  0028E8  0E02               	movlw	2
  2907  0028EA  6FB8               	movwf	(_IO+15)& (0+255),b
  2908  0028EC                     l8090:
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;d232.c: 272:   if (otto_b1.result >= 30 && otto_b1.result < 80) {
  2912  0028EC  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2913  0028EE  D012               	goto	l8096
  2914  0028F0  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2915  0028F2  E104               	bnz	u7840
  2916  0028F4  0E1E               	movlw	30
  2917  0028F6  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2918  0028F8  A0D8               	btfss	status,0,c
  2919  0028FA  D00C               	goto	l8096
  2920  0028FC                     u7840:
  2921                           
  2922                           ; BSR set to: 1
  2923  0028FC  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2924  0028FE  D006               	goto	u7850
  2925  002900  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2926  002902  E108               	bnz	l8096
  2927  002904  0E50               	movlw	80
  2928  002906  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2929  002908  B0D8               	btfsc	status,0,c
  2930  00290A  D004               	goto	l8096
  2931  00290C                     u7850:
  2932                           
  2933                           ; BSR set to: 1
  2934                           ;d232.c: 273:    IO.outbytes[2] = 0b00000100;
  2935  00290C  0E04               	movlw	4
  2936  00290E  6FB0               	movwf	(_IO+7)& (0+255),b
  2937                           
  2938                           ;d232.c: 274:    IO.BAL = DOWN;
  2939  002910  0E02               	movlw	2
  2940  002912  6FB8               	movwf	(_IO+15)& (0+255),b
  2941  002914                     l8096:
  2942                           
  2943                           ; BSR set to: 1
  2944                           ;d232.c: 276:   if (otto_b1.result >= 80 && otto_b1.result < 120) {
  2945  002914  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2946  002916  D012               	goto	l8102
  2947  002918  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2948  00291A  E104               	bnz	u7860
  2949  00291C  0E50               	movlw	80
  2950  00291E  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2951  002920  A0D8               	btfss	status,0,c
  2952  002922  D00C               	goto	l8102
  2953  002924                     u7860:
  2954                           
  2955                           ; BSR set to: 1
  2956  002924  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2957  002926  D006               	goto	u7870
  2958  002928  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2959  00292A  E108               	bnz	l8102
  2960  00292C  0E78               	movlw	120
  2961  00292E  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2962  002930  B0D8               	btfsc	status,0,c
  2963  002932  D004               	goto	l8102
  2964  002934                     u7870:
  2965                           
  2966                           ; BSR set to: 1
  2967                           ;d232.c: 277:    IO.outbytes[2] = 0b00000010;
  2968  002934  0E02               	movlw	2
  2969  002936  6FB0               	movwf	(_IO+7)& (0+255),b
  2970                           
  2971                           ;d232.c: 278:    IO.BAL = DOWN;
  2972  002938  0E02               	movlw	2
  2973  00293A  6FB8               	movwf	(_IO+15)& (0+255),b
  2974  00293C                     l8102:
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;d232.c: 280:   if (otto_b1.result >= 120) {
  2978  00293C  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2979  00293E  0012               	return	
  2980  002940  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2981  002942  E104               	bnz	u7880
  2982  002944  0E78               	movlw	120
  2983  002946  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2984  002948  A0D8               	btfss	status,0,c
  2985  00294A  0012               	return	
  2986  00294C                     u7880:
  2987                           
  2988                           ; BSR set to: 1
  2989                           ;d232.c: 281:    IO.outbytes[2] = 0b00000001;
  2990  00294C  0E01               	movlw	1
  2991  00294E  6FB0               	movwf	(_IO+7)& (0+255),b
  2992                           
  2993                           ;d232.c: 282:    IO.BAL = DOWN;
  2994  002950  0E02               	movlw	2
  2995  002952  6FB8               	movwf	(_IO+15)& (0+255),b
  2996  002954  0012               	return		;funcret
  2997  002956                     __end_of_led_lightshow:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function ___awdiv *****************
  3001 ;; Defined at:
  3002 ;;		line 7 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/awdiv.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  dividend        2    5[COMRAM] int 
  3005 ;;  divisor         2    7[COMRAM] int 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  quotient        2   11[COMRAM] int 
  3008 ;;  sign            1   10[COMRAM] unsigned char 
  3009 ;;  counter         1    9[COMRAM] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2    5[COMRAM] int 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 3F/0
  3016 ;;		On exit  : 3F/0
  3017 ;;		Unchanged: 3F/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3022 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3023 ;;Total ram usage:        8 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    4
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;;		_led_lightshow
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text11
  3035  004322                     __ptext11:
  3036                           	callstack 0
  3037  004322                     ___awdiv:
  3038                           	callstack 25
  3039                           
  3040                           ; BSR set to: 0
  3041                           
  3042                           ;incstack = 0
  3043  004322  0E00               	movlw	0
  3044  004324  6E0B               	movwf	___awdiv@sign^0,c
  3045                           
  3046                           ; BSR set to: 0
  3047  004326  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3048  004328  D006               	goto	l7746
  3049                           
  3050                           ; BSR set to: 0
  3051  00432A  6C08               	negf	___awdiv@divisor^0,c
  3052  00432C  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  3053  00432E  B0D8               	btfsc	status,0,c
  3054  004330  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  3055                           
  3056                           ; BSR set to: 0
  3057  004332  0E01               	movlw	1
  3058  004334  6E0B               	movwf	___awdiv@sign^0,c
  3059  004336                     l7746:
  3060                           
  3061                           ; BSR set to: 0
  3062  004336  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  3063  004338  D006               	goto	l7752
  3064                           
  3065                           ; BSR set to: 0
  3066  00433A  6C06               	negf	___awdiv@dividend^0,c
  3067  00433C  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  3068  00433E  B0D8               	btfsc	status,0,c
  3069  004340  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  3070                           
  3071                           ; BSR set to: 0
  3072  004342  0E01               	movlw	1
  3073  004344  1A0B               	xorwf	___awdiv@sign^0,f,c
  3074  004346                     l7752:
  3075                           
  3076                           ; BSR set to: 0
  3077  004346  0E00               	movlw	0
  3078  004348  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  3079  00434A  0E00               	movlw	0
  3080  00434C  6E0C               	movwf	___awdiv@quotient^0,c
  3081                           
  3082                           ; BSR set to: 0
  3083  00434E  5008               	movf	___awdiv@divisor^0,w,c
  3084  004350  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  3085  004352  B4D8               	btfsc	status,2,c
  3086  004354  D01C               	goto	l7774
  3087                           
  3088                           ; BSR set to: 0
  3089  004356  0E01               	movlw	1
  3090  004358  6E0A               	movwf	___awdiv@counter^0,c
  3091  00435A  D004               	goto	l7760
  3092  00435C                     l7758:
  3093                           
  3094                           ; BSR set to: 0
  3095  00435C  90D8               	bcf	status,0,c
  3096  00435E  3608               	rlcf	___awdiv@divisor^0,f,c
  3097  004360  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  3098  004362  2A0A               	incf	___awdiv@counter^0,f,c
  3099  004364                     l7760:
  3100                           
  3101                           ; BSR set to: 0
  3102  004364  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3103  004366  D7FA               	goto	l7758
  3104  004368                     u7350:
  3105                           
  3106                           ; BSR set to: 0
  3107  004368  90D8               	bcf	status,0,c
  3108  00436A  360C               	rlcf	___awdiv@quotient^0,f,c
  3109  00436C  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  3110                           
  3111                           ; BSR set to: 0
  3112  00436E  5008               	movf	___awdiv@divisor^0,w,c
  3113  004370  5C06               	subwf	___awdiv@dividend^0,w,c
  3114  004372  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3115  004374  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  3116  004376  A0D8               	btfss	status,0,c
  3117  004378  D005               	goto	l7770
  3118                           
  3119                           ; BSR set to: 0
  3120  00437A  5008               	movf	___awdiv@divisor^0,w,c
  3121  00437C  5E06               	subwf	___awdiv@dividend^0,f,c
  3122  00437E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3123  004380  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  3124                           
  3125                           ; BSR set to: 0
  3126  004382  800C               	bsf	___awdiv@quotient^0,0,c
  3127  004384                     l7770:
  3128                           
  3129                           ; BSR set to: 0
  3130  004384  90D8               	bcf	status,0,c
  3131  004386  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  3132  004388  3208               	rrcf	___awdiv@divisor^0,f,c
  3133                           
  3134                           ; BSR set to: 0
  3135  00438A  2E0A               	decfsz	___awdiv@counter^0,f,c
  3136  00438C  D7ED               	goto	u7350
  3137  00438E                     l7774:
  3138                           
  3139                           ; BSR set to: 0
  3140  00438E  500B               	movf	___awdiv@sign^0,w,c
  3141  004390  B4D8               	btfsc	status,2,c
  3142  004392  D004               	goto	l7778
  3143                           
  3144                           ; BSR set to: 0
  3145  004394  6C0C               	negf	___awdiv@quotient^0,c
  3146  004396  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  3147  004398  B0D8               	btfsc	status,0,c
  3148  00439A  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  3149  00439C                     l7778:
  3150                           
  3151                           ; BSR set to: 0
  3152  00439C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3153  0043A0  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3154                           
  3155                           ; BSR set to: 0
  3156  0043A4  0012               	return		;funcret
  3157  0043A6                     __end_of___awdiv:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _init_display *****************
  3161 ;; Defined at:
  3162 ;;		line 28 in file "eadog.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 3F/1
  3173 ;;		On exit  : 3F/3D
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:   11
  3183 ;; This function calls:
  3184 ;;		_lcd_init
  3185 ;;		_wdtdelay
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text12
  3192  004CEC                     __ptext12:
  3193                           	callstack 0
  3194  004CEC                     _init_display:
  3195                           	callstack 19
  3196                           
  3197                           ; BSR set to: 1
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;incstack = 0
  3201                           ;eadog.c: 30:  do { LATCbits.LATC2 = 1; } while(0);
  3202  004CEC  84BC               	bsf	188,2,c	;volatile
  3203                           
  3204                           ; BSR set to: 1
  3205                           ;eadog.c: 31:  wdtdelay(350000);
  3206  004CEE  0E30               	movlw	48
  3207  004CF0  6E06               	movwf	wdtdelay@delay^0,c
  3208  004CF2  0E57               	movlw	87
  3209  004CF4  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3210  004CF6  0E05               	movlw	5
  3211  004CF8  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3212  004CFA  0E00               	movlw	0
  3213  004CFC  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3214  004CFE  EC03  F024         	call	_wdtdelay	;wreg free
  3215                           
  3216                           ;eadog.c: 32:  lcd_init();
  3217  004D02  EC45  F022         	call	_lcd_init	;wreg free
  3218                           
  3219                           ; BSR set to: 61
  3220  004D06  0012               	return		;funcret
  3221  004D08                     __end_of_init_display:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _wdtdelay *****************
  3225 ;; Defined at:
  3226 ;;		line 15 in file "eadog.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  delay           4    5[COMRAM] const unsigned long 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/2
  3237 ;;		On exit  : 3F/1
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3244 ;;Total ram usage:        4 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    4
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_init_display
  3251 ;;		_send_lcd_cmd
  3252 ;;		_eaDogM_WriteString
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text13
  3257  004806                     __ptext13:
  3258                           	callstack 0
  3259  004806                     _wdtdelay:
  3260                           	callstack 23
  3261                           
  3262                           ;eadog.c: 15: void wdtdelay(const uint32_t delay);eadog.c: 16: {;eadog.c: 17:  static ui
      +                          nt32_t dcount;;eadog.c: 19:  for (dcount = 0; dcount <= delay; dcount++) {
  3263                           
  3264                           ; BSR set to: 61
  3265                           ;incstack = 0
  3266  004806  0E00               	movlw	0
  3267  004808  0101               	movlb	1	; () banked
  3268  00480A  6F62               	movwf	wdtdelay@dcount& (0+255),b
  3269  00480C  0E00               	movlw	0
  3270  00480E  6F63               	movwf	(wdtdelay@dcount+1)& (0+255),b
  3271  004810  0E00               	movlw	0
  3272  004812  6F64               	movwf	(wdtdelay@dcount+2)& (0+255),b
  3273  004814  0E00               	movlw	0
  3274  004816  6F65               	movwf	(wdtdelay@dcount+3)& (0+255),b
  3275  004818                     l1288:
  3276                           
  3277                           ; BSR set to: 1
  3278                           ;eadog.c: 20:   __nop();
  3279  004818  F000               	nop	
  3280  00481A  0004               	clrwdt		;# 
  3281                           
  3282                           ;eadog.c: 22:  };
  3283  00481C  0E01               	movlw	1
  3284  00481E  0101               	movlb	1	; () banked
  3285  004820  2762               	addwf	wdtdelay@dcount& (0+255),f,b
  3286  004822  0E00               	movlw	0
  3287  004824  2363               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  3288  004826  2364               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  3289  004828  2365               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  3290  00482A  5162               	movf	wdtdelay@dcount& (0+255),w,b
  3291  00482C  5C06               	subwf	wdtdelay@delay^0,w,c
  3292  00482E  5163               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  3293  004830  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  3294  004832  5164               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  3295  004834  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  3296  004836  5165               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  3297  004838  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  3298  00483A  A0D8               	btfss	status,0,c
  3299  00483C  0012               	return	
  3300  00483E  D7EC               	goto	l1288
  3301  004840                     __end_of_wdtdelay:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _lcd_init *****************
  3305 ;; Defined at:
  3306 ;;		line 262 in file "dogm-graphic.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 3F/1
  3317 ;;		On exit  : 3F/3D
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:   10
  3327 ;; This function calls:
  3328 ;;		_lcd_clear_area_xy
  3329 ;;		_lcd_command
  3330 ;; This function is called by:
  3331 ;;		_init_display
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text14
  3336  00448A                     __ptext14:
  3337                           	callstack 0
  3338  00448A                     _lcd_init:
  3339                           	callstack 19
  3340                           
  3341                           ; BSR set to: 1
  3342                           ;dogm-graphic.c: 325:     lcd_command(0x40 | ((0) & 0x3F));
  3343                           
  3344                           ; BSR set to: 1
  3345                           ;incstack = 0
  3346  00448A  0E40               	movlw	64
  3347  00448C  EC1B  F027         	call	_lcd_command
  3348                           
  3349                           ;dogm-graphic.c: 327:       lcd_command(0xA0 | 1);
  3350  004490  0EA1               	movlw	161
  3351  004492  EC1B  F027         	call	_lcd_command
  3352                           
  3353                           ;dogm-graphic.c: 328:       lcd_command(0xC0 | 0x0);
  3354  004496  0EC0               	movlw	192
  3355  004498  EC1B  F027         	call	_lcd_command
  3356                           
  3357                           ;dogm-graphic.c: 333:     lcd_command(0xA4 | 0);
  3358  00449C  0EA4               	movlw	164
  3359  00449E  EC1B  F027         	call	_lcd_command
  3360                           
  3361                           ;dogm-graphic.c: 334:     lcd_command(0xA6 | 0);
  3362  0044A2  0EA6               	movlw	166
  3363  0044A4  EC1B  F027         	call	_lcd_command
  3364                           
  3365                           ;dogm-graphic.c: 335:     lcd_command(0xA2 | 0);
  3366  0044A8  0EA2               	movlw	162
  3367  0044AA  EC1B  F027         	call	_lcd_command
  3368                           
  3369                           ;dogm-graphic.c: 336:     lcd_command(0x28 | ((7) & 0x07));
  3370  0044AE  0E2F               	movlw	47
  3371  0044B0  EC1B  F027         	call	_lcd_command
  3372                           
  3373                           ;dogm-graphic.c: 337:     lcd_command(0x20 | ((7) & 0x07));
  3374  0044B4  0E27               	movlw	39
  3375  0044B6  EC1B  F027         	call	_lcd_command
  3376                           
  3377                           ;dogm-graphic.c: 338:     lcd_command(0x81); lcd_command(((0x9) & 0x3F));
  3378  0044BA  0E81               	movlw	129
  3379  0044BC  EC1B  F027         	call	_lcd_command
  3380  0044C0  0E09               	movlw	9
  3381  0044C2  EC1B  F027         	call	_lcd_command
  3382                           
  3383                           ;dogm-graphic.c: 339:     lcd_command(0xFA); lcd_command(0x10 | 0x80);
  3384  0044C6  0EFA               	movlw	250
  3385  0044C8  EC1B  F027         	call	_lcd_command
  3386  0044CC  0E90               	movlw	144
  3387  0044CE  EC1B  F027         	call	_lcd_command
  3388                           
  3389                           ; BSR set to: 61
  3390                           ;dogm-graphic.c: 341:   lcd_clear_area_xy(8,102,0,0,0);
  3391  0044D2  0E66               	movlw	102
  3392  0044D4  6E1A               	movwf	lcd_clear_area_xy@columns^0,c
  3393  0044D6  0E00               	movlw	0
  3394  0044D8  6E1B               	movwf	lcd_clear_area_xy@style^0,c
  3395  0044DA  0E00               	movlw	0
  3396  0044DC  6E1C               	movwf	lcd_clear_area_xy@page^0,c
  3397  0044DE  0E00               	movlw	0
  3398  0044E0  6E1D               	movwf	lcd_clear_area_xy@col^0,c
  3399  0044E2  0E08               	movlw	8
  3400  0044E4  EC84  F026         	call	_lcd_clear_area_xy
  3401                           
  3402                           ; BSR set to: 61
  3403                           ;dogm-graphic.c: 343:   lcd_command(0xAE | 1);
  3404  0044E8  0EAF               	movlw	175
  3405  0044EA  EC1B  F027         	call	_lcd_command
  3406                           
  3407                           ; BSR set to: 61
  3408  0044EE  0012               	return		;funcret
  3409  0044F0                     __end_of_lcd_init:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _lcd_clear_area_xy *****************
  3413 ;; Defined at:
  3414 ;;		line 240 in file "dogm-graphic.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  pages           1    wreg     unsigned char 
  3417 ;;  columns         1   25[COMRAM] unsigned char 
  3418 ;;  style           1   26[COMRAM] unsigned char 
  3419 ;;  page            1   27[COMRAM] unsigned char 
  3420 ;;  col             1   28[COMRAM] unsigned char 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  pages           1   29[COMRAM] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 3F/3D
  3429 ;;		On exit  : 3F/3D
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3435 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3436 ;;Total ram usage:        5 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    9
  3439 ;; This function calls:
  3440 ;;		_lcd_clear_area
  3441 ;;		_lcd_moveto_xy
  3442 ;; This function is called by:
  3443 ;;		_lcd_init
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text15
  3448  004D08                     __ptext15:
  3449                           	callstack 0
  3450  004D08                     _lcd_clear_area_xy:
  3451                           	callstack 19
  3452                           
  3453                           ; BSR set to: 61
  3454                           ;incstack = 0
  3455                           ;lcd_clear_area_xy@pages stored from wreg
  3456  004D08  6E1E               	movwf	lcd_clear_area_xy@pages^0,c
  3457                           
  3458                           ;dogm-graphic.c: 241:   lcd_moveto_xy(page,col);
  3459  004D0A  C01D  F00A         	movff	lcd_clear_area_xy@col,lcd_moveto_xy@column
  3460  004D0E  501C               	movf	lcd_clear_area_xy@page^0,w,c
  3461  004D10  EC68  F025         	call	_lcd_moveto_xy
  3462                           
  3463                           ;dogm-graphic.c: 242:   lcd_clear_area(pages,columns,style);
  3464  004D14  C01A  F00F         	movff	lcd_clear_area_xy@columns,lcd_clear_area@columns
  3465  004D18  C01B  F010         	movff	lcd_clear_area_xy@style,lcd_clear_area@style
  3466  004D1C  501E               	movf	lcd_clear_area_xy@pages^0,w,c
  3467  004D1E  EC70  F020         	call	_lcd_clear_area
  3468                           
  3469                           ; BSR set to: 61
  3470  004D22  0012               	return		;funcret
  3471  004D24                     __end_of_lcd_clear_area_xy:
  3472                           	callstack 0
  3473                           
  3474 ;; *************** function _lcd_clear_area *****************
  3475 ;; Defined at:
  3476 ;;		line 213 in file "dogm-graphic.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  pages           1    wreg     unsigned char 
  3479 ;;  columns         1   14[COMRAM] unsigned char 
  3480 ;;  style           1   15[COMRAM] unsigned char 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  pages           1   24[COMRAM] unsigned char 
  3483 ;;  max             1   23[COMRAM] unsigned char 
  3484 ;;  j               1   22[COMRAM] unsigned char 
  3485 ;;  i               1   21[COMRAM] unsigned char 
  3486 ;;  inv             1   18[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 3F/3D
  3493 ;;		On exit  : 3F/3D
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3497 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3499 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3500 ;;Total ram usage:       11 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    8
  3503 ;; This function calls:
  3504 ;;		_lcd_data
  3505 ;;		_lcd_get_position_column$F2718
  3506 ;;		_lcd_get_position_page$F2716
  3507 ;;		_lcd_move_xy
  3508 ;; This function is called by:
  3509 ;;		_lcd_clear_area_xy
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text16
  3514  0040E0                     __ptext16:
  3515                           	callstack 0
  3516  0040E0                     _lcd_clear_area:
  3517                           	callstack 19
  3518                           
  3519                           ; BSR set to: 61
  3520                           ;incstack = 0
  3521                           ;lcd_clear_area@pages stored from wreg
  3522  0040E0  6E19               	movwf	lcd_clear_area@pages^0,c
  3523                           
  3524                           ;dogm-graphic.c: 214:   uint8_t i,j,max;;dogm-graphic.c: 215:   uint8_t inv = (style & 4
      +                          )?0xFF:0;
  3525  0040E2  B410               	btfsc	lcd_clear_area@style^0,2,c
  3526  0040E4  D005               	goto	l6924
  3527  0040E6  0E00               	movlw	0
  3528  0040E8  6E15               	movwf	(_lcd_clear_area$2772+1)^0,c
  3529  0040EA  0E00               	movlw	0
  3530  0040EC  6E14               	movwf	_lcd_clear_area$2772^0,c
  3531  0040EE  D003               	goto	l6926
  3532  0040F0                     l6924:
  3533  0040F0  0E00               	movlw	0
  3534  0040F2  6E15               	movwf	(_lcd_clear_area$2772+1)^0,c
  3535  0040F4  6814               	setf	_lcd_clear_area$2772^0,c
  3536  0040F6                     l6926:
  3537  0040F6  C014  F013         	movff	_lcd_clear_area$2772,lcd_clear_area@inv
  3538                           
  3539                           ;dogm-graphic.c: 217:   if(pages > (max = 8 - lcd_get_position_page()))
  3540  0040FA  EC8F  F027         	call	_lcd_get_position_page$F2716	;wreg free
  3541  0040FE  6E11               	movwf	??_lcd_clear_area^0,c
  3542  004100  5011               	movf	??_lcd_clear_area^0,w,c
  3543  004102  0808               	sublw	8
  3544  004104  6E18               	movwf	lcd_clear_area@max^0,c
  3545  004106  5019               	movf	lcd_clear_area@pages^0,w,c
  3546  004108  5C18               	subwf	lcd_clear_area@max^0,w,c
  3547  00410A  A0D8               	btfss	status,0,c
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;dogm-graphic.c: 218:     pages = max;
  3551  00410C  C018  F019         	movff	lcd_clear_area@max,lcd_clear_area@pages
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;dogm-graphic.c: 219:   if(columns > (max = 102 - lcd_get_position_column()))
  3555  004110  EC9B  F027         	call	_lcd_get_position_column$F2718	;wreg free
  3556  004114  6E11               	movwf	??_lcd_clear_area^0,c
  3557  004116  5011               	movf	??_lcd_clear_area^0,w,c
  3558  004118  0866               	sublw	102
  3559  00411A  6E18               	movwf	lcd_clear_area@max^0,c
  3560  00411C  500F               	movf	lcd_clear_area@columns^0,w,c
  3561  00411E  5C18               	subwf	lcd_clear_area@max^0,w,c
  3562  004120  A0D8               	btfss	status,0,c
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;dogm-graphic.c: 220:     columns = max;
  3566  004122  C018  F00F         	movff	lcd_clear_area@max,lcd_clear_area@columns
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;dogm-graphic.c: 222:   for(j=0; j<pages; j++) {
  3570  004126  0E00               	movlw	0
  3571  004128  6E17               	movwf	lcd_clear_area@j^0,c
  3572  00412A  D01A               	goto	l6950
  3573  00412C                     l6938:
  3574                           
  3575                           ;dogm-graphic.c: 223:     for(i=0; i<columns; i++) {
  3576  00412C  0E00               	movlw	0
  3577  00412E  6E16               	movwf	lcd_clear_area@i^0,c
  3578  004130  D004               	goto	l6944
  3579  004132                     l6940:
  3580                           
  3581                           ;dogm-graphic.c: 224:       lcd_data(inv);
  3582  004132  5013               	movf	lcd_clear_area@inv^0,w,c
  3583  004134  ECA0  F026         	call	_lcd_data
  3584                           
  3585                           ;dogm-graphic.c: 225:       }
  3586  004138  2A16               	incf	lcd_clear_area@i^0,f,c
  3587  00413A                     l6944:
  3588  00413A  500F               	movf	lcd_clear_area@columns^0,w,c
  3589  00413C  5C16               	subwf	lcd_clear_area@i^0,w,c
  3590  00413E  A0D8               	btfss	status,0,c
  3591  004140  D7F8               	goto	l6940
  3592                           
  3593                           ;dogm-graphic.c: 226:     lcd_move_xy(1,-columns);
  3594  004142  500F               	movf	lcd_clear_area@columns^0,w,c
  3595  004144  6E11               	movwf	??_lcd_clear_area^0,c
  3596  004146  6A12               	clrf	(??_lcd_clear_area+1)^0,c
  3597  004148  1E11               	comf	??_lcd_clear_area^0,f,c
  3598  00414A  1E12               	comf	(??_lcd_clear_area+1)^0,f,c
  3599  00414C  4A11               	infsnz	??_lcd_clear_area^0,f,c
  3600  00414E  2A12               	incf	(??_lcd_clear_area+1)^0,f,c
  3601  004150  C011  F00C         	movff	??_lcd_clear_area,lcd_move_xy@columns
  3602  004154  C012  F00D         	movff	??_lcd_clear_area+1,lcd_move_xy@columns+1
  3603  004158  0E01               	movlw	1
  3604  00415A  EC92  F026         	call	_lcd_move_xy
  3605                           
  3606                           ; BSR set to: 61
  3607                           ;dogm-graphic.c: 227:     }
  3608  00415E  2A17               	incf	lcd_clear_area@j^0,f,c
  3609  004160                     l6950:
  3610  004160  5019               	movf	lcd_clear_area@pages^0,w,c
  3611  004162  5C17               	subwf	lcd_clear_area@j^0,w,c
  3612  004164  A0D8               	btfss	status,0,c
  3613  004166  D7E2               	goto	l6938
  3614                           
  3615                           ;dogm-graphic.c: 228:   lcd_move_xy(-pages,0);
  3616  004168  0E00               	movlw	0
  3617  00416A  6E0D               	movwf	(lcd_move_xy@columns+1)^0,c
  3618  00416C  0E00               	movlw	0
  3619  00416E  6E0C               	movwf	lcd_move_xy@columns^0,c
  3620  004170  5019               	movf	lcd_clear_area@pages^0,w,c
  3621  004172  0800               	sublw	0
  3622  004174  EC92  F026         	call	_lcd_move_xy
  3623                           
  3624                           ; BSR set to: 61
  3625  004178  0012               	return		;funcret
  3626  00417A                     __end_of_lcd_clear_area:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _lcd_move_xy *****************
  3630 ;; Defined at:
  3631 ;;		line 103 in file "dogm-graphic.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  pages           1    wreg     char 
  3634 ;;  columns         2   11[COMRAM] short 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  pages           1   13[COMRAM] char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 3F/3D
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3650 ;;Total ram usage:        3 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    7
  3653 ;; This function calls:
  3654 ;;		_lcd_inc_column
  3655 ;;		_lcd_inc_page
  3656 ;;		_lcd_moveto_xy
  3657 ;; This function is called by:
  3658 ;;		_lcd_clear_area
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text17
  3663  004D24                     __ptext17:
  3664                           	callstack 0
  3665  004D24                     _lcd_move_xy:
  3666                           	callstack 19
  3667                           
  3668                           ; BSR set to: 61
  3669                           ;incstack = 0
  3670                           ;lcd_move_xy@pages stored from wreg
  3671  004D24  6E0E               	movwf	lcd_move_xy@pages^0,c
  3672                           
  3673                           ;dogm-graphic.c: 104:   lcd_moveto_xy(lcd_inc_page(pages),lcd_inc_column(columns));
  3674  004D26  C00C  F006         	movff	lcd_move_xy@columns,lcd_inc_column@s
  3675  004D2A  C00D  F007         	movff	lcd_move_xy@columns+1,lcd_inc_column@s+1
  3676  004D2E  EC06  F027         	call	_lcd_inc_column	;wreg free
  3677  004D32  6E0A               	movwf	lcd_moveto_xy@column^0,c
  3678  004D34  500E               	movf	lcd_move_xy@pages^0,w,c
  3679  004D36  ECFB  F026         	call	_lcd_inc_page
  3680  004D3A  EC68  F025         	call	_lcd_moveto_xy
  3681                           
  3682                           ; BSR set to: 61
  3683  004D3E  0012               	return		;funcret
  3684  004D40                     __end_of_lcd_move_xy:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _lcd_moveto_xy *****************
  3688 ;; Defined at:
  3689 ;;		line 92 in file "dogm-graphic.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  page            1    wreg     unsigned char 
  3692 ;;  column          1    9[COMRAM] unsigned char 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  page            1   10[COMRAM] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/3D
  3701 ;;		On exit  : 3F/3D
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3704 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    6
  3711 ;; This function calls:
  3712 ;;		_lcd_command
  3713 ;; This function is called by:
  3714 ;;		_lcd_move_xy
  3715 ;;		_lcd_clear_area_xy
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text18
  3720  004AD0                     __ptext18:
  3721                           	callstack 0
  3722  004AD0                     _lcd_moveto_xy:
  3723                           	callstack 21
  3724                           
  3725                           ; BSR set to: 61
  3726                           ;incstack = 0
  3727                           ;lcd_moveto_xy@page stored from wreg
  3728  004AD0  6E0B               	movwf	lcd_moveto_xy@page^0,c
  3729                           
  3730                           ;dogm-graphic.c: 93:   lcd_command(0xB0 | ((page) & 0x1F)); lcd_command((((column)+0) & 
      +                          0x0F)); lcd_command(0x10 | ((((column)+0)>>4) & 0x0F));
  3731  004AD2  500B               	movf	lcd_moveto_xy@page^0,w,c
  3732  004AD4  0B1F               	andlw	31
  3733  004AD6  09B0               	iorlw	176
  3734  004AD8  EC1B  F027         	call	_lcd_command
  3735  004ADC  500A               	movf	lcd_moveto_xy@column^0,w,c
  3736  004ADE  0B0F               	andlw	15
  3737  004AE0  EC1B  F027         	call	_lcd_command
  3738  004AE4  380A               	swapf	lcd_moveto_xy@column^0,w,c
  3739  004AE6  0B0F               	andlw	15
  3740  004AE8  0B0F               	andlw	15
  3741  004AEA  0910               	iorlw	16
  3742  004AEC  EC1B  F027         	call	_lcd_command
  3743                           
  3744                           ; BSR set to: 61
  3745                           ;dogm-graphic.c: 94:   lcd_current_column = column;
  3746  004AF0  C00A  F0A1         	movff	lcd_moveto_xy@column,_lcd_current_column
  3747                           
  3748                           ; BSR set to: 61
  3749                           ;dogm-graphic.c: 95:   lcd_current_page = page;
  3750  004AF4  C00B  F0A2         	movff	lcd_moveto_xy@page,_lcd_current_page
  3751                           
  3752                           ; BSR set to: 61
  3753  004AF8  0012               	return		;funcret
  3754  004AFA                     __end_of_lcd_moveto_xy:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _lcd_command *****************
  3758 ;; Defined at:
  3759 ;;		line 128 in file "dogm-graphic.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  cmd             1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  cmd             1    6[COMRAM] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/3D
  3770 ;;		On exit  : 3F/3D
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3777 ;;Total ram usage:        1 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    5
  3780 ;; This function calls:
  3781 ;;		_SPI1_Exchange8bit
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;;		_lcd_moveto_xy
  3785 ;;		_lcd_init
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text19
  3790  004E36                     __ptext19:
  3791                           	callstack 0
  3792  004E36                     _lcd_command:
  3793                           	callstack 25
  3794                           
  3795                           ; BSR set to: 61
  3796                           ;incstack = 0
  3797                           ;lcd_command@cmd stored from wreg
  3798  004E36  6E07               	movwf	lcd_command@cmd^0,c
  3799                           
  3800                           ;dogm-graphic.c: 129:   do { LATCbits.LATC2 = 0; } while(0);;
  3801  004E38  94BC               	bcf	188,2,c	;volatile
  3802                           
  3803                           ;dogm-graphic.c: 130:   do { LATCbits.LATC1 = 0; } while(0);;
  3804  004E3A  92BC               	bcf	188,1,c	;volatile
  3805                           
  3806                           ;dogm-graphic.c: 131:   SPI1_Exchange8bit(cmd);
  3807  004E3C  5007               	movf	lcd_command@cmd^0,w,c
  3808  004E3E  ECBC  F026         	call	_SPI1_Exchange8bit
  3809                           
  3810                           ; BSR set to: 61
  3811  004E42  84BC               	bsf	188,2,c	;volatile
  3812                           
  3813                           ; BSR set to: 61
  3814  004E44  0012               	return		;funcret
  3815  004E46                     __end_of_lcd_command:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function _lcd_inc_page *****************
  3819 ;; Defined at:
  3820 ;;		line 59 in file "dogm-graphic.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  s               1    wreg     char 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  s               1    5[COMRAM] char 
  3825 ;;  p               1    6[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      unsigned char 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;Total ram usage:        2 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    4
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_lcd_move_xy
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text20
  3850  004DF6                     __ptext20:
  3851                           	callstack 0
  3852  004DF6                     _lcd_inc_page:
  3853                           	callstack 21
  3854                           
  3855                           ; BSR set to: 61
  3856                           ;incstack = 0
  3857                           ;lcd_inc_page@s stored from wreg
  3858  004DF6  6E06               	movwf	lcd_inc_page@s^0,c
  3859                           
  3860                           ;dogm-graphic.c: 60:   uint8_t p = lcd_current_page;
  3861  004DF8  C0A2  F007         	movff	_lcd_current_page,lcd_inc_page@p
  3862                           
  3863                           ;dogm-graphic.c: 61:   p += s;
  3864  004DFC  5006               	movf	lcd_inc_page@s^0,w,c
  3865  004DFE  2607               	addwf	lcd_inc_page@p^0,f,c
  3866                           
  3867                           ;dogm-graphic.c: 62:   p %= 8;
  3868  004E00  0E07               	movlw	7
  3869  004E02  1607               	andwf	lcd_inc_page@p^0,f,c
  3870                           
  3871                           ;dogm-graphic.c: 63:   lcd_current_page = p;
  3872  004E04  C007  F0A2         	movff	lcd_inc_page@p,_lcd_current_page
  3873                           
  3874                           ;dogm-graphic.c: 64:   return p;
  3875  004E08  5007               	movf	lcd_inc_page@p^0,w,c
  3876  004E0A  0012               	return		;funcret
  3877  004E0C                     __end_of_lcd_inc_page:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _lcd_get_position_page$F2716 *****************
  3881 ;; Defined at:
  3882 ;;		line 98 in file "./dogm-graphic.h"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      unsigned char 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/3D
  3893 ;;		On exit  : 3F/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    4
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_lcd_clear_area
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text21
  3911  004F1E                     __ptext21:
  3912                           	callstack 0
  3913  004F1E                     _lcd_get_position_page$F2716:
  3914                           	callstack 22
  3915                           
  3916                           ;incstack = 0
  3917  004F1E  0100               	movlb	0	; () banked
  3918  004F20  51A2               	movf	_lcd_current_page& (0+255),w,b
  3919                           
  3920                           ; BSR set to: 0
  3921  004F22  0012               	return		;funcret
  3922  004F24                     __end_of_lcd_get_position_page$F2716:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _lcd_get_position_column$F2718 *****************
  3926 ;; Defined at:
  3927 ;;		line 99 in file "./dogm-graphic.h"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      unsigned char 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2
  3936 ;; Tracked objects:
  3937 ;;		On entry : 3F/0
  3938 ;;		On exit  : 3F/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    4
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_lcd_clear_area
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text22
  3956  004F36                     __ptext22:
  3957                           	callstack 0
  3958  004F36                     _lcd_get_position_column$F2718:
  3959                           	callstack 22
  3960                           
  3961                           ; BSR set to: 0
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;incstack = 0
  3965  004F36  51A1               	movf	_lcd_current_column& (0+255),w,b
  3966                           
  3967                           ; BSR set to: 0
  3968  004F38  0012               	return		;funcret
  3969  004F3A                     __end_of_lcd_get_position_column$F2718:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _lcd_data *****************
  3973 ;; Defined at:
  3974 ;;		line 116 in file "dogm-graphic.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  data            1    wreg     unsigned char 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  data            1    9[COMRAM] unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/3D
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;Total ram usage:        1 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    5
  3995 ;; This function calls:
  3996 ;;		_SPI1_Exchange8bit
  3997 ;;		_lcd_inc_column
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;;		_lcd_clear_area
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text23
  4005  004D40                     __ptext23:
  4006                           	callstack 0
  4007  004D40                     _lcd_data:
  4008                           	callstack 25
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;incstack = 0
  4012                           ;lcd_data@data stored from wreg
  4013  004D40  6E0A               	movwf	lcd_data@data^0,c
  4014                           
  4015                           ;dogm-graphic.c: 117:   do { LATCbits.LATC2 = 0; } while(0);;
  4016  004D42  94BC               	bcf	188,2,c	;volatile
  4017                           
  4018                           ;dogm-graphic.c: 118:   do { LATCbits.LATC1 = 1; } while(0);;
  4019  004D44  82BC               	bsf	188,1,c	;volatile
  4020                           
  4021                           ;dogm-graphic.c: 119:   SPI1_Exchange8bit(data);
  4022  004D46  500A               	movf	lcd_data@data^0,w,c
  4023  004D48  ECBC  F026         	call	_SPI1_Exchange8bit
  4024                           
  4025                           ; BSR set to: 61
  4026  004D4C  84BC               	bsf	188,2,c	;volatile
  4027                           
  4028                           ; BSR set to: 61
  4029                           ;dogm-graphic.c: 121:   lcd_inc_column(1);
  4030  004D4E  0E00               	movlw	0
  4031  004D50  6E07               	movwf	(lcd_inc_column@s+1)^0,c
  4032  004D52  0E01               	movlw	1
  4033  004D54  6E06               	movwf	lcd_inc_column@s^0,c
  4034  004D56  EC06  F027         	call	_lcd_inc_column	;wreg free
  4035  004D5A  0012               	return		;funcret
  4036  004D5C                     __end_of_lcd_data:
  4037                           	callstack 0
  4038                           
  4039 ;; *************** function _lcd_inc_column *****************
  4040 ;; Defined at:
  4041 ;;		line 71 in file "dogm-graphic.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  s               2    5[COMRAM] short 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  c               2    7[COMRAM] unsigned short 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      unsigned char 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4059 ;;Total ram usage:        4 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    4
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_lcd_move_xy
  4066 ;;		_lcd_data
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text24
  4071  004E0C                     __ptext24:
  4072                           	callstack 0
  4073  004E0C                     _lcd_inc_column:
  4074                           	callstack 25
  4075                           
  4076                           ;dogm-graphic.c: 72:   uint16_t c = lcd_current_column;
  4077                           
  4078                           ;incstack = 0
  4079  004E0C  C0A1  F008         	movff	_lcd_current_column,lcd_inc_column@c
  4080  004E10  6A09               	clrf	(lcd_inc_column@c+1)^0,c
  4081                           
  4082                           ;dogm-graphic.c: 73:   c += s;
  4083  004E12  5006               	movf	lcd_inc_column@s^0,w,c
  4084  004E14  2608               	addwf	lcd_inc_column@c^0,f,c
  4085  004E16  5007               	movf	(lcd_inc_column@s+1)^0,w,c
  4086  004E18  2209               	addwfc	(lcd_inc_column@c+1)^0,f,c
  4087                           
  4088                           ;dogm-graphic.c: 82:   lcd_current_column = c;
  4089  004E1A  C008  F0A1         	movff	lcd_inc_column@c,_lcd_current_column
  4090                           
  4091                           ;dogm-graphic.c: 83:   return c;
  4092  004E1E  5008               	movf	lcd_inc_column@c^0,w,c
  4093  004E20  0012               	return		;funcret
  4094  004E22                     __end_of_lcd_inc_column:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _SPI1_Exchange8bit *****************
  4098 ;; Defined at:
  4099 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  data            1    wreg     unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  data            1    5[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      unsigned char 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/1
  4110 ;;		On exit  : 3F/3D
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4117 ;;Total ram usage:        1 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    4
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_send_lcd_cmd
  4124 ;;		_eaDogM_WriteString
  4125 ;;		_lcd_data
  4126 ;;		_lcd_command
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text25
  4131  004D78                     __ptext25:
  4132                           	callstack 0
  4133  004D78                     _SPI1_Exchange8bit:
  4134                           	callstack 23
  4135                           
  4136                           ;incstack = 0
  4137                           ;SPI1_Exchange8bit@data stored from wreg
  4138  004D78  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  4139                           
  4140                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4141  004D7A  0E01               	movlw	1
  4142  004D7C  013D               	movlb	61	; () banked
  4143  004D7E  6F12               	movwf	18,b	;volatile
  4144                           
  4145                           ; BSR set to: 61
  4146                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4147  004D80  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  4148  004D86                     l989:
  4149                           
  4150                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4151  004D86  0139               	movlb	57	; () banked
  4152  004D88  A9A2               	btfss	162,4,b	;volatile
  4153  004D8A  D7FD               	goto	l989
  4154                           
  4155                           ; BSR set to: 57
  4156                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4157  004D8C  013D               	movlb	61	; () banked
  4158  004D8E  5110               	movf	16,w,b	;volatile
  4159                           
  4160                           ; BSR set to: 61
  4161  004D90  0012               	return		;funcret
  4162  004D92                     __end_of_SPI1_Exchange8bit:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _SYSTEM_Initialize *****************
  4166 ;; Defined at:
  4167 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 3F/0
  4178 ;;		On exit  : 3F/3D
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4185 ;;Total ram usage:        0 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    6
  4188 ;; This function calls:
  4189 ;;		_ADCC_Initialize
  4190 ;;		_FVR_Initialize
  4191 ;;		_INTERRUPT_Initialize
  4192 ;;		_OSCILLATOR_Initialize
  4193 ;;		_PIN_MANAGER_Initialize
  4194 ;;		_PMD_Initialize
  4195 ;;		_PWM8_Initialize
  4196 ;;		_SPI1_Initialize
  4197 ;;		_TMR2_Initialize
  4198 ;;		_TMR5_Initialize
  4199 ;;		_TMR6_Initialize
  4200 ;;		_UART1_Initialize
  4201 ;;		_UART2_Initialize
  4202 ;; This function is called by:
  4203 ;;		_main
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text26
  4208  0048E8                     __ptext26:
  4209                           	callstack 0
  4210  0048E8                     _SYSTEM_Initialize:
  4211                           	callstack 24
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  4215                           
  4216                           ; BSR set to: 61
  4217                           ;incstack = 0
  4218  0048E8  EC19  F023         	call	_INTERRUPT_Initialize	;wreg free
  4219                           
  4220                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4221  0048EC  EC36  F026         	call	_PMD_Initialize	;wreg free
  4222                           
  4223                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4224  0048F0  EC7C  F01F         	call	_PIN_MANAGER_Initialize	;wreg free
  4225                           
  4226                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4227  0048F4  ECAE  F026         	call	_OSCILLATOR_Initialize	;wreg free
  4228                           
  4229                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  4230  0048F8  EC8B  F027         	call	_FVR_Initialize	;wreg free
  4231                           
  4232                           ; BSR set to: 62
  4233                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
  4234  0048FC  EC25  F025         	call	_TMR6_Initialize	;wreg free
  4235                           
  4236                           ; BSR set to: 57
  4237                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  4238  004900  EC78  F022         	call	_ADCC_Initialize	;wreg free
  4239                           
  4240                           ; BSR set to: 62
  4241                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  4242  004904  EC67  F026         	call	_TMR2_Initialize	;wreg free
  4243                           
  4244                           ; BSR set to: 57
  4245                           ;mcc_generated_files/mcc.c: 60:     TMR5_Initialize();
  4246  004908  ECF4  F022         	call	_TMR5_Initialize	;wreg free
  4247                           
  4248                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  4249  00490C  ECEF  F026         	call	_PWM8_Initialize	;wreg free
  4250                           
  4251                           ; BSR set to: 63
  4252                           ;mcc_generated_files/mcc.c: 62:     UART2_Initialize();
  4253  004910  ECCE  F01E         	call	_UART2_Initialize	;wreg free
  4254                           
  4255                           ; BSR set to: 57
  4256                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
  4257  004914  EC72  F01E         	call	_UART1_Initialize	;wreg free
  4258                           
  4259                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
  4260  004918  ECE3  F026         	call	_SPI1_Initialize	;wreg free
  4261                           
  4262                           ; BSR set to: 61
  4263  00491C  0012               	return		;funcret
  4264  00491E                     __end_of_SYSTEM_Initialize:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _UART2_Initialize *****************
  4268 ;; Defined at:
  4269 ;;		line 87 in file "mcc_generated_files/uart2.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 3F/3F
  4280 ;;		On exit  : 3F/39
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    5
  4290 ;; This function calls:
  4291 ;;		_UART2_SetErrorHandler
  4292 ;;		_UART2_SetFramingErrorHandler
  4293 ;;		_UART2_SetOverrunErrorHandler
  4294 ;;		_UART2_SetRxInterruptHandler
  4295 ;;		_UART2_SetTxInterruptHandler
  4296 ;; This function is called by:
  4297 ;;		_SYSTEM_Initialize
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text27
  4302  003D9C                     __ptext27:
  4303                           	callstack 0
  4304  003D9C                     _UART2_Initialize:
  4305                           	callstack 24
  4306                           
  4307                           ; BSR set to: 63
  4308                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  4309                           
  4310                           ; BSR set to: 61
  4311                           ;incstack = 0
  4312  003D9C  0139               	movlb	57	; () banked
  4313  003D9E  9596               	bcf	150,2,b	;volatile
  4314                           
  4315                           ; BSR set to: 57
  4316                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  4317  003DA0  0E42               	movlw	low _UART2_Receive_ISR
  4318  003DA2  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  4319  003DA4  0E40               	movlw	high _UART2_Receive_ISR
  4320  003DA6  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4321  003DA8  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  4322  003DAA  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4323  003DAC  EC32  F027         	call	_UART2_SetRxInterruptHandler	;wreg free
  4324                           
  4325                           ; BSR set to: 57
  4326                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  4327  003DB0  9796               	bcf	150,3,b	;volatile
  4328                           
  4329                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  4330  003DB2  0EB4               	movlw	low _UART2_Transmit_ISR
  4331  003DB4  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  4332  003DB6  0E49               	movlw	high _UART2_Transmit_ISR
  4333  003DB8  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4334  003DBA  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  4335  003DBC  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4336  003DBE  EC2B  F027         	call	_UART2_SetTxInterruptHandler	;wreg free
  4337                           
  4338                           ; BSR set to: 57
  4339                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  4340  003DC2  0E00               	movlw	0
  4341  003DC4  013D               	movlb	61	; () banked
  4342  003DC6  6FD4               	movwf	212,b	;volatile
  4343                           
  4344                           ; BSR set to: 61
  4345                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  4346  003DC8  0E00               	movlw	0
  4347  003DCA  6FD6               	movwf	214,b	;volatile
  4348                           
  4349                           ; BSR set to: 61
  4350                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  4351  003DCC  0E00               	movlw	0
  4352  003DCE  6FD8               	movwf	216,b	;volatile
  4353                           
  4354                           ; BSR set to: 61
  4355                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  4356  003DD0  0EB0               	movlw	176
  4357  003DD2  6FDA               	movwf	218,b	;volatile
  4358                           
  4359                           ; BSR set to: 61
  4360                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  4361  003DD4  0E80               	movlw	128
  4362  003DD6  6FDB               	movwf	219,b	;volatile
  4363                           
  4364                           ; BSR set to: 61
  4365                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  4366  003DD8  0E00               	movlw	0
  4367  003DDA  6FDC               	movwf	220,b	;volatile
  4368                           
  4369                           ; BSR set to: 61
  4370                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  4371  003DDC  0E40               	movlw	64
  4372  003DDE  6FDD               	movwf	221,b	;volatile
  4373                           
  4374                           ; BSR set to: 61
  4375                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  4376  003DE0  0E03               	movlw	3
  4377  003DE2  6FDE               	movwf	222,b	;volatile
  4378                           
  4379                           ; BSR set to: 61
  4380                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  4381  003DE4  0E00               	movlw	0
  4382  003DE6  6FDF               	movwf	223,b	;volatile
  4383                           
  4384                           ; BSR set to: 61
  4385                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  4386  003DE8  0E00               	movlw	0
  4387  003DEA  6FE0               	movwf	224,b	;volatile
  4388                           
  4389                           ; BSR set to: 61
  4390                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  4391  003DEC  0E00               	movlw	0
  4392  003DEE  6FE1               	movwf	225,b	;volatile
  4393                           
  4394                           ; BSR set to: 61
  4395                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  4396  003DF0  0E00               	movlw	0
  4397  003DF2  6FE2               	movwf	226,b	;volatile
  4398                           
  4399                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  4400  003DF4  0E44               	movlw	low _UART2_DefaultFramingErrorHandler
  4401  003DF6  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  4402  003DF8  0E4F               	movlw	high _UART2_DefaultFramingErrorHandler
  4403  003DFA  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  4404  003DFC  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  4405  003DFE  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  4406  003E00  EC40  F027         	call	_UART2_SetFramingErrorHandler	;wreg free
  4407                           
  4408                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  4409  003E04  0E42               	movlw	low _UART2_DefaultOverrunErrorHandler
  4410  003E06  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  4411  003E08  0E4F               	movlw	high _UART2_DefaultOverrunErrorHandler
  4412  003E0A  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4413  003E0C  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  4414  003E0E  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4415  003E10  EC39  F027         	call	_UART2_SetOverrunErrorHandler	;wreg free
  4416                           
  4417                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  4418  003E14  0E30               	movlw	low _UART2_DefaultErrorHandler
  4419  003E16  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  4420  003E18  0E4F               	movlw	high _UART2_DefaultErrorHandler
  4421  003E1A  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  4422  003E1C  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  4423  003E1E  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  4424  003E20  EC47  F027         	call	_UART2_SetErrorHandler	;wreg free
  4425                           
  4426                           ; BSR set to: 61
  4427                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  4428  003E24  0E00               	movlw	0
  4429  003E26  0101               	movlb	1	; () banked
  4430  003E28  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  4434  003E2A  0E00               	movlw	0
  4435  003E2C  0100               	movlb	0	; () banked
  4436  003E2E  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  4440  003E30  0E00               	movlw	0
  4441  003E32  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  4445  003E34  0E08               	movlw	8
  4446  003E36  6FA4               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  4450  003E38  0E00               	movlw	0
  4451  003E3A  6E59               	movwf	_uart2RxHead^0,c	;volatile
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  4455  003E3C  0E00               	movlw	0
  4456  003E3E  6E58               	movwf	_uart2RxTail^0,c	;volatile
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  4460  003E40  0E00               	movlw	0
  4461  003E42  6FA3               	movwf	_uart2RxCount& (0+255),b	;volatile
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  4465  003E44  0139               	movlb	57	; () banked
  4466  003E46  8596               	bsf	150,2,b	;volatile
  4467                           
  4468                           ; BSR set to: 57
  4469  003E48  0012               	return		;funcret
  4470  003E4A                     __end_of_UART2_Initialize:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _UART2_SetTxInterruptHandler *****************
  4474 ;; Defined at:
  4475 ;;		line 324 in file "mcc_generated_files/uart2.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4478 ;;		 -> UART2_Transmit_ISR(1), 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0
  4485 ;; Tracked objects:
  4486 ;;		On entry : 3F/39
  4487 ;;		On exit  : 3F/39
  4488 ;;		Unchanged: 3E/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4490 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4493 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4494 ;;Total ram usage:        3 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    4
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_UART2_Initialize
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text28
  4505  004E56                     __ptext28:
  4506                           	callstack 0
  4507  004E56                     _UART2_SetTxInterruptHandler:
  4508                           	callstack 24
  4509                           
  4510                           ; BSR set to: 57
  4511                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  4512                           
  4513                           ; BSR set to: 57
  4514                           ;incstack = 0
  4515  004E56  C006  F184         	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  4516  004E5A  C007  F185         	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  4517  004E5E  C008  F186         	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  4518                           
  4519                           ; BSR set to: 57
  4520  004E62  0012               	return		;funcret
  4521  004E64                     __end_of_UART2_SetTxInterruptHandler:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _UART2_SetRxInterruptHandler *****************
  4525 ;; Defined at:
  4526 ;;		line 320 in file "mcc_generated_files/uart2.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4529 ;;		 -> UART2_Receive_ISR(1), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 3F/39
  4538 ;;		On exit  : 3F/39
  4539 ;;		Unchanged: 3E/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4541 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4544 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4545 ;;Total ram usage:        3 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    4
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_UART2_Initialize
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text29
  4556  004E64                     __ptext29:
  4557                           	callstack 0
  4558  004E64                     _UART2_SetRxInterruptHandler:
  4559                           	callstack 24
  4560                           
  4561                           ; BSR set to: 57
  4562                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  4563                           
  4564                           ; BSR set to: 57
  4565                           ;incstack = 0
  4566  004E64  C006  F187         	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  4567  004E68  C007  F188         	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  4568  004E6C  C008  F189         	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  4569                           
  4570                           ; BSR set to: 57
  4571  004E70  0012               	return		;funcret
  4572  004E72                     __end_of_UART2_SetRxInterruptHandler:
  4573                           	callstack 0
  4574                           
  4575 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  4576 ;; Defined at:
  4577 ;;		line 310 in file "mcc_generated_files/uart2.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4580 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 3F/3D
  4589 ;;		On exit  : 3F/3D
  4590 ;;		Unchanged: 3E/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4592 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4596 ;;Total ram usage:        3 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    4
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_UART2_Initialize
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text30
  4607  004E72                     __ptext30:
  4608                           	callstack 0
  4609  004E72                     _UART2_SetOverrunErrorHandler:
  4610                           	callstack 24
  4611                           
  4612                           ; BSR set to: 61
  4613                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  4614                           
  4615                           ; BSR set to: 57
  4616                           ;incstack = 0
  4617  004E72  C006  F16F         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  4618  004E76  C007  F170         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  4619  004E7A  C008  F171         	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  4620                           
  4621                           ; BSR set to: 61
  4622  004E7E  0012               	return		;funcret
  4623  004E80                     __end_of_UART2_SetOverrunErrorHandler:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _UART2_SetFramingErrorHandler *****************
  4627 ;; Defined at:
  4628 ;;		line 306 in file "mcc_generated_files/uart2.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4631 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 3F/3D
  4640 ;;		On exit  : 3F/3D
  4641 ;;		Unchanged: 3E/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4643 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4646 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4647 ;;Total ram usage:        3 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    4
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_UART2_Initialize
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text31
  4658  004E80                     __ptext31:
  4659                           	callstack 0
  4660  004E80                     _UART2_SetFramingErrorHandler:
  4661                           	callstack 24
  4662                           
  4663                           ; BSR set to: 61
  4664                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  4665                           
  4666                           ; BSR set to: 61
  4667                           ;incstack = 0
  4668  004E80  C006  F172         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  4669  004E84  C007  F173         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  4670  004E88  C008  F174         	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  4671                           
  4672                           ; BSR set to: 61
  4673  004E8C  0012               	return		;funcret
  4674  004E8E                     __end_of_UART2_SetFramingErrorHandler:
  4675                           	callstack 0
  4676                           
  4677 ;; *************** function _UART2_SetErrorHandler *****************
  4678 ;; Defined at:
  4679 ;;		line 314 in file "mcc_generated_files/uart2.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4682 ;;		 -> UART2_DefaultErrorHandler(1), 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0
  4689 ;; Tracked objects:
  4690 ;;		On entry : 3F/3D
  4691 ;;		On exit  : 3F/3D
  4692 ;;		Unchanged: 3E/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4694 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4698 ;;Total ram usage:        3 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    4
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_UART2_Initialize
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text32
  4709  004E8E                     __ptext32:
  4710                           	callstack 0
  4711  004E8E                     _UART2_SetErrorHandler:
  4712                           	callstack 24
  4713                           
  4714                           ; BSR set to: 61
  4715                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  4716                           
  4717                           ; BSR set to: 61
  4718                           ;incstack = 0
  4719  004E8E  C006  F16C         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  4720  004E92  C007  F16D         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  4721  004E96  C008  F16E         	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  4722                           
  4723                           ; BSR set to: 61
  4724  004E9A  0012               	return		;funcret
  4725  004E9C                     __end_of_UART2_SetErrorHandler:
  4726                           	callstack 0
  4727                           
  4728 ;; *************** function _UART1_Initialize *****************
  4729 ;; Defined at:
  4730 ;;		line 87 in file "mcc_generated_files/uart1.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 3F/39
  4741 ;;		On exit  : 3F/39
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4748 ;;Total ram usage:        0 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    5
  4751 ;; This function calls:
  4752 ;;		_UART1_SetErrorHandler
  4753 ;;		_UART1_SetFramingErrorHandler
  4754 ;;		_UART1_SetOverrunErrorHandler
  4755 ;;		_UART1_SetRxInterruptHandler
  4756 ;;		_UART1_SetTxInterruptHandler
  4757 ;; This function is called by:
  4758 ;;		_SYSTEM_Initialize
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text33
  4763  003CE4                     __ptext33:
  4764                           	callstack 0
  4765  003CE4                     _UART1_Initialize:
  4766                           	callstack 24
  4767                           
  4768                           ; BSR set to: 57
  4769                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  4770                           
  4771                           ; BSR set to: 61
  4772                           ;incstack = 0
  4773  003CE4  9793               	bcf	147,3,b	;volatile
  4774                           
  4775                           ; BSR set to: 57
  4776                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  4777  003CE6  0EA4               	movlw	low _UART1_Receive_ISR
  4778  003CE8  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  4779  003CEA  0E3F               	movlw	high _UART1_Receive_ISR
  4780  003CEC  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4781  003CEE  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  4782  003CF0  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4783  003CF2  EC55  F027         	call	_UART1_SetRxInterruptHandler	;wreg free
  4784                           
  4785                           ; BSR set to: 57
  4786                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  4787  003CF6  9993               	bcf	147,4,b	;volatile
  4788                           
  4789                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  4790  003CF8  0E82               	movlw	low _UART1_Transmit_ISR
  4791  003CFA  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  4792  003CFC  0E49               	movlw	high _UART1_Transmit_ISR
  4793  003CFE  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4794  003D00  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  4795  003D02  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4796  003D04  EC4E  F027         	call	_UART1_SetTxInterruptHandler	;wreg free
  4797                           
  4798                           ; BSR set to: 57
  4799                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  4800  003D08  0E00               	movlw	0
  4801  003D0A  013D               	movlb	61	; () banked
  4802  003D0C  6FEC               	movwf	236,b	;volatile
  4803                           
  4804                           ; BSR set to: 61
  4805                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  4806  003D0E  0E00               	movlw	0
  4807  003D10  6FED               	movwf	237,b	;volatile
  4808                           
  4809                           ; BSR set to: 61
  4810                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  4811  003D12  0E00               	movlw	0
  4812  003D14  6FEE               	movwf	238,b	;volatile
  4813                           
  4814                           ; BSR set to: 61
  4815                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  4816  003D16  0E00               	movlw	0
  4817  003D18  6FEF               	movwf	239,b	;volatile
  4818                           
  4819                           ; BSR set to: 61
  4820                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  4821  003D1A  0E00               	movlw	0
  4822  003D1C  6FF0               	movwf	240,b	;volatile
  4823                           
  4824                           ; BSR set to: 61
  4825                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  4826  003D1E  0E00               	movlw	0
  4827  003D20  6FF1               	movwf	241,b	;volatile
  4828                           
  4829                           ; BSR set to: 61
  4830                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  4831  003D22  0E90               	movlw	144
  4832  003D24  6FF2               	movwf	242,b	;volatile
  4833                           
  4834                           ; BSR set to: 61
  4835                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  4836  003D26  0E80               	movlw	128
  4837  003D28  6FF3               	movwf	243,b	;volatile
  4838                           
  4839                           ; BSR set to: 61
  4840                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  4841  003D2A  0E00               	movlw	0
  4842  003D2C  6FF4               	movwf	244,b	;volatile
  4843                           
  4844                           ; BSR set to: 61
  4845                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  4846  003D2E  0E40               	movlw	64
  4847  003D30  6FF5               	movwf	245,b	;volatile
  4848                           
  4849                           ; BSR set to: 61
  4850                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  4851  003D32  0E03               	movlw	3
  4852  003D34  6FF6               	movwf	246,b	;volatile
  4853                           
  4854                           ; BSR set to: 61
  4855                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  4856  003D36  0E00               	movlw	0
  4857  003D38  6FF7               	movwf	247,b	;volatile
  4858                           
  4859                           ; BSR set to: 61
  4860                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  4861  003D3A  0E00               	movlw	0
  4862  003D3C  6FF8               	movwf	248,b	;volatile
  4863                           
  4864                           ; BSR set to: 61
  4865                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  4866  003D3E  0E00               	movlw	0
  4867  003D40  6FF9               	movwf	249,b	;volatile
  4868                           
  4869                           ; BSR set to: 61
  4870                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  4871  003D42  0E00               	movlw	0
  4872  003D44  6FFA               	movwf	250,b	;volatile
  4873                           
  4874                           ; BSR set to: 61
  4875                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  4876  003D46  0E40               	movlw	low _UART1_DefaultFramingErrorHandler
  4877  003D48  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  4878  003D4A  0E4F               	movlw	high _UART1_DefaultFramingErrorHandler
  4879  003D4C  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4880  003D4E  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  4881  003D50  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  4882  003D52  EC63  F027         	call	_UART1_SetFramingErrorHandler	;wreg free
  4883                           
  4884                           ; BSR set to: 61
  4885                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  4886  003D56  0E3E               	movlw	low _UART1_DefaultOverrunErrorHandler
  4887  003D58  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  4888  003D5A  0E4F               	movlw	high _UART1_DefaultOverrunErrorHandler
  4889  003D5C  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4890  003D5E  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  4891  003D60  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4892  003D62  EC5C  F027         	call	_UART1_SetOverrunErrorHandler	;wreg free
  4893                           
  4894                           ; BSR set to: 61
  4895                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  4896  003D66  0E2A               	movlw	low _UART1_DefaultErrorHandler
  4897  003D68  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  4898  003D6A  0E4F               	movlw	high _UART1_DefaultErrorHandler
  4899  003D6C  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  4900  003D6E  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  4901  003D70  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  4902  003D72  EC6A  F027         	call	_UART1_SetErrorHandler	;wreg free
  4903                           
  4904                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  4905  003D76  0E00               	movlw	0
  4906  003D78  0101               	movlb	1	; () banked
  4907  003D7A  6F95               	movwf	_uart1RxLastError& (0+255),b	;volatile
  4908                           
  4909                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  4910  003D7C  0E00               	movlw	0
  4911  003D7E  0100               	movlb	0	; () banked
  4912  003D80  6FAB               	movwf	_uart1TxHead& (0+255),b	;volatile
  4913                           
  4914                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  4915  003D82  0E00               	movlw	0
  4916  003D84  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
  4917                           
  4918                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  4919  003D86  0E08               	movlw	8
  4920  003D88  6FA9               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  4921                           
  4922                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  4923  003D8A  0E00               	movlw	0
  4924  003D8C  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  4925                           
  4926                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  4927  003D8E  0E00               	movlw	0
  4928  003D90  6FA8               	movwf	_uart1RxTail& (0+255),b	;volatile
  4929                           
  4930                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  4931  003D92  0E00               	movlw	0
  4932  003D94  6FA7               	movwf	_uart1RxCount& (0+255),b	;volatile
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  4936  003D96  0139               	movlb	57	; () banked
  4937  003D98  8793               	bsf	147,3,b	;volatile
  4938                           
  4939                           ; BSR set to: 57
  4940  003D9A  0012               	return		;funcret
  4941  003D9C                     __end_of_UART1_Initialize:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _UART1_SetTxInterruptHandler *****************
  4945 ;; Defined at:
  4946 ;;		line 323 in file "mcc_generated_files/uart1.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4949 ;;		 -> UART1_Transmit_ISR(1), 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0
  4956 ;; Tracked objects:
  4957 ;;		On entry : 3F/39
  4958 ;;		On exit  : 3F/39
  4959 ;;		Unchanged: 3E/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4961 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4964 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4965 ;;Total ram usage:        3 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    4
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_UART1_Initialize
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text34
  4976  004E9C                     __ptext34:
  4977                           	callstack 0
  4978  004E9C                     _UART1_SetTxInterruptHandler:
  4979                           	callstack 24
  4980                           
  4981                           ; BSR set to: 57
  4982                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  4983                           
  4984                           ; BSR set to: 57
  4985                           ;incstack = 0
  4986  004E9C  C006  F17E         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  4987  004EA0  C007  F17F         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  4988  004EA4  C008  F180         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  4989                           
  4990                           ; BSR set to: 57
  4991  004EA8  0012               	return		;funcret
  4992  004EAA                     __end_of_UART1_SetTxInterruptHandler:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function _UART1_SetRxInterruptHandler *****************
  4996 ;; Defined at:
  4997 ;;		line 319 in file "mcc_generated_files/uart1.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5000 ;;		 -> UART1_Receive_ISR(1), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 3F/39
  5009 ;;		On exit  : 3F/39
  5010 ;;		Unchanged: 3E/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5012 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5015 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5016 ;;Total ram usage:        3 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    4
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_UART1_Initialize
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text35
  5027  004EAA                     __ptext35:
  5028                           	callstack 0
  5029  004EAA                     _UART1_SetRxInterruptHandler:
  5030                           	callstack 24
  5031                           
  5032                           ; BSR set to: 57
  5033                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  5034                           
  5035                           ; BSR set to: 57
  5036                           ;incstack = 0
  5037  004EAA  C006  F181         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  5038  004EAE  C007  F182         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  5039  004EB2  C008  F183         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  5040                           
  5041                           ; BSR set to: 57
  5042  004EB6  0012               	return		;funcret
  5043  004EB8                     __end_of_UART1_SetRxInterruptHandler:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  5047 ;; Defined at:
  5048 ;;		line 309 in file "mcc_generated_files/uart1.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5051 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0
  5058 ;; Tracked objects:
  5059 ;;		On entry : 3F/3D
  5060 ;;		On exit  : 3F/3D
  5061 ;;		Unchanged: 3E/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5066 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5067 ;;Total ram usage:        3 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    4
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_UART1_Initialize
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text36
  5078  004EB8                     __ptext36:
  5079                           	callstack 0
  5080  004EB8                     _UART1_SetOverrunErrorHandler:
  5081                           	callstack 24
  5082                           
  5083                           ; BSR set to: 61
  5084                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  5085                           
  5086                           ; BSR set to: 57
  5087                           ;incstack = 0
  5088  004EB8  C006  F178         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  5089  004EBC  C007  F179         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  5090  004EC0  C008  F17A         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  5091                           
  5092                           ; BSR set to: 61
  5093  004EC4  0012               	return		;funcret
  5094  004EC6                     __end_of_UART1_SetOverrunErrorHandler:
  5095                           	callstack 0
  5096                           
  5097 ;; *************** function _UART1_SetFramingErrorHandler *****************
  5098 ;; Defined at:
  5099 ;;		line 305 in file "mcc_generated_files/uart1.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5102 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2, status,0
  5109 ;; Tracked objects:
  5110 ;;		On entry : 3F/3D
  5111 ;;		On exit  : 3F/3D
  5112 ;;		Unchanged: 3E/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5114 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5118 ;;Total ram usage:        3 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    4
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_UART1_Initialize
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text37
  5129  004EC6                     __ptext37:
  5130                           	callstack 0
  5131  004EC6                     _UART1_SetFramingErrorHandler:
  5132                           	callstack 24
  5133                           
  5134                           ; BSR set to: 61
  5135                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  5136                           
  5137                           ; BSR set to: 61
  5138                           ;incstack = 0
  5139  004EC6  C006  F17B         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  5140  004ECA  C007  F17C         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  5141  004ECE  C008  F17D         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  5142                           
  5143                           ; BSR set to: 61
  5144  004ED2  0012               	return		;funcret
  5145  004ED4                     __end_of_UART1_SetFramingErrorHandler:
  5146                           	callstack 0
  5147                           
  5148 ;; *************** function _UART1_SetErrorHandler *****************
  5149 ;; Defined at:
  5150 ;;		line 313 in file "mcc_generated_files/uart1.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5153 ;;		 -> UART1_DefaultErrorHandler(1), 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 3F/3D
  5162 ;;		On exit  : 3F/3D
  5163 ;;		Unchanged: 3E/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5168 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5169 ;;Total ram usage:        3 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    4
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_UART1_Initialize
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text38
  5180  004ED4                     __ptext38:
  5181                           	callstack 0
  5182  004ED4                     _UART1_SetErrorHandler:
  5183                           	callstack 24
  5184                           
  5185                           ; BSR set to: 61
  5186                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  5187                           
  5188                           ; BSR set to: 61
  5189                           ;incstack = 0
  5190  004ED4  C006  F175         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  5191  004ED8  C007  F176         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  5192  004EDC  C008  F177         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  5193                           
  5194                           ; BSR set to: 61
  5195  004EE0  0012               	return		;funcret
  5196  004EE2                     __end_of_UART1_SetErrorHandler:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _TMR6_Initialize *****************
  5200 ;; Defined at:
  5201 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 3F/3E
  5212 ;;		On exit  : 3F/39
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    5
  5222 ;; This function calls:
  5223 ;;		_TMR6_SetInterruptHandler
  5224 ;; This function is called by:
  5225 ;;		_SYSTEM_Initialize
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text39
  5230  004A4A                     __ptext39:
  5231                           	callstack 0
  5232  004A4A                     _TMR6_Initialize:
  5233                           	callstack 24
  5234                           
  5235                           ; BSR set to: 62
  5236                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  5237                           
  5238                           ; BSR set to: 61
  5239                           ;incstack = 0
  5240  004A4A  0E01               	movlw	1
  5241  004A4C  6E96               	movwf	150,c	;volatile
  5242                           
  5243                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  5244  004A4E  0E00               	movlw	0
  5245  004A50  6E95               	movwf	149,c	;volatile
  5246                           
  5247                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  5248  004A52  0E00               	movlw	0
  5249  004A54  6E97               	movwf	151,c	;volatile
  5250                           
  5251                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  5252  004A56  0E03               	movlw	3
  5253  004A58  6E93               	movwf	147,c	;volatile
  5254                           
  5255                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  5256  004A5A  0E00               	movlw	0
  5257  004A5C  6E92               	movwf	146,c	;volatile
  5258                           
  5259                           ; BSR set to: 62
  5260                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  5261  004A5E  0139               	movlb	57	; () banked
  5262  004A60  91A9               	bcf	169,0,b	;volatile
  5263                           
  5264                           ; BSR set to: 57
  5265                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  5266  004A62  8199               	bsf	153,0,b	;volatile
  5267                           
  5268                           ; BSR set to: 57
  5269                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  5270  004A64  0ECA               	movlw	low _TMR6_DefaultInterruptHandler
  5271  004A66  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  5272  004A68  0E47               	movlw	high _TMR6_DefaultInterruptHandler
  5273  004A6A  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  5274  004A6C  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  5275  004A6E  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  5276  004A70  EC71  F027         	call	_TMR6_SetInterruptHandler	;wreg free
  5277                           
  5278                           ; BSR set to: 57
  5279                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  5280  004A74  6894               	setf	148,c	;volatile
  5281                           
  5282                           ; BSR set to: 57
  5283  004A76  0012               	return		;funcret
  5284  004A78                     __end_of_TMR6_Initialize:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function _TMR6_SetInterruptHandler *****************
  5288 ;; Defined at:
  5289 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5292 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;		None
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 3F/39
  5301 ;;		On exit  : 3F/39
  5302 ;;		Unchanged: 3E/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5307 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5308 ;;Total ram usage:        3 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    4
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_TMR6_Initialize
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text40
  5319  004EE2                     __ptext40:
  5320                           	callstack 0
  5321  004EE2                     _TMR6_SetInterruptHandler:
  5322                           	callstack 24
  5323                           
  5324                           ; BSR set to: 57
  5325                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  5326                           
  5327                           ; BSR set to: 57
  5328                           ;incstack = 0
  5329  004EE2  C006  F169         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  5330  004EE6  C007  F16A         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  5331  004EEA  C008  F16B         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  5332                           
  5333                           ; BSR set to: 57
  5334  004EEE  0012               	return		;funcret
  5335  004EF0                     __end_of_TMR6_SetInterruptHandler:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function _TMR5_Initialize *****************
  5339 ;; Defined at:
  5340 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 3F/39
  5351 ;;		On exit  : 3F/39
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;Total ram usage:        2 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    5
  5361 ;; This function calls:
  5362 ;;		_TMR5_SetInterruptHandler
  5363 ;; This function is called by:
  5364 ;;		_SYSTEM_Initialize
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text41
  5369  0045E8                     __ptext41:
  5370                           	callstack 0
  5371  0045E8                     _TMR5_Initialize:
  5372                           	callstack 24
  5373                           
  5374                           ; BSR set to: 57
  5375                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  5376                           
  5377                           ; BSR set to: 57
  5378                           ;incstack = 0
  5379  0045E8  0E00               	movlw	0
  5380  0045EA  6E9B               	movwf	155,c	;volatile
  5381                           
  5382                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  5383  0045EC  0E00               	movlw	0
  5384  0045EE  6E9C               	movwf	156,c	;volatile
  5385                           
  5386                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  5387  0045F0  0E01               	movlw	1
  5388  0045F2  6E9D               	movwf	157,c	;volatile
  5389                           
  5390                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  5391  0045F4  0E63               	movlw	99
  5392  0045F6  6E99               	movwf	153,c	;volatile
  5393                           
  5394                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  5395  0045F8  0EC0               	movlw	192
  5396  0045FA  6E98               	movwf	152,c	;volatile
  5397                           
  5398                           ; BSR set to: 57
  5399                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  5400  0045FC  5098               	movf	152,w,c	;volatile
  5401  0045FE  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  5402  004604  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  5403  004606  C009  F00A         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  5404  00460A  6A09               	clrf	??_TMR5_Initialize^0,c
  5405  00460C  1009               	iorwf	??_TMR5_Initialize^0,w,c
  5406  00460E  0101               	movlb	1	; () banked
  5407  004610  6F92               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  5408  004612  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  5409  004614  6F93               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  5410                           
  5411                           ; BSR set to: 1
  5412                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  5413  004616  0139               	movlb	57	; () banked
  5414  004618  9DA8               	bcf	168,6,b	;volatile
  5415                           
  5416                           ; BSR set to: 57
  5417                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  5418  00461A  8D98               	bsf	152,6,b	;volatile
  5419                           
  5420                           ; BSR set to: 57
  5421                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  5422  00461C  0EAC               	movlw	low _TMR5_DefaultInterruptHandler
  5423  00461E  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  5424  004620  0E4D               	movlw	high _TMR5_DefaultInterruptHandler
  5425  004622  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  5426  004624  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  5427  004626  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  5428  004628  EC78  F027         	call	_TMR5_SetInterruptHandler	;wreg free
  5429                           
  5430                           ; BSR set to: 57
  5431                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  5432  00462C  0E31               	movlw	49
  5433  00462E  6E9A               	movwf	154,c	;volatile
  5434                           
  5435                           ; BSR set to: 57
  5436  004630  0012               	return		;funcret
  5437  004632                     __end_of_TMR5_Initialize:
  5438                           	callstack 0
  5439                           
  5440 ;; *************** function _TMR5_SetInterruptHandler *****************
  5441 ;; Defined at:
  5442 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5445 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 3F/39
  5454 ;;		On exit  : 3F/39
  5455 ;;		Unchanged: 3E/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5457 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5460 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5461 ;;Total ram usage:        3 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    4
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_TMR5_Initialize
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text42
  5472  004EF0                     __ptext42:
  5473                           	callstack 0
  5474  004EF0                     _TMR5_SetInterruptHandler:
  5475                           	callstack 24
  5476                           
  5477                           ; BSR set to: 57
  5478                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  5479                           
  5480                           ; BSR set to: 57
  5481                           ;incstack = 0
  5482  004EF0  C006  F166         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  5483  004EF4  C007  F167         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  5484  004EF8  C008  F168         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  5485                           
  5486                           ; BSR set to: 57
  5487  004EFC  0012               	return		;funcret
  5488  004EFE                     __end_of_TMR5_SetInterruptHandler:
  5489                           	callstack 0
  5490                           
  5491 ;; *************** function _TMR2_Initialize *****************
  5492 ;; Defined at:
  5493 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2
  5502 ;; Tracked objects:
  5503 ;;		On entry : 3F/3E
  5504 ;;		On exit  : 3F/39
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    4
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_SYSTEM_Initialize
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text43
  5522  004CCE                     __ptext43:
  5523                           	callstack 0
  5524  004CCE                     _TMR2_Initialize:
  5525                           	callstack 25
  5526                           
  5527                           ; BSR set to: 62
  5528                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  5529                           
  5530                           ; BSR set to: 57
  5531                           ;incstack = 0
  5532  004CCE  0E01               	movlw	1
  5533  004CD0  6EAE               	movwf	174,c	;volatile
  5534                           
  5535                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5536  004CD2  0E00               	movlw	0
  5537  004CD4  6EAD               	movwf	173,c	;volatile
  5538                           
  5539                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5540  004CD6  0E00               	movlw	0
  5541  004CD8  6EAF               	movwf	175,c	;volatile
  5542                           
  5543                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  5544  004CDA  0E63               	movlw	99
  5545  004CDC  6EAB               	movwf	171,c	;volatile
  5546                           
  5547                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5548  004CDE  0E00               	movlw	0
  5549  004CE0  6EAA               	movwf	170,c	;volatile
  5550                           
  5551                           ; BSR set to: 62
  5552                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  5553  004CE2  0139               	movlb	57	; () banked
  5554  004CE4  95A4               	bcf	164,2,b	;volatile
  5555                           
  5556                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  5557  004CE6  0EC0               	movlw	192
  5558  004CE8  6EAC               	movwf	172,c	;volatile
  5559                           
  5560                           ; BSR set to: 57
  5561  004CEA  0012               	return		;funcret
  5562  004CEC                     __end_of_TMR2_Initialize:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function _SPI1_Initialize *****************
  5566 ;; Defined at:
  5567 ;;		line 64 in file "mcc_generated_files/spi1.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      void 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2
  5576 ;; Tracked objects:
  5577 ;;		On entry : 3F/39
  5578 ;;		On exit  : 3F/3D
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    4
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_SYSTEM_Initialize
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text44
  5596  004DC6                     __ptext44:
  5597                           	callstack 0
  5598  004DC6                     _SPI1_Initialize:
  5599                           	callstack 25
  5600                           
  5601                           ; BSR set to: 57
  5602                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x20;
  5603                           
  5604                           ; BSR set to: 57
  5605                           ;incstack = 0
  5606  004DC6  0E20               	movlw	32
  5607  004DC8  013D               	movlb	61	; () banked
  5608  004DCA  6F15               	movwf	21,b	;volatile
  5609                           
  5610                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  5611  004DCC  0E03               	movlw	3
  5612  004DCE  6F16               	movwf	22,b	;volatile
  5613                           
  5614                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x04;
  5615  004DD0  0E04               	movlw	4
  5616  004DD2  6F19               	movwf	25,b	;volatile
  5617                           
  5618                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  5619  004DD4  0E00               	movlw	0
  5620  004DD6  6F1C               	movwf	28,b	;volatile
  5621                           
  5622                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  5623  004DD8  0E82               	movlw	130
  5624  004DDA  6F14               	movwf	20,b	;volatile
  5625                           
  5626                           ; BSR set to: 61
  5627  004DDC  0012               	return		;funcret
  5628  004DDE                     __end_of_SPI1_Initialize:
  5629                           	callstack 0
  5630                           
  5631 ;; *************** function _PWM8_Initialize *****************
  5632 ;; Defined at:
  5633 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2
  5642 ;; Tracked objects:
  5643 ;;		On entry : 3F/39
  5644 ;;		On exit  : 3F/3F
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5651 ;;Total ram usage:        0 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    4
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_SYSTEM_Initialize
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text45
  5662  004DDE                     __ptext45:
  5663                           	callstack 0
  5664  004DDE                     _PWM8_Initialize:
  5665                           	callstack 25
  5666                           
  5667                           ; BSR set to: 57
  5668                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  5669                           
  5670                           ; BSR set to: 61
  5671                           ;incstack = 0
  5672  004DDE  0E80               	movlw	128
  5673  004DE0  6E62               	movwf	98,c	;volatile
  5674                           
  5675                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  5676  004DE2  0E31               	movlw	49
  5677  004DE4  6E61               	movwf	97,c	;volatile
  5678                           
  5679                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  5680  004DE6  0EC0               	movlw	192
  5681  004DE8  6E60               	movwf	96,c	;volatile
  5682                           
  5683                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  5684  004DEA  013F               	movlb	63	; () banked
  5685  004DEC  515F               	movf	95,w,b	;volatile
  5686  004DEE  0B3F               	andlw	-193
  5687  004DF0  0940               	iorlw	64
  5688  004DF2  6F5F               	movwf	95,b	;volatile
  5689                           
  5690                           ; BSR set to: 63
  5691  004DF4  0012               	return		;funcret
  5692  004DF6                     __end_of_PWM8_Initialize:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _PMD_Initialize *****************
  5696 ;; Defined at:
  5697 ;;		line 85 in file "mcc_generated_files/mcc.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;		None
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2
  5706 ;; Tracked objects:
  5707 ;;		On entry : 3F/39
  5708 ;;		On exit  : 3F/39
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:    4
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_SYSTEM_Initialize
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text46
  5726  004C6C                     __ptext46:
  5727                           	callstack 0
  5728  004C6C                     _PMD_Initialize:
  5729                           	callstack 25
  5730                           
  5731                           ; BSR set to: 57
  5732                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
  5733                           
  5734                           ; BSR set to: 63
  5735                           ;incstack = 0
  5736  004C6C  0E00               	movlw	0
  5737  004C6E  6FC0               	movwf	192,b	;volatile
  5738                           
  5739                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
  5740  004C70  0E00               	movlw	0
  5741  004C72  6FC1               	movwf	193,b	;volatile
  5742                           
  5743                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
  5744  004C74  0E00               	movlw	0
  5745  004C76  6FC2               	movwf	194,b	;volatile
  5746                           
  5747                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
  5748  004C78  0E00               	movlw	0
  5749  004C7A  6FC3               	movwf	195,b	;volatile
  5750                           
  5751                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
  5752  004C7C  0E00               	movlw	0
  5753  004C7E  6FC4               	movwf	196,b	;volatile
  5754                           
  5755                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
  5756  004C80  0E00               	movlw	0
  5757  004C82  6FC5               	movwf	197,b	;volatile
  5758                           
  5759                           ;mcc_generated_files/mcc.c: 100:     PMD6 = 0x00;
  5760  004C84  0E00               	movlw	0
  5761  004C86  6FC6               	movwf	198,b	;volatile
  5762                           
  5763                           ;mcc_generated_files/mcc.c: 102:     PMD7 = 0x00;
  5764  004C88  0E00               	movlw	0
  5765  004C8A  6FC7               	movwf	199,b	;volatile
  5766                           
  5767                           ; BSR set to: 57
  5768  004C8C  0012               	return		;funcret
  5769  004C8E                     __end_of_PMD_Initialize:
  5770                           	callstack 0
  5771                           
  5772 ;; *************** function _PIN_MANAGER_Initialize *****************
  5773 ;; Defined at:
  5774 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2
  5783 ;; Tracked objects:
  5784 ;;		On entry : 3F/39
  5785 ;;		On exit  : 3F/3A
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    4
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_SYSTEM_Initialize
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text47
  5803  003EF8                     __ptext47:
  5804                           	callstack 0
  5805  003EF8                     _PIN_MANAGER_Initialize:
  5806                           	callstack 25
  5807                           
  5808                           ; BSR set to: 57
  5809                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  5810                           
  5811                           ; BSR set to: 57
  5812                           ;incstack = 0
  5813  003EF8  0E01               	movlw	1
  5814  003EFA  6EBE               	movwf	190,c	;volatile
  5815                           
  5816                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  5817  003EFC  0E02               	movlw	2
  5818  003EFE  6EBD               	movwf	189,c	;volatile
  5819                           
  5820                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5821  003F00  0E00               	movlw	0
  5822  003F02  6EBA               	movwf	186,c	;volatile
  5823                           
  5824                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5825  003F04  0E00               	movlw	0
  5826  003F06  6EBB               	movwf	187,c	;volatile
  5827                           
  5828                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  5829  003F08  0E06               	movlw	6
  5830  003F0A  6EBC               	movwf	188,c	;volatile
  5831                           
  5832                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  5833  003F0C  0E06               	movlw	6
  5834  003F0E  6EC6               	movwf	198,c	;volatile
  5835                           
  5836                           ; BSR set to: 57
  5837                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5838  003F10  68C2               	setf	194,c	;volatile
  5839                           
  5840                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5841  003F12  0EBF               	movlw	191
  5842  003F14  6EC3               	movwf	195,c	;volatile
  5843                           
  5844                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  5845  003F16  0E91               	movlw	145
  5846  003F18  6EC4               	movwf	196,c	;volatile
  5847                           
  5848                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  5849  003F1A  0EFD               	movlw	253
  5850  003F1C  6EC5               	movwf	197,c	;volatile
  5851                           
  5852                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  5853  003F1E  0EFD               	movlw	253
  5854  003F20  013A               	movlb	58	; () banked
  5855  003F22  6F70               	movwf	112,b	;volatile
  5856                           
  5857                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  5858  003F24  0E00               	movlw	0
  5859  003F26  6F60               	movwf	96,b	;volatile
  5860                           
  5861                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  5862  003F28  0E3F               	movlw	63
  5863  003F2A  6F50               	movwf	80,b	;volatile
  5864                           
  5865                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  5866  003F2C  0E06               	movlw	6
  5867  003F2E  6F80               	movwf	128,b	;volatile
  5868                           
  5869                           ; BSR set to: 58
  5870                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5871  003F30  6940               	setf	64,b	;volatile
  5872                           
  5873                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5874  003F32  0E00               	movlw	0
  5875  003F34  6F71               	movwf	113,b	;volatile
  5876                           
  5877                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5878  003F36  0E00               	movlw	0
  5879  003F38  6F81               	movwf	129,b	;volatile
  5880                           
  5881                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5882  003F3A  0E00               	movlw	0
  5883  003F3C  6F51               	movwf	81,b	;volatile
  5884                           
  5885                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5886  003F3E  0E00               	movlw	0
  5887  003F40  6F41               	movwf	65,b	;volatile
  5888                           
  5889                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5890  003F42  0E00               	movlw	0
  5891  003F44  6F61               	movwf	97,b	;volatile
  5892                           
  5893                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  5894  003F46  0E00               	movlw	0
  5895  003F48  6F5A               	movwf	90,b	;volatile
  5896                           
  5897                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  5898  003F4A  0E00               	movlw	0
  5899  003F4C  6F5B               	movwf	91,b	;volatile
  5900                           
  5901                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  5902  003F4E  0E00               	movlw	0
  5903  003F50  6F6A               	movwf	106,b	;volatile
  5904                           
  5905                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  5906  003F52  0E00               	movlw	0
  5907  003F54  6F6B               	movwf	107,b	;volatile
  5908                           
  5909                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  5910  003F56  0E00               	movlw	0
  5911  003F58  6F7A               	movwf	122,b	;volatile
  5912                           
  5913                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  5914  003F5A  0E00               	movlw	0
  5915  003F5C  6F7B               	movwf	123,b	;volatile
  5916                           
  5917                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  5918  003F5E  0E00               	movlw	0
  5919  003F60  6F82               	movwf	130,b	;volatile
  5920                           
  5921                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  5922  003F62  0E00               	movlw	0
  5923  003F64  6F42               	movwf	66,b	;volatile
  5924                           
  5925                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  5926  003F66  0E00               	movlw	0
  5927  003F68  6F52               	movwf	82,b	;volatile
  5928                           
  5929                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  5930  003F6A  0E00               	movlw	0
  5931  003F6C  6F62               	movwf	98,b	;volatile
  5932                           
  5933                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  5934  003F6E  0E00               	movlw	0
  5935  003F70  6F72               	movwf	114,b	;volatile
  5936                           
  5937                           ; BSR set to: 58
  5938                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  5939  003F72  6943               	setf	67,b	;volatile
  5940                           
  5941                           ; BSR set to: 58
  5942                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  5943  003F74  6953               	setf	83,b	;volatile
  5944                           
  5945                           ; BSR set to: 58
  5946                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  5947  003F76  6963               	setf	99,b	;volatile
  5948                           
  5949                           ; BSR set to: 58
  5950                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  5951  003F78  6973               	setf	115,b	;volatile
  5952                           
  5953                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  5954  003F7A  0E07               	movlw	7
  5955  003F7C  6F83               	movwf	131,b	;volatile
  5956                           
  5957                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  5958  003F7E  0E0F               	movlw	15
  5959  003F80  6FE8               	movwf	232,b	;volatile
  5960                           
  5961                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  5962  003F82  0E13               	movlw	19
  5963  003F84  6FDE               	movwf	222,b	;volatile
  5964                           
  5965                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  5966  003F86  0E16               	movlw	22
  5967  003F88  6F0E               	movwf	14,b	;volatile
  5968                           
  5969                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  5970  003F8A  0E1E               	movlw	30
  5971  003F8C  6F13               	movwf	19,b	;volatile
  5972                           
  5973                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  5974  003F8E  0E10               	movlw	16
  5975  003F90  6F19               	movwf	25,b	;volatile
  5976                           
  5977                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  5978  003F92  0E1F               	movlw	31
  5979  003F94  6F15               	movwf	21,b	;volatile
  5980                           
  5981                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  5982  003F96  0E13               	movlw	19
  5983  003F98  6F16               	movwf	22,b	;volatile
  5984                           
  5985                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  5986  003F9A  0E17               	movlw	23
  5987  003F9C  6FE5               	movwf	229,b	;volatile
  5988                           
  5989                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  5990  003F9E  0E14               	movlw	20
  5991  003FA0  6FDF               	movwf	223,b	;volatile
  5992                           
  5993                           ; BSR set to: 58
  5994  003FA2  0012               	return		;funcret
  5995  003FA4                     __end_of_PIN_MANAGER_Initialize:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function _OSCILLATOR_Initialize *****************
  5999 ;; Defined at:
  6000 ;;		line 67 in file "mcc_generated_files/mcc.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2
  6009 ;; Tracked objects:
  6010 ;;		On entry : 3F/3A
  6011 ;;		On exit  : 3F/39
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    4
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_SYSTEM_Initialize
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text48
  6029  004D5C                     __ptext48:
  6030                           	callstack 0
  6031  004D5C                     _OSCILLATOR_Initialize:
  6032                           	callstack 25
  6033                           
  6034                           ; BSR set to: 58
  6035                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x20;
  6036                           
  6037                           ; BSR set to: 58
  6038                           ;incstack = 0
  6039  004D5C  0E20               	movlw	32
  6040  004D5E  0139               	movlb	57	; () banked
  6041  004D60  6FD9               	movwf	217,b	;volatile
  6042                           
  6043                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
  6044  004D62  0E00               	movlw	0
  6045  004D64  6FDB               	movwf	219,b	;volatile
  6046                           
  6047                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
  6048  004D66  0E00               	movlw	0
  6049  004D68  6FDD               	movwf	221,b	;volatile
  6050                           
  6051                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
  6052  004D6A  0E08               	movlw	8
  6053  004D6C  6FDF               	movwf	223,b	;volatile
  6054                           
  6055                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
  6056  004D6E  0E00               	movlw	0
  6057  004D70  6FDE               	movwf	222,b	;volatile
  6058  004D72                     l68:
  6059                           
  6060                           ; BSR set to: 57
  6061                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
  6062  004D72  B1DC               	btfsc	220,0,b	;volatile
  6063  004D74  0012               	return	
  6064  004D76  D7FD               	goto	l68
  6065  004D78                     __end_of_OSCILLATOR_Initialize:
  6066                           	callstack 0
  6067                           
  6068 ;; *************** function _INTERRUPT_Initialize *****************
  6069 ;; Defined at:
  6070 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  state           1    5[COMRAM] _Bool 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2
  6079 ;; Tracked objects:
  6080 ;;		On entry : 3F/0
  6081 ;;		On exit  : 3F/39
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6088 ;;Total ram usage:        1 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    4
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_SYSTEM_Initialize
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text49
  6099  004632                     __ptext49:
  6100                           	callstack 0
  6101  004632                     _INTERRUPT_Initialize:
  6102                           	callstack 25
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  6106                           
  6107                           ; BSR set to: 57
  6108                           ;incstack = 0
  6109  004632  8AD2               	bsf	210,5,c	;volatile
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  6113  004634  0E00               	movlw	0
  6114  004636  BED2               	btfsc	16338,7,c	;volatile
  6115  004638  0E01               	movlw	1
  6116  00463A  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  6120  00463C  9ED2               	bcf	16338,7,c	;volatile
  6121                           
  6122                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  6123  00463E  0E55               	movlw	85
  6124  004640  6ED4               	movwf	212,c	;volatile
  6125                           
  6126                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  6127  004642  0EAA               	movlw	170
  6128  004644  6ED4               	movwf	212,c	;volatile
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  6132  004646  90D4               	bcf	212,0,c	;volatile
  6133                           
  6134                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  6135  004648  0E00               	movlw	0
  6136  00464A  0138               	movlb	56	; () banked
  6137  00464C  6F9F               	movwf	159,b	;volatile
  6138                           
  6139                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  6140  00464E  0E00               	movlw	0
  6141  004650  6F9E               	movwf	158,b	;volatile
  6142                           
  6143                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  6144  004652  0E08               	movlw	8
  6145  004654  6F9D               	movwf	157,b	;volatile
  6146                           
  6147                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  6148  004656  0E55               	movlw	85
  6149  004658  6ED4               	movwf	212,c	;volatile
  6150                           
  6151                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  6152  00465A  0EAA               	movlw	170
  6153  00465C  6ED4               	movwf	212,c	;volatile
  6154                           
  6155                           ; BSR set to: 56
  6156                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  6157  00465E  80D4               	bsf	212,0,c	;volatile
  6158                           
  6159                           ; BSR set to: 56
  6160                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  6161  004660  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  6162  004662  D002               	bra	u7205
  6163  004664  9ED2               	bcf	16338,7,c	;volatile
  6164  004666  D001               	bra	u7206
  6165  004668                     u7205:
  6166  004668  8ED2               	bsf	16338,7,c	;volatile
  6167  00466A                     u7206:
  6168                           
  6169                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  6170  00466A  0139               	movlb	57	; () banked
  6171  00466C  8786               	bsf	134,3,b	;volatile
  6172                           
  6173                           ; BSR set to: 57
  6174                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  6175  00466E  8586               	bsf	134,2,b	;volatile
  6176                           
  6177                           ; BSR set to: 57
  6178                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  6179  004670  8983               	bsf	131,4,b	;volatile
  6180                           
  6181                           ; BSR set to: 57
  6182                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  6183  004672  8783               	bsf	131,3,b	;volatile
  6184                           
  6185                           ; BSR set to: 57
  6186                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  6187  004674  8189               	bsf	137,0,b	;volatile
  6188                           
  6189                           ; BSR set to: 57
  6190                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  6191  004676  8D88               	bsf	136,6,b	;volatile
  6192                           
  6193                           ; BSR set to: 57
  6194  004678  0012               	return		;funcret
  6195  00467A                     __end_of_INTERRUPT_Initialize:
  6196                           	callstack 0
  6197                           
  6198 ;; *************** function _FVR_Initialize *****************
  6199 ;; Defined at:
  6200 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2
  6209 ;; Tracked objects:
  6210 ;;		On entry : 3F/39
  6211 ;;		On exit  : 3F/3E
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6218 ;;Total ram usage:        0 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    4
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_SYSTEM_Initialize
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text50
  6229  004F16                     __ptext50:
  6230                           	callstack 0
  6231  004F16                     _FVR_Initialize:
  6232                           	callstack 25
  6233                           
  6234                           ; BSR set to: 57
  6235                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
  6236                           
  6237                           ; BSR set to: 57
  6238                           ;incstack = 0
  6239  004F16  0EAF               	movlw	175
  6240  004F18  013E               	movlb	62	; () banked
  6241  004F1A  6FC1               	movwf	193,b	;volatile
  6242                           
  6243                           ; BSR set to: 62
  6244  004F1C  0012               	return		;funcret
  6245  004F1E                     __end_of_FVR_Initialize:
  6246                           	callstack 0
  6247                           
  6248 ;; *************** function _ADCC_Initialize *****************
  6249 ;; Defined at:
  6250 ;;		line 62 in file "mcc_generated_files/adcc.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;		None
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2
  6259 ;; Tracked objects:
  6260 ;;		On entry : 3F/39
  6261 ;;		On exit  : 3F/3E
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6268 ;;Total ram usage:        0 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    4
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_SYSTEM_Initialize
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text51
  6279  0044F0                     __ptext51:
  6280                           	callstack 0
  6281  0044F0                     _ADCC_Initialize:
  6282                           	callstack 25
  6283                           
  6284                           ; BSR set to: 57
  6285                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  6286                           
  6287                           ; BSR set to: 62
  6288                           ;incstack = 0
  6289  0044F0  0E00               	movlw	0
  6290  0044F2  013E               	movlb	62	; () banked
  6291  0044F4  6FDE               	movwf	222,b	;volatile
  6292                           
  6293                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  6294  0044F6  0E00               	movlw	0
  6295  0044F8  6FDF               	movwf	223,b	;volatile
  6296                           
  6297                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  6298  0044FA  0E00               	movlw	0
  6299  0044FC  6FE0               	movwf	224,b	;volatile
  6300                           
  6301                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  6302  0044FE  0E00               	movlw	0
  6303  004500  6FE1               	movwf	225,b	;volatile
  6304                           
  6305                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  6306  004502  0E00               	movlw	0
  6307  004504  6FE4               	movwf	228,b	;volatile
  6308                           
  6309                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  6310  004506  0E00               	movlw	0
  6311  004508  6FE5               	movwf	229,b	;volatile
  6312                           
  6313                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  6314  00450A  0E00               	movlw	0
  6315  00450C  6FEA               	movwf	234,b	;volatile
  6316                           
  6317                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  6318  00450E  0E00               	movlw	0
  6319  004510  6FEC               	movwf	236,b	;volatile
  6320                           
  6321                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  6322  004512  0E00               	movlw	0
  6323  004514  6FF1               	movwf	241,b	;volatile
  6324                           
  6325                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  6326  004516  0E00               	movlw	0
  6327  004518  6FF3               	movwf	243,b	;volatile
  6328                           
  6329                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  6330  00451A  0E00               	movlw	0
  6331  00451C  6FF4               	movwf	244,b	;volatile
  6332                           
  6333                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  6334  00451E  0E00               	movlw	0
  6335  004520  6FF5               	movwf	245,b	;volatile
  6336                           
  6337                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  6338  004522  0E00               	movlw	0
  6339  004524  6FF6               	movwf	246,b	;volatile
  6340                           
  6341                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  6342  004526  0E00               	movlw	0
  6343  004528  6FF7               	movwf	247,b	;volatile
  6344                           
  6345                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  6346  00452A  0E00               	movlw	0
  6347  00452C  6FF9               	movwf	249,b	;volatile
  6348                           
  6349                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0xF4;
  6350  00452E  0EF4               	movlw	244
  6351  004530  6FFA               	movwf	250,b	;volatile
  6352                           
  6353                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  6354  004532  0E20               	movlw	32
  6355  004534  6FFB               	movwf	251,b	;volatile
  6356                           
  6357                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  6358  004536  0E00               	movlw	0
  6359  004538  6FFC               	movwf	252,b	;volatile
  6360                           
  6361                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  6362  00453A  0E00               	movlw	0
  6363  00453C  6FFD               	movwf	253,b	;volatile
  6364                           
  6365                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  6366  00453E  0E00               	movlw	0
  6367  004540  6FFE               	movwf	254,b	;volatile
  6368                           
  6369                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  6370  004542  0E3F               	movlw	63
  6371  004544  6FFF               	movwf	255,b	;volatile
  6372                           
  6373                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  6374  004546  0E84               	movlw	132
  6375  004548  6FF8               	movwf	248,b	;volatile
  6376                           
  6377                           ; BSR set to: 62
  6378  00454A  0012               	return		;funcret
  6379  00454C                     __end_of_ADCC_Initialize:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function _Digital232_init *****************
  6383 ;; Defined at:
  6384 ;;		line 10 in file "d232.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:   13
  6405 ;; This function calls:
  6406 ;;		_ADCC_StartConversion
  6407 ;;		_StartTimer
  6408 ;;		_UART2_Read
  6409 ;;		_UART2_is_rx_ready
  6410 ;;		_WaitMs
  6411 ;;		_printf
  6412 ;; This function is called by:
  6413 ;;		_main
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text52
  6418  003A66                     __ptext52:
  6419                           	callstack 0
  6420  003A66                     _Digital232_init:
  6421                           	callstack 17
  6422                           
  6423                           ;d232.c: 12:  printf("%s", "XQ\r");
  6424                           
  6425                           ; BSR set to: 62
  6426                           ;incstack = 0
  6427  003A66  0E4C               	movlw	low STR_5
  6428  003A68  0100               	movlb	0	; () banked
  6429  003A6A  6F64               	movwf	printf@fmt& (0+255),b
  6430  003A6C  0E48               	movlw	low STR_6
  6431  003A6E  6F65               	movwf	(?_printf+1)& (0+255),b
  6432  003A70  5165               	movf	(?_printf+1)& (0+255),w,b
  6433  003A72  A4D8               	btfss	status,2,c
  6434  003A74  0E20               	movlw	high __smallconst
  6435  003A76  6F66               	movwf	(?_printf+2)& (0+255),b
  6436  003A78  ECC9  F026         	call	_printf	;wreg free
  6437                           
  6438                           ; BSR set to: 1
  6439                           ;d232.c: 13:  WaitMs(5);
  6440  003A7C  0E00               	movlw	0
  6441  003A7E  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6442  003A80  0E05               	movlw	5
  6443  003A82  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6444  003A84  EC7D  F025         	call	_WaitMs	;wreg free
  6445                           
  6446                           ;d232.c: 14:  printf("%s", "T2\r");
  6447  003A88  0E4C               	movlw	low STR_5
  6448  003A8A  0100               	movlb	0	; () banked
  6449  003A8C  6F64               	movwf	printf@fmt& (0+255),b
  6450  003A8E  0E38               	movlw	low STR_8
  6451  003A90  6F65               	movwf	(?_printf+1)& (0+255),b
  6452  003A92  5165               	movf	(?_printf+1)& (0+255),w,b
  6453  003A94  A4D8               	btfss	status,2,c
  6454  003A96  0E20               	movlw	high __smallconst
  6455  003A98  6F66               	movwf	(?_printf+2)& (0+255),b
  6456  003A9A  ECC9  F026         	call	_printf	;wreg free
  6457                           
  6458                           ;d232.c: 15:  WaitMs(800);
  6459  003A9E  0E03               	movlw	3
  6460  003AA0  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6461  003AA2  0E20               	movlw	32
  6462  003AA4  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6463  003AA6  EC7D  F025         	call	_WaitMs	;wreg free
  6464                           
  6465                           ;d232.c: 16:  printf("%s", "C4\r");
  6466  003AAA  0E4C               	movlw	low STR_5
  6467  003AAC  0100               	movlb	0	; () banked
  6468  003AAE  6F64               	movwf	printf@fmt& (0+255),b
  6469  003AB0  0E3C               	movlw	low STR_10
  6470  003AB2  6F65               	movwf	(?_printf+1)& (0+255),b
  6471  003AB4  5165               	movf	(?_printf+1)& (0+255),w,b
  6472  003AB6  A4D8               	btfss	status,2,c
  6473  003AB8  0E20               	movlw	high __smallconst
  6474  003ABA  6F66               	movwf	(?_printf+2)& (0+255),b
  6475  003ABC  ECC9  F026         	call	_printf	;wreg free
  6476                           
  6477                           ; BSR set to: 1
  6478                           ;d232.c: 17:  WaitMs(5);
  6479  003AC0  0E00               	movlw	0
  6480  003AC2  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6481  003AC4  0E05               	movlw	5
  6482  003AC6  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6483  003AC8  EC7D  F025         	call	_WaitMs	;wreg free
  6484                           
  6485                           ;d232.c: 18:  printf("%s", "F4\r");
  6486  003ACC  0E4C               	movlw	low STR_5
  6487  003ACE  0100               	movlb	0	; () banked
  6488  003AD0  6F64               	movwf	printf@fmt& (0+255),b
  6489  003AD2  0E40               	movlw	low STR_12
  6490  003AD4  6F65               	movwf	(?_printf+1)& (0+255),b
  6491  003AD6  5165               	movf	(?_printf+1)& (0+255),w,b
  6492  003AD8  A4D8               	btfss	status,2,c
  6493  003ADA  0E20               	movlw	high __smallconst
  6494  003ADC  6F66               	movwf	(?_printf+2)& (0+255),b
  6495  003ADE  ECC9  F026         	call	_printf	;wreg free
  6496                           
  6497                           ; BSR set to: 1
  6498                           ;d232.c: 19:  WaitMs(5);
  6499  003AE2  0E00               	movlw	0
  6500  003AE4  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6501  003AE6  0E05               	movlw	5
  6502  003AE8  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6503  003AEA  EC7D  F025         	call	_WaitMs	;wreg free
  6504                           
  6505                           ;d232.c: 20:  printf("%s", "M4\r");
  6506  003AEE  0E4C               	movlw	low STR_5
  6507  003AF0  0100               	movlb	0	; () banked
  6508  003AF2  6F64               	movwf	printf@fmt& (0+255),b
  6509  003AF4  0E44               	movlw	low STR_14
  6510  003AF6  6F65               	movwf	(?_printf+1)& (0+255),b
  6511  003AF8  5165               	movf	(?_printf+1)& (0+255),w,b
  6512  003AFA  A4D8               	btfss	status,2,c
  6513  003AFC  0E20               	movlw	high __smallconst
  6514  003AFE  6F66               	movwf	(?_printf+2)& (0+255),b
  6515  003B00  ECC9  F026         	call	_printf	;wreg free
  6516                           
  6517                           ;d232.c: 21:  WaitMs(5);
  6518  003B04  0E00               	movlw	0
  6519  003B06  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6520  003B08  0E05               	movlw	5
  6521  003B0A  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6522  003B0C  EC7D  F025         	call	_WaitMs	;wreg free
  6523                           
  6524                           ;d232.c: 22:  IO.d232 = D232_INIT;
  6525  003B10  0E01               	movlw	1
  6526  003B12  0101               	movlb	1	; () banked
  6527  003B14  6FB6               	movwf	(_IO+13)& (0+255),b
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;d232.c: 26:  if (UART2_is_rx_ready())
  6531  003B16  EC92  F027         	call	_UART2_is_rx_ready	;wreg free
  6532  003B1A  0900               	iorlw	0
  6533  003B1C  A4D8               	btfss	status,2,c
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;d232.c: 27:   UART2_Read();
  6537  003B1E  EC60  F023         	call	_UART2_Read	;wreg free
  6538                           
  6539                           ;d232.c: 28:  IO.io = IO_INIT;
  6540  003B22  0E01               	movlw	1
  6541  003B24  0101               	movlb	1	; () banked
  6542  003B26  6FB5               	movwf	(_IO+12)& (0+255),b
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;d232.c: 29:  IO.srq = S_IDLE;
  6546  003B28  0E00               	movlw	0
  6547  003B2A  6FB7               	movwf	(_IO+14)& (0+255),b
  6548                           
  6549                           ; BSR set to: 1
  6550                           ;d232.c: 30:  IO.srq_value = 0;
  6551  003B2C  0E00               	movlw	0
  6552  003B2E  6FB9               	movwf	(_IO+16)& (0+255),b
  6553                           
  6554                           ; BSR set to: 1
  6555                           ;d232.c: 31:  IO.button_value = 0;
  6556  003B30  0E00               	movlw	0
  6557  003B32  6FC1               	movwf	(_IO+24)& (0+255),b
  6558  003B34  0E00               	movlw	0
  6559  003B36  6FC0               	movwf	(_IO+23)& (0+255),b
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;d232.c: 32:  ADCC_StartConversion(channel_VSS);
  6563  003B38  0E3B               	movlw	59
  6564  003B3A  EC23  F027         	call	_ADCC_StartConversion
  6565                           
  6566                           ; BSR set to: 62
  6567                           ;d232.c: 33:  StartTimer(TMR_SPS, 10);
  6568  003B3E  0E00               	movlw	0
  6569  003B40  6E07               	movwf	(StartTimer@count+1)^0,c
  6570  003B42  0E0A               	movlw	10
  6571  003B44  6E06               	movwf	StartTimer@count^0,c
  6572  003B46  0E03               	movlw	3
  6573  003B48  EC3C  F025         	call	_StartTimer
  6574  003B4C  0012               	return		;funcret
  6575  003B4E                     __end_of_Digital232_init:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function _WaitMs *****************
  6579 ;; Defined at:
  6580 ;;		line 31 in file "timers.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 3F/1
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6598 ;;Total ram usage:        2 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    5
  6601 ;; This function calls:
  6602 ;;		_StartTimer
  6603 ;;		_TimerDone
  6604 ;; This function is called by:
  6605 ;;		_Digital232_init
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text53
  6610  004AFA                     __ptext53:
  6611                           	callstack 0
  6612  004AFA                     _WaitMs:
  6613                           	callstack 24
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6617                           
  6618                           ;incstack = 0
  6619  004AFA  C00B  F006         	movff	WaitMs@numMilliseconds,StartTimer@count
  6620  004AFE  C00C  F007         	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  6621  004B02  0E00               	movlw	0
  6622  004B04  EC3C  F025         	call	_StartTimer
  6623                           
  6624                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6625  004B08  D005               	goto	l7708
  6626  004B0A                     l1257:
  6627                           
  6628                           ;timers.c: 35:   __nop();
  6629  004B0A  F000               	nop	
  6630                           
  6631                           ;timers.c: 36:   __nop();
  6632  004B0C  F000               	nop	
  6633                           
  6634                           ;timers.c: 37:   __nop();
  6635  004B0E  F000               	nop	
  6636                           
  6637                           ;timers.c: 38:   __nop();
  6638  004B10  F000               	nop	
  6639  004B12  0004               	clrwdt		;# 
  6640  004B14                     l7708:
  6641                           
  6642                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6643  004B14  0E00               	movlw	0
  6644  004B16  ECA6  F025         	call	_TimerDone
  6645  004B1A  0900               	iorlw	0
  6646  004B1C  A4D8               	btfss	status,2,c
  6647  004B1E  0012               	return	
  6648  004B20  D7F4               	goto	l1257
  6649  004B22                     __end_of_WaitMs:
  6650                           	callstack 0
  6651                           
  6652 ;; *************** function _Digital232_RW *****************
  6653 ;; Defined at:
  6654 ;;		line 66 in file "d232.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  j               1   33[BANK0 ] unsigned char 
  6659 ;;  i               1   32[BANK0 ] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      _Bool 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 3F/1
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6671 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6673 ;;Total ram usage:        4 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:   13
  6676 ;; This function calls:
  6677 ;;		_ADCC_GetConversionResult
  6678 ;;		_ADCC_IsConversionDone
  6679 ;;		_ADCC_StartConversion
  6680 ;;		_PWM8_LoadDutyValue
  6681 ;;		_StartTimer
  6682 ;;		_TimerDone
  6683 ;;		_UART2_Read
  6684 ;;		_UART2_Write
  6685 ;;		_UART2_is_rx_ready
  6686 ;;		_calc_pot
  6687 ;;		_printf
  6688 ;; This function is called by:
  6689 ;;		_main
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text54
  6694  003072                     __ptext54:
  6695                           	callstack 0
  6696  003072                     _Digital232_RW:
  6697                           	callstack 17
  6698                           
  6699                           ;incstack = 0
  6700  003072  0E00               	movlw	0
  6701  003074  0100               	movlb	0	; () banked
  6702  003076  6F81               	movwf	Digital232_RW@j& (0+255),b
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;d232.c: 69:  static uint8_t x = 0;;d232.c: 72:  if (!TimerDone(TMR_SPS)) {
  6706  003078  0E03               	movlw	3
  6707  00307A  ECA6  F025         	call	_TimerDone
  6708  00307E  0900               	iorlw	0
  6709  003080  A4D8               	btfss	status,2,c
  6710  003082  D005               	goto	l7858
  6711                           
  6712                           ;d232.c: 73:   IO.io = IO_IDLE;
  6713  003084  0E00               	movlw	0
  6714  003086  0101               	movlb	1	; () banked
  6715  003088  6FB5               	movwf	(_IO+12)& (0+255),b
  6716                           
  6717                           ; BSR set to: 1
  6718                           ;d232.c: 74:   return 0;
  6719  00308A  0E00               	movlw	0
  6720  00308C  0012               	return	
  6721  00308E                     l7858:
  6722                           
  6723                           ;d232.c: 77:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  6724  00308E  0101               	movlb	1	; () banked
  6725  003090  51C6               	movf	(_IO+29)& (0+255),w,b
  6726  003092  25C4               	addwf	(_IO+27)& (0+255),w,b
  6727  003094  0100               	movlb	0	; () banked
  6728  003096  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6729  003098  0101               	movlb	1	; () banked
  6730  00309A  51C7               	movf	(_IO+30)& (0+255),w,b
  6731  00309C  21C5               	addwfc	(_IO+28)& (0+255),w,b
  6732  00309E  0100               	movlb	0	; () banked
  6733  0030A0  6F7F               	movwf	(??_Digital232_RW+1)& (0+255),b
  6734  0030A2  0E0A               	movlw	10
  6735  0030A4  257E               	addwf	??_Digital232_RW& (0+255),w,b
  6736  0030A6  6E06               	movwf	StartTimer@count^0,c
  6737  0030A8  0E00               	movlw	0
  6738  0030AA  217F               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  6739  0030AC  6E07               	movwf	(StartTimer@count+1)^0,c
  6740  0030AE  0E03               	movlw	3
  6741  0030B0  EC3C  F025         	call	_StartTimer
  6742                           
  6743                           ;d232.c: 79:  ADCC_StartConversion(channel_ANA0);
  6744  0030B4  0E00               	movlw	0
  6745  0030B6  EC23  F027         	call	_ADCC_StartConversion
  6746  0030BA                     l7862:
  6747                           
  6748                           ; BSR set to: 62
  6749  0030BA  EC7F  F027         	call	_ADCC_IsConversionDone	;wreg free
  6750  0030BE  0900               	iorlw	0
  6751  0030C0  B4D8               	btfsc	status,2,c
  6752  0030C2  D7FB               	goto	l7862
  6753                           
  6754                           ; BSR set to: 62
  6755                           ;d232.c: 81:  IO.button_value = ADCC_GetConversionResult();
  6756  0030C4  EC11  F027         	call	_ADCC_GetConversionResult	;wreg free
  6757  0030C8  C006  F1C0         	movff	?_ADCC_GetConversionResult,_IO+23
  6758  0030CC  C007  F1C1         	movff	?_ADCC_GetConversionResult+1,_IO+24
  6759                           
  6760                           ; BSR set to: 62
  6761                           ;d232.c: 82:  calc_pot(IO.button_value);
  6762  0030D0  C1C0  F07A         	movff	_IO+23,calc_pot@value
  6763  0030D4  C1C1  F07B         	movff	_IO+24,calc_pot@value+1
  6764  0030D8  ECB3  F01C         	call	_calc_pot	;wreg free
  6765                           
  6766                           ; BSR set to: 1
  6767                           ;d232.c: 87:  IO.srq = S_IDLE;
  6768  0030DC  0E00               	movlw	0
  6769  0030DE  6FB7               	movwf	(_IO+14)& (0+255),b
  6770                           
  6771                           ; BSR set to: 1
  6772                           ;d232.c: 89:  if (UART2_is_rx_ready()) {
  6773  0030E0  EC92  F027         	call	_UART2_is_rx_ready	;wreg free
  6774  0030E4  0900               	iorlw	0
  6775  0030E6  B4D8               	btfsc	status,2,c
  6776  0030E8  D03F               	goto	l7896
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;d232.c: 90:   j = UART2_Read();
  6780  0030EA  EC60  F023         	call	_UART2_Read	;wreg free
  6781  0030EE  0100               	movlb	0	; () banked
  6782  0030F0  6F81               	movwf	Digital232_RW@j& (0+255),b
  6783                           
  6784                           ;d232.c: 94:   switch (IO.srq) {
  6785  0030F2  D020               	goto	l7894
  6786  0030F4                     l7874:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;d232.c: 96:    if (j == 'S')
  6790  0030F4  0E53               	movlw	83
  6791  0030F6  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6792  0030F8  A4D8               	btfss	status,2,c
  6793  0030FA  D036               	goto	l7896
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;d232.c: 97:     IO.srq = S_S;
  6797  0030FC  0E01               	movlw	1
  6798  0030FE  D017               	goto	L7
  6799  003100                     l7878:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;d232.c: 100:    if (j == 'R')
  6803  003100  0E52               	movlw	82
  6804  003102  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6805  003104  A4D8               	btfss	status,2,c
  6806  003106  D030               	goto	l7896
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;d232.c: 101:     IO.srq = S_R;
  6810  003108  0E02               	movlw	2
  6811  00310A  D011               	goto	L7
  6812  00310C                     l7882:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;d232.c: 104:    if (j == 'Q')
  6816  00310C  0E51               	movlw	81
  6817  00310E  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6818  003110  A4D8               	btfss	status,2,c
  6819  003112  D02A               	goto	l7896
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;d232.c: 105:     IO.srq = S_Q;
  6823  003114  0E03               	movlw	3
  6824  003116  D00B               	goto	L7
  6825  003118                     l7886:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;d232.c: 108:    if (j == ' ')
  6829  003118  0E20               	movlw	32
  6830  00311A  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6831  00311C  A4D8               	btfss	status,2,c
  6832  00311E  D024               	goto	l7896
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;d232.c: 109:     IO.srq = S_NUM;
  6836  003120  0E04               	movlw	4
  6837  003122  D005               	goto	L7
  6838  003124                     l1181:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;d232.c: 112:    IO.srq_value = j;
  6842  003124  C081  F1B9         	movff	Digital232_RW@j,_IO+16
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;d232.c: 113:    IO.srq = S_UPDATE;
  6846  003128  0E05               	movlw	5
  6847  00312A  D001               	goto	L7
  6848  00312C                     l7892:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;d232.c: 116:    IO.srq = S_IDLE;
  6852  00312C  0E00               	movlw	0
  6853  00312E                     L7:
  6854  00312E  0101               	movlb	1	; () banked
  6855  003130  6FB7               	movwf	(_IO+14)& (0+255),b
  6856                           
  6857                           ;d232.c: 117:   }
  6858  003132  D01A               	goto	l7896
  6859  003134                     l7894:
  6860                           
  6861                           ; BSR set to: 0
  6862  003134  0101               	movlb	1	; () banked
  6863  003136  51B7               	movf	(_IO+14)& (0+255),w,b
  6864  003138  0100               	movlb	0	; () banked
  6865  00313A  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6866  00313C  6B7F               	clrf	(??_Digital232_RW+1)& (0+255),b
  6867                           
  6868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6869                           ; Switch size 1, requested type "simple"
  6870                           ; Number of cases is 1, Range of values is 0 to 0
  6871                           ; switch strategies available:
  6872                           ; Name         Instructions Cycles
  6873                           ; simple_byte            4     3 (average)
  6874                           ;	Chosen strategy is simple_byte
  6875  00313E  517F               	movf	(??_Digital232_RW+1)& (0+255),w,b
  6876  003140  0A00               	xorlw	0	; case 0
  6877  003142  A4D8               	btfss	status,2,c
  6878  003144  D7F3               	goto	l7892
  6879                           
  6880                           ; BSR set to: 0
  6881                           ; Switch size 1, requested type "simple"
  6882                           ; Number of cases is 5, Range of values is 0 to 4
  6883                           ; switch strategies available:
  6884                           ; Name         Instructions Cycles
  6885                           ; simple_byte           16     9 (average)
  6886                           ;	Chosen strategy is simple_byte
  6887  003146  517E               	movf	??_Digital232_RW& (0+255),w,b
  6888  003148  0A00               	xorlw	0	; case 0
  6889  00314A  B4D8               	btfsc	status,2,c
  6890  00314C  D7D3               	goto	l7874
  6891  00314E  0A01               	xorlw	1	; case 1
  6892  003150  B4D8               	btfsc	status,2,c
  6893  003152  D7D6               	goto	l7878
  6894  003154  0A03               	xorlw	3	; case 2
  6895  003156  B4D8               	btfsc	status,2,c
  6896  003158  D7D9               	goto	l7882
  6897  00315A  0A01               	xorlw	1	; case 3
  6898  00315C  B4D8               	btfsc	status,2,c
  6899  00315E  D7DC               	goto	l7886
  6900  003160  0A07               	xorlw	7	; case 4
  6901  003162  B4D8               	btfsc	status,2,c
  6902  003164  D7DF               	goto	l1181
  6903  003166  D7E2               	goto	l7892
  6904  003168                     l7896:
  6905                           
  6906                           ;d232.c: 120:  UART2_Write('D');
  6907  003168  0E44               	movlw	68
  6908  00316A  ECC4  F023         	call	_UART2_Write
  6909                           
  6910                           ;d232.c: 124:  UART2_Write(IO.outbytes[4]);
  6911  00316E  0101               	movlb	1	; () banked
  6912  003170  51B2               	movf	(_IO+9)& (0+255),w,b
  6913  003172  ECC4  F023         	call	_UART2_Write
  6914                           
  6915                           ;d232.c: 125:  UART2_Write(IO.outbytes[3]);
  6916  003176  0101               	movlb	1	; () banked
  6917  003178  51B1               	movf	(_IO+8)& (0+255),w,b
  6918  00317A  ECC4  F023         	call	_UART2_Write
  6919                           
  6920                           ;d232.c: 126:  UART2_Write(IO.outbytes[1]);
  6921  00317E  0101               	movlb	1	; () banked
  6922  003180  51AF               	movf	(_IO+6)& (0+255),w,b
  6923  003182  ECC4  F023         	call	_UART2_Write
  6924                           
  6925                           ;d232.c: 127:  UART2_Write(IO.outbytes[2]);
  6926  003186  0101               	movlb	1	; () banked
  6927  003188  51B0               	movf	(_IO+7)& (0+255),w,b
  6928  00318A  ECC4  F023         	call	_UART2_Write
  6929                           
  6930                           ;d232.c: 128:  UART2_Write(IO.outbytes[0]);
  6931  00318E  0101               	movlb	1	; () banked
  6932  003190  51AE               	movf	(_IO+5)& (0+255),w,b
  6933  003192  ECC4  F023         	call	_UART2_Write
  6934                           
  6935                           ;d232.c: 129:  UART2_Write('\r');
  6936  003196  0E0D               	movlw	13
  6937  003198  ECC4  F023         	call	_UART2_Write
  6938                           
  6939                           ; BSR set to: 57
  6940                           ;d232.c: 130:  printf("%s", "R0\r");
  6941  00319C  0E4C               	movlw	low STR_5
  6942  00319E  0100               	movlb	0	; () banked
  6943  0031A0  6F64               	movwf	printf@fmt& (0+255),b
  6944  0031A2  0E34               	movlw	low STR_16
  6945  0031A4  6F65               	movwf	(?_printf+1)& (0+255),b
  6946  0031A6  5165               	movf	(?_printf+1)& (0+255),w,b
  6947  0031A8  A4D8               	btfss	status,2,c
  6948  0031AA  0E20               	movlw	high __smallconst
  6949  0031AC  6F66               	movwf	(?_printf+2)& (0+255),b
  6950  0031AE  ECC9  F026         	call	_printf	;wreg free
  6951                           
  6952                           ; BSR set to: 1
  6953                           ;d232.c: 131:  IO.output_ok = 1;
  6954  0031B2  0E01               	movlw	1
  6955  0031B4  6FB4               	movwf	(_IO+11)& (0+255),b
  6956                           
  6957                           ; BSR set to: 1
  6958                           ;d232.c: 132:  IO.io = IO_OUT;
  6959  0031B6  0E02               	movlw	2
  6960  0031B8  6FB5               	movwf	(_IO+12)& (0+255),b
  6961                           
  6962                           ; BSR set to: 1
  6963                           ;d232.c: 136:  StartTimer(TMR_RXTO, 250);
  6964  0031BA  0E00               	movlw	0
  6965  0031BC  6E07               	movwf	(StartTimer@count+1)^0,c
  6966  0031BE  0EFA               	movlw	250
  6967  0031C0  6E06               	movwf	StartTimer@count^0,c
  6968  0031C2  0E02               	movlw	2
  6969  0031C4  EC3C  F025         	call	_StartTimer
  6970                           
  6971                           ;d232.c: 137:  while (!UART2_is_rx_ready()) {
  6972  0031C8  D014               	goto	l7920
  6973  0031CA                     l7906:
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;d232.c: 138:   if (TimerDone(TMR_RXTO)) {
  6977  0031CA  0E02               	movlw	2
  6978  0031CC  ECA6  F025         	call	_TimerDone
  6979  0031D0  0900               	iorlw	0
  6980  0031D2  B4D8               	btfsc	status,2,c
  6981  0031D4  D00E               	goto	l7920
  6982                           
  6983                           ;d232.c: 139:    PWM8_LoadDutyValue(x++);
  6984  0031D6  C0A0  F006         	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  6985  0031DA  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6986  0031DC  ECA8  F024         	call	_PWM8_LoadDutyValue	;wreg free
  6987  0031E0  0100               	movlb	0	; () banked
  6988  0031E2  2BA0               	incf	Digital232_RW@x& (0+255),f,b
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;d232.c: 140:    if (x > 3)
  6992  0031E4  0E03               	movlw	3
  6993  0031E6  65A0               	cpfsgt	Digital232_RW@x& (0+255),b
  6994  0031E8  D002               	goto	l1186
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;d232.c: 141:     x = 0;
  6998  0031EA  0E00               	movlw	0
  6999  0031EC  6FA0               	movwf	Digital232_RW@x& (0+255),b
  7000  0031EE                     l1186:
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;d232.c: 142:    IO.io = IO_FAIL;
  7004  0031EE  0E06               	movlw	6
  7005  0031F0  D74A               	goto	L8
  7006  0031F2                     l7920:
  7007                           
  7008                           ;d232.c: 137:  while (!UART2_is_rx_ready()) {
  7009  0031F2  EC92  F027         	call	_UART2_is_rx_ready	;wreg free
  7010  0031F6  0900               	iorlw	0
  7011  0031F8  B4D8               	btfsc	status,2,c
  7012  0031FA  D7E7               	goto	l7906
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;d232.c: 150:  i = 0;
  7016  0031FC  0E00               	movlw	0
  7017  0031FE  6F80               	movwf	Digital232_RW@i& (0+255),b
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;d232.c: 151:  StartTimer(TMR_RXTO, 250);
  7021  003200  0E00               	movlw	0
  7022  003202  6E07               	movwf	(StartTimer@count+1)^0,c
  7023  003204  0EFA               	movlw	250
  7024  003206  6E06               	movwf	StartTimer@count^0,c
  7025  003208  0E02               	movlw	2
  7026  00320A  EC3C  F025         	call	_StartTimer
  7027                           
  7028                           ;d232.c: 152:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  7029  00320E  D015               	goto	l7932
  7030  003210                     l7926:
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;d232.c: 153:   if (UART2_is_rx_ready()) {
  7034  003210  EC92  F027         	call	_UART2_is_rx_ready	;wreg free
  7035  003214  0900               	iorlw	0
  7036  003216  B4D8               	btfsc	status,2,c
  7037  003218  D010               	goto	l7932
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;d232.c: 154:    IO.inbytes[4 - i] = UART2_Read();
  7041  00321A  EC60  F023         	call	_UART2_Read	;wreg free
  7042  00321E  0100               	movlb	0	; () banked
  7043  003220  6F7E               	movwf	??_Digital232_RW& (0+255),b
  7044  003222  5180               	movf	Digital232_RW@i& (0+255),w,b
  7045  003224  08AD               	sublw	low (_IO+4)
  7046  003226  6ED9               	movwf	fsr2l,c
  7047  003228  0E00               	movlw	0
  7048  00322A  A0D8               	btfss	status,0,c
  7049  00322C  2AE8               	incf	wreg,f,c
  7050  00322E  0801               	sublw	high (_IO+4)
  7051  003230  6EDA               	movwf	fsr2h,c
  7052  003232  0060  F1FB  FFDF   	movff	??_Digital232_RW,indf2
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;d232.c: 155:    i++;
  7056  003238  2B80               	incf	Digital232_RW@i& (0+255),f,b
  7057  00323A                     l7932:
  7058                           
  7059                           ;d232.c: 152:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  7060  00323A  0E02               	movlw	2
  7061  00323C  ECA6  F025         	call	_TimerDone
  7062  003240  0900               	iorlw	0
  7063  003242  A4D8               	btfss	status,2,c
  7064  003244  D004               	goto	u7520
  7065  003246  0E05               	movlw	5
  7066  003248  0100               	movlb	0	; () banked
  7067  00324A  6580               	cpfsgt	Digital232_RW@i& (0+255),b
  7068  00324C  D7E1               	goto	l7926
  7069  00324E                     u7520:
  7070                           
  7071                           ;d232.c: 158:  if (TimerDone(TMR_RXTO) || i < 6) {
  7072  00324E  0E02               	movlw	2
  7073  003250  ECA6  F025         	call	_TimerDone
  7074  003254  0900               	iorlw	0
  7075  003256  A4D8               	btfss	status,2,c
  7076  003258  D004               	goto	u7540
  7077  00325A  0E06               	movlw	6
  7078  00325C  0100               	movlb	0	; () banked
  7079  00325E  6180               	cpfslt	Digital232_RW@i& (0+255),b
  7080  003260  D009               	goto	l7952
  7081  003262                     u7540:
  7082                           
  7083                           ;d232.c: 159:   PWM8_LoadDutyValue(x++);
  7084  003262  C0A0  F006         	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  7085  003266  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7086  003268  ECA8  F024         	call	_PWM8_LoadDutyValue	;wreg free
  7087  00326C  0100               	movlb	0	; () banked
  7088  00326E  2BA0               	incf	Digital232_RW@x& (0+255),f,b
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;d232.c: 160:   if (x > 16)
  7092  003270  0E10               	movlw	16
  7093  003272  D7B9               	goto	L9
  7094  003274                     l7952:
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;d232.c: 166:  if (UART2_is_rx_ready())
  7098  003274  EC92  F027         	call	_UART2_is_rx_ready	;wreg free
  7099  003278  0900               	iorlw	0
  7100  00327A  A4D8               	btfss	status,2,c
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;d232.c: 167:   UART2_Read();
  7104  00327C  EC60  F023         	call	_UART2_Read	;wreg free
  7105                           
  7106                           ;d232.c: 169:  IO.input_ok = 1;
  7107  003280  0E01               	movlw	1
  7108  003282  0101               	movlb	1	; () banked
  7109  003284  6FB3               	movwf	(_IO+10)& (0+255),b
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;d232.c: 170:  IO.io = IO_IN;
  7113  003286  0E03               	movlw	3
  7114  003288  6FB5               	movwf	(_IO+12)& (0+255),b
  7115                           
  7116                           ; BSR set to: 1
  7117                           ;d232.c: 171:  IO.d232 = D232_OUT_IN;
  7118  00328A  0E02               	movlw	2
  7119  00328C  6FB6               	movwf	(_IO+13)& (0+255),b
  7120                           
  7121                           ; BSR set to: 1
  7122                           ;d232.c: 173:  PWM8_LoadDutyValue(199);
  7123  00328E  0E00               	movlw	0
  7124  003290  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7125  003292  0EC7               	movlw	199
  7126  003294  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7127  003296  ECA8  F024         	call	_PWM8_LoadDutyValue	;wreg free
  7128                           
  7129                           ;d232.c: 174:  IO.io = IO_UPDATE;
  7130  00329A  0E05               	movlw	5
  7131  00329C  0101               	movlb	1	; () banked
  7132  00329E  6FB5               	movwf	(_IO+12)& (0+255),b
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;d232.c: 175:  return 1;
  7136  0032A0  0E01               	movlw	1
  7137                           
  7138                           ; BSR set to: 1
  7139  0032A2  0012               	return		;funcret
  7140  0032A4                     __end_of_Digital232_RW:
  7141                           	callstack 0
  7142                           
  7143 ;; *************** function _printf *****************
  7144 ;; Defined at:
  7145 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/printf.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  7148 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7149 ;;		 -> STR_7(3), STR_5(3), 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  ret             2    0        int 
  7152 ;;  ap              1    9[BANK0 ] PTR void [1]
  7153 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  2    4[BANK0 ] int 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 3F/0
  7160 ;;		On exit  : 3F/1
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7163 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7164 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7167 ;;Total ram usage:        6 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:   12
  7170 ;; This function calls:
  7171 ;;		_vfprintf
  7172 ;; This function is called by:
  7173 ;;		_Digital232_init
  7174 ;;		_Digital232_RW
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text55
  7179  004D92                     __ptext55:
  7180                           	callstack 0
  7181  004D92                     _printf:
  7182                           	callstack 17
  7183                           
  7184                           ; BSR set to: 0
  7185                           
  7186                           ; BSR set to: 1
  7187                           ;incstack = 0
  7188  004D92  0E65               	movlw	low (?_printf+1)
  7189  004D94  6F69               	movwf	printf@ap& (0+255),b
  7190                           
  7191                           ; BSR set to: 0
  7192  004D96  0E00               	movlw	0
  7193  004D98  6F60               	movwf	vfprintf@fp& (0+255),b
  7194  004D9A  0E00               	movlw	0
  7195  004D9C  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  7196  004D9E  C064  F062         	movff	printf@fmt,vfprintf@fmt
  7197  004DA2  0E69               	movlw	low printf@ap
  7198  004DA4  6F63               	movwf	vfprintf@ap& (0+255),b
  7199  004DA6  ECA6  F022         	call	_vfprintf	;wreg free
  7200                           
  7201                           ; BSR set to: 1
  7202  004DAA  0012               	return		;funcret
  7203  004DAC                     __end_of_printf:
  7204                           	callstack 0
  7205                           
  7206 ;; *************** function _vfprintf *****************
  7207 ;; Defined at:
  7208 ;;		line 1368 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7211 ;;		 -> sprintf@f(6), NULL(0), 
  7212 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  7213 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7214 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7215 ;;		 -> STR_1(17), 
  7216 ;;  ap              1    3[BANK0 ] PTR PTR void 
  7217 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  7220 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7221 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7222 ;;		 -> STR_1(17), 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  2    0[BANK0 ] int 
  7225 ;; Registers used:
  7226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 3F/0
  7229 ;;		On exit  : 3F/1
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7232 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7236 ;;Total ram usage:        5 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:   11
  7239 ;; This function calls:
  7240 ;;		_vfpfcnvrt
  7241 ;; This function is called by:
  7242 ;;		_sprintf
  7243 ;;		_printf
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text56
  7248  00454C                     __ptext56:
  7249                           	callstack 0
  7250  00454C                     _vfprintf:
  7251                           	callstack 17
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7255                           
  7256                           ; BSR set to: 1
  7257                           ;incstack = 0
  7258  00454C  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7262  004550  0E00               	movlw	0
  7263  004552  0101               	movlb	1	; () banked
  7264  004554  6F8B               	movwf	(_nout+1)& (0+255),b
  7265  004556  0E00               	movlw	0
  7266  004558  6F8A               	movwf	_nout& (0+255),b
  7267                           
  7268                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7269  00455A  D00F               	goto	l7474
  7270  00455C                     l7472:
  7271                           
  7272                           ; BSR set to: 1
  7273                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7274  00455C  C060  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  7275  004560  C061  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7276  004564  0E55               	movlw	low vfprintf@cfmt
  7277  004566  6E49               	movwf	vfpfcnvrt@fmt^0,c
  7278  004568  C063  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  7279  00456C  EC52  F019         	call	_vfpfcnvrt	;wreg free
  7280  004570  5047               	movf	?_vfpfcnvrt^0,w,c
  7281  004572  0101               	movlb	1	; () banked
  7282  004574  278A               	addwf	_nout& (0+255),f,b
  7283  004576  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  7284  004578  238B               	addwfc	(_nout+1)& (0+255),f,b
  7285  00457A                     l7474:
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7289  00457A  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  7290  004580                     	if	1	;There is more than 1 active tblptr byte
  7291  004580  0E20               	movlw	high __smallconst
  7292  004582  6EF7               	movwf	tblptrh,c
  7293  004584                     	endif
  7294  004584                     	if	0	;tblptru may be non-zero
  7295  004584                     	endif
  7296  004584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7297  004584  0E00               	movlw	low (__smallconst shr (0+16))
  7298  004586  6EF8               	movwf	tblptru,c
  7299  004588                     	endif
  7300  004588  0008               	tblrd		*
  7301  00458A  50F5               	movf	tablat,w,c
  7302  00458C  0900               	iorlw	0
  7303  00458E  A4D8               	btfss	status,2,c
  7304  004590  D7E5               	goto	l7472
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7308  004592  C18A  F060         	movff	_nout,?_vfprintf
  7309  004596  C18B  F061         	movff	_nout+1,?_vfprintf+1
  7310                           
  7311                           ; BSR set to: 1
  7312  00459A  0012               	return		;funcret
  7313  00459C                     __end_of_vfprintf:
  7314                           	callstack 0
  7315                           
  7316 ;; *************** function _vfpfcnvrt *****************
  7317 ;; Defined at:
  7318 ;;		line 670 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  7321 ;;		 -> sprintf@f(6), NULL(0), 
  7322 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  7323 ;;		 -> vfprintf@cfmt(1), 
  7324 ;;  ap              1   73[COMRAM] PTR PTR void 
  7325 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  ll              8   74[COMRAM] long long 
  7328 ;;  llu             8    0        unsigned long long 
  7329 ;;  f               4    0        unsigned long long 
  7330 ;;  vp              3    0        PTR void 
  7331 ;;  ct              3    0        unsigned char [3]
  7332 ;;  cp              2   82[COMRAM] PTR unsigned char 
  7333 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7334 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7335 ;;		 -> STR_4(5), 
  7336 ;;  i               2    0        int 
  7337 ;;  done            2    0        int 
  7338 ;;  c               1    0        unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  2   70[COMRAM] int 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 3E/1
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7349 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7351 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7352 ;;Total ram usage:       14 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:   10
  7355 ;; This function calls:
  7356 ;;		_dtoa
  7357 ;;		_fputc
  7358 ;;		_stoa
  7359 ;; This function is called by:
  7360 ;;		_vfprintf
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text57
  7365  0032A4                     __ptext57:
  7366                           	callstack 0
  7367  0032A4                     _vfpfcnvrt:
  7368                           	callstack 17
  7369                           
  7370                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7371                           
  7372                           ; BSR set to: 1
  7373                           ;incstack = 0
  7374  0032A4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7375  0032A6  6ED9               	movwf	fsr2l,c
  7376  0032A8  6ADA               	clrf	fsr2h,c
  7377  0032AA  006F FF7F FFF6     	movff	indf2,tblptrl
  7378  0032B0                     	if	1	;There is more than 1 active tblptr byte
  7379  0032B0  0E20               	movlw	high __smallconst
  7380  0032B2  6EF7               	movwf	tblptrh,c
  7381  0032B4                     	endif
  7382  0032B4                     	if	0	;tblptru may be non-zero
  7383  0032B4                     	endif
  7384  0032B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7385  0032B4  0E00               	movlw	low (__smallconst shr (0+16))
  7386  0032B6  6EF8               	movwf	tblptru,c
  7387  0032B8                     	endif
  7388  0032B8  0008               	tblrd		*
  7389  0032BA  50F5               	movf	tablat,w,c
  7390  0032BC  0A25               	xorlw	37
  7391  0032BE  A4D8               	btfss	status,2,c
  7392  0032C0  D0BF               	goto	l7274
  7393                           
  7394                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7395  0032C2  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7396  0032C4  6ED9               	movwf	fsr2l,c
  7397  0032C6  6ADA               	clrf	fsr2h,c
  7398  0032C8  2ADF               	incf	indf2,f,c
  7399                           
  7400                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7401  0032CA  0E00               	movlw	0
  7402  0032CC  0101               	movlb	1	; () banked
  7403  0032CE  6F8D               	movwf	(_width+1)& (0+255),b
  7404  0032D0  0E00               	movlw	0
  7405  0032D2  6F8C               	movwf	_width& (0+255),b
  7406  0032D4  C18C  F056         	movff	_width,_flags
  7407  0032D8  C18D  F057         	movff	_width+1,_flags+1
  7408                           
  7409                           ; BSR set to: 1
  7410                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7411  0032DC  0100               	movlb	0	; () banked
  7412  0032DE  699C               	setf	_prec& (0+255),b
  7413  0032E0  699D               	setf	(_prec+1)& (0+255),b
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7417  0032E2  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7418  0032E4  6ED9               	movwf	fsr2l,c
  7419  0032E6  6ADA               	clrf	fsr2h,c
  7420  0032E8  006F FF7F FFF6     	movff	indf2,tblptrl
  7421  0032EE                     	if	1	;There is more than 1 active tblptr byte
  7422  0032EE  0E20               	movlw	high __smallconst
  7423  0032F0  6EF7               	movwf	tblptrh,c
  7424  0032F2                     	endif
  7425  0032F2                     	if	0	;tblptru may be non-zero
  7426  0032F2                     	endif
  7427  0032F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7428  0032F2  0E00               	movlw	low (__smallconst shr (0+16))
  7429  0032F4  6EF8               	movwf	tblptru,c
  7430  0032F6                     	endif
  7431  0032F6  0008               	tblrd		*
  7432  0032F8  50F5               	movf	tablat,w,c
  7433  0032FA  0A64               	xorlw	100
  7434  0032FC  B4D8               	btfsc	status,2,c
  7435  0032FE  D00F               	goto	u6930
  7436                           
  7437                           ; BSR set to: 0
  7438  003300  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7439  003302  6ED9               	movwf	fsr2l,c
  7440  003304  6ADA               	clrf	fsr2h,c
  7441  003306  006F FF7F FFF6     	movff	indf2,tblptrl
  7442  00330C                     	if	1	;There is more than 1 active tblptr byte
  7443  00330C  0E20               	movlw	high __smallconst
  7444  00330E  6EF7               	movwf	tblptrh,c
  7445  003310                     	endif
  7446  003310                     	if	0	;tblptru may be non-zero
  7447  003310                     	endif
  7448  003310                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7449  003310  0E00               	movlw	low (__smallconst shr (0+16))
  7450  003312  6EF8               	movwf	tblptru,c
  7451  003314                     	endif
  7452  003314  0008               	tblrd		*
  7453  003316  50F5               	movf	tablat,w,c
  7454  003318  0A69               	xorlw	105
  7455  00331A  A4D8               	btfss	status,2,c
  7456  00331C  D036               	goto	l7248
  7457  00331E                     u6930:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7461  00331E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7462  003320  6ED9               	movwf	fsr2l,c
  7463  003322  6ADA               	clrf	fsr2h,c
  7464  003324  2ADF               	incf	indf2,f,c
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7468  003326  504A               	movf	vfpfcnvrt@ap^0,w,c
  7469  003328  6ED9               	movwf	fsr2l,c
  7470  00332A  6ADA               	clrf	fsr2h,c
  7471  00332C  50DF               	movf	indf2,w,c
  7472  00332E  2ADF               	incf	indf2,f,c
  7473  003330  2ADF               	incf	indf2,f,c
  7474  003332  6ED9               	movwf	fsr2l,c
  7475  003334  6ADA               	clrf	fsr2h,c
  7476  003336  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  7477  00333C  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  7478  003342  0E00               	movlw	0
  7479  003344  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7480  003346  0EFF               	movlw	-1
  7481  003348  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  7482  00334A  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  7483  00334C  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  7484  00334E  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  7485  003350  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  7486  003352  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7490  003354  C047  F023         	movff	vfpfcnvrt@fp,dtoa@fp
  7491  003358  C048  F024         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7492  00335C  C04B  F025         	movff	vfpfcnvrt@ll,dtoa@d
  7493  003360  C04C  F026         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7494  003364  C04D  F027         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7495  003368  C04E  F028         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7496  00336C  C04F  F029         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7497  003370  C050  F02A         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7498  003374  C051  F02B         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7499  003378  C052  F02C         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7500  00337C  EC17  F017         	call	_dtoa	;wreg free
  7501  003380  C023  F047         	movff	?_dtoa,?_vfpfcnvrt
  7502  003384  C024  F048         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7503  003388  0012               	return	
  7504  00338A                     l7248:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7508  00338A  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7509  00338C  6ED9               	movwf	fsr2l,c
  7510  00338E  6ADA               	clrf	fsr2h,c
  7511  003390  006F FF7F FFF6     	movff	indf2,tblptrl
  7512  003396                     	if	1	;There is more than 1 active tblptr byte
  7513  003396  0E20               	movlw	high __smallconst
  7514  003398  6EF7               	movwf	tblptrh,c
  7515  00339A                     	endif
  7516  00339A                     	if	0	;tblptru may be non-zero
  7517  00339A                     	endif
  7518  00339A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7519  00339A  0E00               	movlw	low (__smallconst shr (0+16))
  7520  00339C  6EF8               	movwf	tblptru,c
  7521  00339E                     	endif
  7522  00339E  0008               	tblrd		*
  7523  0033A0  50F5               	movf	tablat,w,c
  7524  0033A2  0A73               	xorlw	115
  7525  0033A4  A4D8               	btfss	status,2,c
  7526  0033A6  D021               	goto	l7258
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7530  0033A8  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7531  0033AA  6ED9               	movwf	fsr2l,c
  7532  0033AC  6ADA               	clrf	fsr2h,c
  7533  0033AE  2ADF               	incf	indf2,f,c
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7537  0033B0  504A               	movf	vfpfcnvrt@ap^0,w,c
  7538  0033B2  6ED9               	movwf	fsr2l,c
  7539  0033B4  6ADA               	clrf	fsr2h,c
  7540  0033B6  0E02               	movlw	2
  7541  0033B8  26DF               	addwf	indf2,f,c
  7542  0033BA  5CDF               	subwf	indf2,w,c
  7543  0033BC  6ED9               	movwf	fsr2l,c
  7544  0033BE  6ADA               	clrf	fsr2h,c
  7545  0033C0  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  7546  0033C6  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7550  0033CC  C047  F011         	movff	vfpfcnvrt@fp,stoa@fp
  7551  0033D0  C048  F012         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7552  0033D4  C053  F013         	movff	vfpfcnvrt@cp,stoa@s
  7553  0033D8  C054  F014         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7554  0033DC  EC39  F01A         	call	_stoa	;wreg free
  7555  0033E0  C011  F047         	movff	?_stoa,?_vfpfcnvrt
  7556  0033E4  C012  F048         	movff	?_stoa+1,?_vfpfcnvrt+1
  7557  0033E8  0012               	return	
  7558  0033EA                     l7258:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7562  0033EA  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7563  0033EC  6ED9               	movwf	fsr2l,c
  7564  0033EE  6ADA               	clrf	fsr2h,c
  7565  0033F0  006F FF7F FFF6     	movff	indf2,tblptrl
  7566  0033F6                     	if	1	;There is more than 1 active tblptr byte
  7567  0033F6  0E20               	movlw	high __smallconst
  7568  0033F8  6EF7               	movwf	tblptrh,c
  7569  0033FA                     	endif
  7570  0033FA                     	if	0	;tblptru may be non-zero
  7571  0033FA                     	endif
  7572  0033FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7573  0033FA  0E00               	movlw	low (__smallconst shr (0+16))
  7574  0033FC  6EF8               	movwf	tblptru,c
  7575  0033FE                     	endif
  7576  0033FE  0008               	tblrd		*
  7577  003400  50F5               	movf	tablat,w,c
  7578  003402  0A25               	xorlw	37
  7579  003404  A4D8               	btfss	status,2,c
  7580  003406  D013               	goto	l7268
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7584  003408  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7585  00340A  6ED9               	movwf	fsr2l,c
  7586  00340C  6ADA               	clrf	fsr2h,c
  7587  00340E  2ADF               	incf	indf2,f,c
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7591  003410  0E00               	movlw	0
  7592  003412  6E09               	movwf	(fputc@c+1)^0,c
  7593  003414  0E25               	movlw	37
  7594  003416  6E08               	movwf	fputc@c^0,c
  7595  003418  C047  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  7596  00341C  C048  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7597  003420  EC25  F01F         	call	_fputc	;wreg free
  7598  003424                     l7264:
  7599                           
  7600                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7601  003424  0E00               	movlw	0
  7602  003426  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7603  003428  0E01               	movlw	1
  7604  00342A  6E47               	movwf	?_vfpfcnvrt^0,c
  7605  00342C  0012               	return	
  7606  00342E                     l7268:
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7610  00342E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7611  003430  6ED9               	movwf	fsr2l,c
  7612  003432  6ADA               	clrf	fsr2h,c
  7613  003434  2ADF               	incf	indf2,f,c
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7617  003436  0E00               	movlw	0
  7618  003438  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7619  00343A  0E00               	movlw	0
  7620  00343C  6E47               	movwf	?_vfpfcnvrt^0,c
  7621  00343E  0012               	return	
  7622  003440                     l7274:
  7623                           
  7624                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7625  003440  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7626  003442  6ED9               	movwf	fsr2l,c
  7627  003444  6ADA               	clrf	fsr2h,c
  7628  003446  006F FF7F FFF6     	movff	indf2,tblptrl
  7629  00344C                     	if	1	;There is more than 1 active tblptr byte
  7630  00344C  0E20               	movlw	high __smallconst
  7631  00344E  6EF7               	movwf	tblptrh,c
  7632  003450                     	endif
  7633  003450                     	if	0	;tblptru may be non-zero
  7634  003450                     	endif
  7635  003450                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7636  003450  0E00               	movlw	low (__smallconst shr (0+16))
  7637  003452  6EF8               	movwf	tblptru,c
  7638  003454                     	endif
  7639  003454  0008               	tblrd		*
  7640  003456  50F5               	movf	tablat,w,c
  7641  003458  6E08               	movwf	fputc@c^0,c
  7642  00345A  6A09               	clrf	(fputc@c+1)^0,c
  7643  00345C  C047  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  7644  003460  C048  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7645  003464  EC25  F01F         	call	_fputc	;wreg free
  7646                           
  7647                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7648  003468  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7649  00346A  6ED9               	movwf	fsr2l,c
  7650  00346C  6ADA               	clrf	fsr2h,c
  7651  00346E  2ADF               	incf	indf2,f,c
  7652  003470  D7D9               	goto	l7264
  7653  003472                     __end_of_vfpfcnvrt:
  7654                           	callstack 0
  7655                           
  7656 ;; *************** function _stoa *****************
  7657 ;; Defined at:
  7658 ;;		line 546 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7661 ;;		 -> sprintf@f(6), NULL(0), 
  7662 ;;  s               2   18[COMRAM] PTR unsigned char 
  7663 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7664 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7665 ;;		 -> STR_4(5), 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  nuls            7   21[COMRAM] unsigned char [7]
  7668 ;;  l               2   36[COMRAM] int 
  7669 ;;  p               2   34[COMRAM] int 
  7670 ;;  cp              2   32[COMRAM] PTR unsigned char 
  7671 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_16(4), 
  7672 ;;		 -> STR_14(4), STR_12(4), STR_10(4), STR_8(4), 
  7673 ;;		 -> STR_6(4), STR_4(5), 
  7674 ;;  w               2   30[COMRAM] int 
  7675 ;;  i               2   28[COMRAM] int 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  2   16[COMRAM] int 
  7678 ;; Registers used:
  7679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 3F/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7689 ;;Total ram usage:       22 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    7
  7692 ;; This function calls:
  7693 ;;		_fputc
  7694 ;;		_strlen
  7695 ;; This function is called by:
  7696 ;;		_vfpfcnvrt
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text58
  7701  003472                     __ptext58:
  7702                           	callstack 0
  7703  003472                     _stoa:
  7704                           	callstack 19
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7708                           
  7709                           ;incstack = 0
  7710  003472  EE20  F19E         	lfsr	2,stoa@F1139
  7711  003476  EE10  F016         	lfsr	1,stoa@nuls
  7712  00347A  0E06               	movlw	6
  7713  00347C                     u6341:
  7714  00347C  006F FF6F FFE3     	movff	plusw2,plusw1
  7715  003482  06E8               	decf	wreg,f,c
  7716  003484  E2FB               	bc	u6341
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7720  003486  C013  F021         	movff	stoa@s,stoa@cp
  7721  00348A  C014  F022         	movff	stoa@s+1,stoa@cp+1
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7725  00348E  5021               	movf	stoa@cp^0,w,c
  7726  003490  1022               	iorwf	(stoa@cp+1)^0,w,c
  7727  003492  A4D8               	btfss	status,2,c
  7728  003494  D003               	goto	l6878
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7732  003496  0E16               	movlw	low stoa@nuls
  7733  003498  6E21               	movwf	stoa@cp^0,c
  7734  00349A  6A22               	clrf	(stoa@cp+1)^0,c
  7735  00349C                     l6878:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7739  00349C  C021  F006         	movff	stoa@cp,strlen@s
  7740  0034A0  C022  F007         	movff	stoa@cp+1,strlen@s+1
  7741  0034A4  ECCE  F022         	call	_strlen	;wreg free
  7742  0034A8  C006  F025         	movff	?_strlen,stoa@l
  7743  0034AC  C007  F026         	movff	?_strlen+1,stoa@l+1
  7744                           
  7745                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7746  0034B0  C09C  F023         	movff	_prec,stoa@p
  7747  0034B4  C09D  F024         	movff	_prec+1,stoa@p+1
  7748                           
  7749                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7750  0034B8  BE24               	btfsc	(stoa@p+1)^0,7,c
  7751  0034BA  D00E               	goto	l2209
  7752  0034BC  5025               	movf	stoa@l^0,w,c
  7753  0034BE  5C23               	subwf	stoa@p^0,w,c
  7754  0034C0  5024               	movf	(stoa@p+1)^0,w,c
  7755  0034C2  0A80               	xorlw	128
  7756  0034C4  6E15               	movwf	??_stoa^0,c
  7757  0034C6  5026               	movf	(stoa@l+1)^0,w,c
  7758  0034C8  0A80               	xorlw	128
  7759  0034CA  5815               	subwfb	??_stoa^0,w,c
  7760  0034CC  B0D8               	btfsc	status,0,c
  7761  0034CE  D004               	goto	l2209
  7762  0034D0  C023  F025         	movff	stoa@p,stoa@l
  7763  0034D4  C024  F026         	movff	stoa@p+1,stoa@l+1
  7764  0034D8                     l2209:
  7765                           
  7766                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7767  0034D8  C025  F023         	movff	stoa@l,stoa@p
  7768  0034DC  C026  F024         	movff	stoa@l+1,stoa@p+1
  7769                           
  7770                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7771  0034E0  C18C  F01F         	movff	_width,stoa@w
  7772  0034E4  C18D  F020         	movff	_width+1,stoa@w+1
  7773                           
  7774                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7775  0034E8  A056               	btfss	_flags^0,0,c
  7776  0034EA  D00D               	goto	l6892
  7777  0034EC  D016               	goto	u6390
  7778  0034EE                     l6888:
  7779                           
  7780                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7781  0034EE  0E00               	movlw	0
  7782  0034F0  6E09               	movwf	(fputc@c+1)^0,c
  7783  0034F2  0E20               	movlw	32
  7784  0034F4  6E08               	movwf	fputc@c^0,c
  7785  0034F6  C011  F00A         	movff	stoa@fp,fputc@fp
  7786  0034FA  C012  F00B         	movff	stoa@fp+1,fputc@fp+1
  7787  0034FE  EC25  F01F         	call	_fputc	;wreg free
  7788                           
  7789                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7790  003502  4A25               	infsnz	stoa@l^0,f,c
  7791  003504  2A26               	incf	(stoa@l+1)^0,f,c
  7792  003506                     l6892:
  7793                           
  7794                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7795  003506  501F               	movf	stoa@w^0,w,c
  7796  003508  5C25               	subwf	stoa@l^0,w,c
  7797  00350A  5026               	movf	(stoa@l+1)^0,w,c
  7798  00350C  0A80               	xorlw	128
  7799  00350E  6E15               	movwf	??_stoa^0,c
  7800  003510  5020               	movf	(stoa@w+1)^0,w,c
  7801  003512  0A80               	xorlw	128
  7802  003514  5815               	subwfb	??_stoa^0,w,c
  7803  003516  A0D8               	btfss	status,0,c
  7804  003518  D7EA               	goto	l6888
  7805  00351A                     u6390:
  7806                           
  7807                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7808  00351A  0E00               	movlw	0
  7809  00351C  6E1E               	movwf	(stoa@i+1)^0,c
  7810  00351E  0E00               	movlw	0
  7811  003520  6E1D               	movwf	stoa@i^0,c
  7812                           
  7813                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7814  003522  D023               	goto	l6902
  7815  003524                     l6896:
  7816                           
  7817                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7818  003524  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  7819  00352A  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  7820  003530  0E00               	movlw	low (__smallconst shr (0+16))
  7821  003532  6EF8               	movwf	tblptru,c
  7822  003534  0E1F               	movlw	(high __ramtop+-1)
  7823  003536  64F7               	cpfsgt	tblptrh,c
  7824  003538  D003               	bra	u6407
  7825  00353A  0008               	tblrd		*
  7826  00353C  50F5               	movf	tablat,w,c
  7827  00353E  D007               	bra	u6400
  7828  003540                     u6407:
  7829  003540  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7830  003546  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7831  00354C  50E7               	movf	indf1,w,c
  7832  00354E                     u6400:
  7833  00354E  6E15               	movwf	??_stoa^0,c
  7834  003550  5015               	movf	??_stoa^0,w,c
  7835  003552  6E08               	movwf	fputc@c^0,c
  7836  003554  6A09               	clrf	(fputc@c+1)^0,c
  7837  003556  C011  F00A         	movff	stoa@fp,fputc@fp
  7838  00355A  C012  F00B         	movff	stoa@fp+1,fputc@fp+1
  7839  00355E  EC25  F01F         	call	_fputc	;wreg free
  7840                           
  7841                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7842  003562  4A21               	infsnz	stoa@cp^0,f,c
  7843  003564  2A22               	incf	(stoa@cp+1)^0,f,c
  7844                           
  7845                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7846  003566  4A1D               	infsnz	stoa@i^0,f,c
  7847  003568  2A1E               	incf	(stoa@i+1)^0,f,c
  7848  00356A                     l6902:
  7849                           
  7850                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7851  00356A  5023               	movf	stoa@p^0,w,c
  7852  00356C  5C1D               	subwf	stoa@i^0,w,c
  7853  00356E  501E               	movf	(stoa@i+1)^0,w,c
  7854  003570  0A80               	xorlw	128
  7855  003572  6E15               	movwf	??_stoa^0,c
  7856  003574  5024               	movf	(stoa@p+1)^0,w,c
  7857  003576  0A80               	xorlw	128
  7858  003578  5815               	subwfb	??_stoa^0,w,c
  7859  00357A  A0D8               	btfss	status,0,c
  7860  00357C  D7D3               	goto	l6896
  7861                           
  7862                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7863  00357E  B056               	btfsc	_flags^0,0,c
  7864  003580  D00D               	goto	l6910
  7865  003582  D016               	goto	u6430
  7866  003584                     l6906:
  7867                           
  7868                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7869  003584  0E00               	movlw	0
  7870  003586  6E09               	movwf	(fputc@c+1)^0,c
  7871  003588  0E20               	movlw	32
  7872  00358A  6E08               	movwf	fputc@c^0,c
  7873  00358C  C011  F00A         	movff	stoa@fp,fputc@fp
  7874  003590  C012  F00B         	movff	stoa@fp+1,fputc@fp+1
  7875  003594  EC25  F01F         	call	_fputc	;wreg free
  7876                           
  7877                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7878  003598  4A25               	infsnz	stoa@l^0,f,c
  7879  00359A  2A26               	incf	(stoa@l+1)^0,f,c
  7880  00359C                     l6910:
  7881                           
  7882                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7883  00359C  501F               	movf	stoa@w^0,w,c
  7884  00359E  5C25               	subwf	stoa@l^0,w,c
  7885  0035A0  5026               	movf	(stoa@l+1)^0,w,c
  7886  0035A2  0A80               	xorlw	128
  7887  0035A4  6E15               	movwf	??_stoa^0,c
  7888  0035A6  5020               	movf	(stoa@w+1)^0,w,c
  7889  0035A8  0A80               	xorlw	128
  7890  0035AA  5815               	subwfb	??_stoa^0,w,c
  7891  0035AC  A0D8               	btfss	status,0,c
  7892  0035AE  D7EA               	goto	l6906
  7893  0035B0                     u6430:
  7894                           
  7895                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 588:     return l;
  7896                           
  7897                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 586:     }
  7898  0035B0  C025  F011         	movff	stoa@l,?_stoa
  7899  0035B4  C026  F012         	movff	stoa@l+1,?_stoa+1
  7900  0035B8  0012               	return		;funcret
  7901  0035BA                     __end_of_stoa:
  7902                           	callstack 0
  7903                           
  7904 ;; *************** function _dtoa *****************
  7905 ;; Defined at:
  7906 ;;		line 274 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  7909 ;;		 -> sprintf@f(6), NULL(0), 
  7910 ;;  d               8   36[COMRAM] long long 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  n               8   60[COMRAM] long long 
  7913 ;;  i               2   68[COMRAM] int 
  7914 ;;  s               2   58[COMRAM] int 
  7915 ;;  w               2   56[COMRAM] int 
  7916 ;;  p               2   54[COMRAM] int 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  2   34[COMRAM] int 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 3F/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7926 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7927 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7928 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7929 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7930 ;;Total ram usage:       36 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    9
  7933 ;; This function calls:
  7934 ;;		___aodiv
  7935 ;;		___aomod
  7936 ;;		_abs
  7937 ;;		_pad
  7938 ;; This function is called by:
  7939 ;;		_vfpfcnvrt
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text59
  7944  002E2E                     __ptext59:
  7945                           	callstack 0
  7946  002E2E                     _dtoa:
  7947                           	callstack 17
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.20/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .20/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7951                           
  7952                           ;incstack = 0
  7953  002E2E  C025  F03D         	movff	dtoa@d,dtoa@n
  7954  002E32  C026  F03E         	movff	dtoa@d+1,dtoa@n+1
  7955  002E36  C027  F03F         	movff	dtoa@d+2,dtoa@n+2
  7956  002E3A  C028  F040         	movff	dtoa@d+3,dtoa@n+3
  7957  002E3E  C029  F041         	movff	dtoa@d+4,dtoa@n+4
  7958  002E42  C02A  F042         	movff	dtoa@d+5,dtoa@n+5
  7959  002E46  C02B  F043         	movff	dtoa@d+6,dtoa@n+6
  7960  002E4A  C02C  F044         	movff	dtoa@d+7,dtoa@n+7
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7964  002E4E  AE44               	btfss	(dtoa@n+7)^0,7,c
  7965  002E50  D002               	goto	u6190
  7966  002E52  0E01               	movlw	1
  7967  002E54  D001               	goto	u6200
  7968  002E56                     u6190:
  7969  002E56  0E00               	movlw	0
  7970  002E58                     u6200:
  7971  002E58  6E3B               	movwf	dtoa@s^0,c
  7972  002E5A  6A3C               	clrf	(dtoa@s+1)^0,c
  7973                           
  7974                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7975  002E5C  503B               	movf	dtoa@s^0,w,c
  7976  002E5E  103C               	iorwf	(dtoa@s+1)^0,w,c
  7977  002E60  B4D8               	btfsc	status,2,c
  7978  002E62  D010               	goto	l6814
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7982  002E64  1E44               	comf	(dtoa@n+7)^0,f,c
  7983  002E66  1E43               	comf	(dtoa@n+6)^0,f,c
  7984  002E68  1E42               	comf	(dtoa@n+5)^0,f,c
  7985  002E6A  1E41               	comf	(dtoa@n+4)^0,f,c
  7986  002E6C  1E40               	comf	(dtoa@n+3)^0,f,c
  7987  002E6E  1E3F               	comf	(dtoa@n+2)^0,f,c
  7988  002E70  1E3E               	comf	(dtoa@n+1)^0,f,c
  7989  002E72  6C3D               	negf	dtoa@n^0,c
  7990  002E74  0E00               	movlw	0
  7991  002E76  223E               	addwfc	(dtoa@n+1)^0,f,c
  7992  002E78  223F               	addwfc	(dtoa@n+2)^0,f,c
  7993  002E7A  2240               	addwfc	(dtoa@n+3)^0,f,c
  7994  002E7C  2241               	addwfc	(dtoa@n+4)^0,f,c
  7995  002E7E  2242               	addwfc	(dtoa@n+5)^0,f,c
  7996  002E80  2243               	addwfc	(dtoa@n+6)^0,f,c
  7997  002E82  2244               	addwfc	(dtoa@n+7)^0,f,c
  7998  002E84                     l6814:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8002  002E84  AF9D               	btfss	(_prec+1)& (0+255),7,b
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8006  002E86  9256               	bcf	_flags^0,1,c
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8010  002E88  BF9D               	btfsc	(_prec+1)& (0+255),7,b
  8011  002E8A  D005               	goto	u6230
  8012  002E8C  519D               	movf	(_prec+1)& (0+255),w,b
  8013  002E8E  E108               	bnz	l2180
  8014  002E90  059C               	decf	_prec& (0+255),w,b
  8015  002E92  B0D8               	btfsc	status,0,c
  8016  002E94  D005               	goto	l2180
  8017  002E96                     u6230:
  8018                           
  8019                           ; BSR set to: 0
  8020  002E96  0E00               	movlw	0
  8021  002E98  6E38               	movwf	(dtoa@p+1)^0,c
  8022  002E9A  0E01               	movlw	1
  8023  002E9C  6E37               	movwf	dtoa@p^0,c
  8024  002E9E  D004               	goto	l2182
  8025  002EA0                     l2180:
  8026                           
  8027                           ; BSR set to: 0
  8028  002EA0  C09C  F037         	movff	_prec,dtoa@p
  8029  002EA4  C09D  F038         	movff	_prec+1,dtoa@p+1
  8030  002EA8                     l2182:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8034  002EA8  C18C  F039         	movff	_width,dtoa@w
  8035  002EAC  C18D  F03A         	movff	_width+1,dtoa@w+1
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8039  002EB0  503B               	movf	dtoa@s^0,w,c
  8040  002EB2  103C               	iorwf	(dtoa@s+1)^0,w,c
  8041  002EB4  A4D8               	btfss	status,2,c
  8042  002EB6  D002               	goto	u6250
  8043                           
  8044                           ; BSR set to: 0
  8045  002EB8  A456               	btfss	_flags^0,2,c
  8046  002EBA  D003               	goto	l6828
  8047  002EBC                     u6250:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 293:         --w;
  8051  002EBC  0639               	decf	dtoa@w^0,f,c
  8052  002EBE  A0D8               	btfss	status,0,c
  8053  002EC0  063A               	decf	(dtoa@w+1)^0,f,c
  8054  002EC2                     l6828:
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8058  002EC2  0E00               	movlw	0
  8059  002EC4  6E46               	movwf	(dtoa@i+1)^0,c
  8060  002EC6  0E1F               	movlw	31
  8061  002EC8  6E45               	movwf	dtoa@i^0,c
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8065  002ECA  0E00               	movlw	0
  8066  002ECC  0102               	movlb	2	; () banked
  8067  002ECE  6F9F               	movwf	(_dbuf+31)& (0+255),b
  8068                           
  8069                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8070  002ED0  D07C               	goto	l6842
  8071  002ED2                     l6832:
  8072                           
  8073                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 300:         --i;
  8074  002ED2  0645               	decf	dtoa@i^0,f,c
  8075  002ED4  A0D8               	btfss	status,0,c
  8076  002ED6  0646               	decf	(dtoa@i+1)^0,f,c
  8077                           
  8078                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8079  002ED8  0E80               	movlw	low _dbuf
  8080  002EDA  2445               	addwf	dtoa@i^0,w,c
  8081  002EDC  6ED9               	movwf	fsr2l,c
  8082  002EDE  0E02               	movlw	high _dbuf
  8083  002EE0  2046               	addwfc	(dtoa@i+1)^0,w,c
  8084  002EE2  6EDA               	movwf	fsr2h,c
  8085  002EE4  C03D  F006         	movff	dtoa@n,___aomod@dividend
  8086  002EE8  C03E  F007         	movff	dtoa@n+1,___aomod@dividend+1
  8087  002EEC  C03F  F008         	movff	dtoa@n+2,___aomod@dividend+2
  8088  002EF0  C040  F009         	movff	dtoa@n+3,___aomod@dividend+3
  8089  002EF4  C041  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  8090  002EF8  C042  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  8091  002EFC  C043  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  8092  002F00  C044  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  8093  002F04  0E0A               	movlw	10
  8094  002F06  6E0E               	movwf	___aomod@divisor^0,c
  8095  002F08  0E00               	movlw	0
  8096  002F0A  6E0F               	movwf	(___aomod@divisor+1)^0,c
  8097  002F0C  0E00               	movlw	0
  8098  002F0E  6E10               	movwf	(___aomod@divisor+2)^0,c
  8099  002F10  0E00               	movlw	0
  8100  002F12  6E11               	movwf	(___aomod@divisor+3)^0,c
  8101  002F14  0E00               	movlw	0
  8102  002F16  6E12               	movwf	(___aomod@divisor+4)^0,c
  8103  002F18  0E00               	movlw	0
  8104  002F1A  6E13               	movwf	(___aomod@divisor+5)^0,c
  8105  002F1C  0E00               	movlw	0
  8106  002F1E  6E14               	movwf	(___aomod@divisor+6)^0,c
  8107  002F20  0E00               	movlw	0
  8108  002F22  6E15               	movwf	(___aomod@divisor+7)^0,c
  8109  002F24  EC21  F01C         	call	___aomod	;wreg free
  8110  002F28  C006  F02D         	movff	?___aomod,??_dtoa
  8111  002F2C  C007  F02E         	movff	?___aomod+1,??_dtoa+1
  8112  002F30  C008  F02F         	movff	?___aomod+2,??_dtoa+2
  8113  002F34  C009  F030         	movff	?___aomod+3,??_dtoa+3
  8114  002F38  C00A  F031         	movff	?___aomod+4,??_dtoa+4
  8115  002F3C  C00B  F032         	movff	?___aomod+5,??_dtoa+5
  8116  002F40  C00C  F033         	movff	?___aomod+6,??_dtoa+6
  8117  002F44  C00D  F034         	movff	?___aomod+7,??_dtoa+7
  8118  002F48  C02D  F018         	movff	??_dtoa,abs@a
  8119  002F4C  C02F  F019         	movff	??_dtoa+2,abs@a+1
  8120  002F50  EC8F  F024         	call	_abs	;wreg free
  8121  002F54  5018               	movf	?_abs^0,w,c
  8122  002F56  0F30               	addlw	48
  8123  002F58  6EDF               	movwf	indf2,c
  8124                           
  8125                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 302:         --p;
  8126  002F5A  0637               	decf	dtoa@p^0,f,c
  8127  002F5C  A0D8               	btfss	status,0,c
  8128  002F5E  0638               	decf	(dtoa@p+1)^0,f,c
  8129                           
  8130                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 303:         --w;
  8131  002F60  0639               	decf	dtoa@w^0,f,c
  8132  002F62  A0D8               	btfss	status,0,c
  8133  002F64  063A               	decf	(dtoa@w+1)^0,f,c
  8134                           
  8135                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8136  002F66  C03D  F006         	movff	dtoa@n,___aodiv@dividend
  8137  002F6A  C03E  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  8138  002F6E  C03F  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  8139  002F72  C040  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  8140  002F76  C041  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  8141  002F7A  C042  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  8142  002F7E  C043  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  8143  002F82  C044  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  8144  002F86  0E0A               	movlw	10
  8145  002F88  6E0E               	movwf	___aodiv@divisor^0,c
  8146  002F8A  0E00               	movlw	0
  8147  002F8C  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  8148  002F8E  0E00               	movlw	0
  8149  002F90  6E10               	movwf	(___aodiv@divisor+2)^0,c
  8150  002F92  0E00               	movlw	0
  8151  002F94  6E11               	movwf	(___aodiv@divisor+3)^0,c
  8152  002F96  0E00               	movlw	0
  8153  002F98  6E12               	movwf	(___aodiv@divisor+4)^0,c
  8154  002F9A  0E00               	movlw	0
  8155  002F9C  6E13               	movwf	(___aodiv@divisor+5)^0,c
  8156  002F9E  0E00               	movlw	0
  8157  002FA0  6E14               	movwf	(___aodiv@divisor+6)^0,c
  8158  002FA2  0E00               	movlw	0
  8159  002FA4  6E15               	movwf	(___aodiv@divisor+7)^0,c
  8160  002FA6  ECDD  F01A         	call	___aodiv	;wreg free
  8161  002FAA  C006  F03D         	movff	?___aodiv,dtoa@n
  8162  002FAE  C007  F03E         	movff	?___aodiv+1,dtoa@n+1
  8163  002FB2  C008  F03F         	movff	?___aodiv+2,dtoa@n+2
  8164  002FB6  C009  F040         	movff	?___aodiv+3,dtoa@n+3
  8165  002FBA  C00A  F041         	movff	?___aodiv+4,dtoa@n+4
  8166  002FBE  C00B  F042         	movff	?___aodiv+5,dtoa@n+5
  8167  002FC2  C00C  F043         	movff	?___aodiv+6,dtoa@n+6
  8168  002FC6  C00D  F044         	movff	?___aodiv+7,dtoa@n+7
  8169  002FCA                     l6842:
  8170                           
  8171                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8172  002FCA  BE46               	btfsc	(dtoa@i+1)^0,7,c
  8173  002FCC  D01F               	goto	u6300
  8174  002FCE  5046               	movf	(dtoa@i+1)^0,w,c
  8175  002FD0  E103               	bnz	u6260
  8176  002FD2  0445               	decf	dtoa@i^0,w,c
  8177  002FD4  A0D8               	btfss	status,0,c
  8178  002FD6  D01A               	goto	u6300
  8179  002FD8                     u6260:
  8180  002FD8  503D               	movf	dtoa@n^0,w,c
  8181  002FDA  103E               	iorwf	(dtoa@n+1)^0,w,c
  8182  002FDC  103F               	iorwf	(dtoa@n+2)^0,w,c
  8183  002FDE  1040               	iorwf	(dtoa@n+3)^0,w,c
  8184  002FE0  1041               	iorwf	(dtoa@n+4)^0,w,c
  8185  002FE2  1042               	iorwf	(dtoa@n+5)^0,w,c
  8186  002FE4  1043               	iorwf	(dtoa@n+6)^0,w,c
  8187  002FE6  1044               	iorwf	(dtoa@n+7)^0,w,c
  8188  002FE8  A4D8               	btfss	status,2,c
  8189  002FEA  D773               	goto	l6832
  8190  002FEC  BE38               	btfsc	(dtoa@p+1)^0,7,c
  8191  002FEE  D005               	goto	u6280
  8192  002FF0  5038               	movf	(dtoa@p+1)^0,w,c
  8193  002FF2  E102               	bnz	u6281
  8194  002FF4  0437               	decf	dtoa@p^0,w,c
  8195  002FF6  B0D8               	btfsc	status,0,c
  8196  002FF8                     u6281:
  8197  002FF8  D76C               	goto	l6832
  8198  002FFA                     u6280:
  8199  002FFA  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  8200  002FFC  D007               	goto	u6300
  8201  002FFE  503A               	movf	(dtoa@w+1)^0,w,c
  8202  003000  E103               	bnz	u6290
  8203  003002  0439               	decf	dtoa@w^0,w,c
  8204  003004  A0D8               	btfss	status,0,c
  8205  003006  D002               	goto	u6300
  8206  003008                     u6290:
  8207  003008  B256               	btfsc	_flags^0,1,c
  8208  00300A  D763               	goto	l6832
  8209  00300C                     u6300:
  8210                           
  8211                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8212  00300C  503B               	movf	dtoa@s^0,w,c
  8213  00300E  103C               	iorwf	(dtoa@s+1)^0,w,c
  8214  003010  A4D8               	btfss	status,2,c
  8215  003012  D002               	goto	u6320
  8216  003014  A456               	btfss	_flags^0,2,c
  8217  003016  D018               	goto	l6866
  8218  003018                     u6320:
  8219                           
  8220                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 309:         --i;
  8221  003018  0645               	decf	dtoa@i^0,f,c
  8222  00301A  A0D8               	btfss	status,0,c
  8223  00301C  0646               	decf	(dtoa@i+1)^0,f,c
  8224                           
  8225                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8226  00301E  503B               	movf	dtoa@s^0,w,c
  8227  003020  103C               	iorwf	(dtoa@s+1)^0,w,c
  8228  003022  A4D8               	btfss	status,2,c
  8229  003024  D004               	goto	l6862
  8230  003026  0E00               	movlw	0
  8231  003028  6E36               	movwf	(_dtoa$3288+1)^0,c
  8232  00302A  0E2B               	movlw	43
  8233  00302C  D003               	goto	L10
  8234  00302E                     l6862:
  8235  00302E  0E00               	movlw	0
  8236  003030  6E36               	movwf	(_dtoa$3288+1)^0,c
  8237  003032  0E2D               	movlw	45
  8238  003034                     L10:
  8239  003034  6E35               	movwf	_dtoa$3288^0,c
  8240  003036  0E80               	movlw	low _dbuf
  8241  003038  2445               	addwf	dtoa@i^0,w,c
  8242  00303A  6ED9               	movwf	fsr2l,c
  8243  00303C  0E02               	movlw	high _dbuf
  8244  00303E  2046               	addwfc	(dtoa@i+1)^0,w,c
  8245  003040  6EDA               	movwf	fsr2h,c
  8246  003042  0060  F0D7  FFDF   	movff	_dtoa$3288,indf2
  8247  003048                     l6866:
  8248                           
  8249                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8250  003048  C023  F018         	movff	dtoa@fp,pad@fp
  8251  00304C  C024  F019         	movff	dtoa@fp+1,pad@fp+1
  8252  003050  0E80               	movlw	low _dbuf
  8253  003052  2445               	addwf	dtoa@i^0,w,c
  8254  003054  6E1A               	movwf	pad@buf^0,c
  8255  003056  0E02               	movlw	high _dbuf
  8256  003058  2046               	addwfc	(dtoa@i+1)^0,w,c
  8257  00305A  6E1B               	movwf	(pad@buf+1)^0,c
  8258  00305C  C039  F01C         	movff	dtoa@w,pad@p
  8259  003060  C03A  F01D         	movff	dtoa@w+1,pad@p+1
  8260  003064  ECBD  F020         	call	_pad	;wreg free
  8261  003068  C018  F023         	movff	?_pad,?_dtoa
  8262  00306C  C019  F024         	movff	?_pad+1,?_dtoa+1
  8263  003070  0012               	return		;funcret
  8264  003072                     __end_of_dtoa:
  8265                           	callstack 0
  8266                           
  8267 ;; *************** function _pad *****************
  8268 ;; Defined at:
  8269 ;;		line 72 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8272 ;;		 -> sprintf@f(6), NULL(0), 
  8273 ;;  buf             2   25[COMRAM] PTR unsigned char 
  8274 ;;		 -> dbuf(32), 
  8275 ;;  p               2   27[COMRAM] int 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  w               2   32[COMRAM] int 
  8278 ;;  i               2   30[COMRAM] int 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  2   23[COMRAM] int 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/2
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8288 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8289 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8291 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8292 ;;Total ram usage:       11 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    8
  8295 ;; This function calls:
  8296 ;;		_fputc
  8297 ;;		_fputs
  8298 ;;		_strlen
  8299 ;; This function is called by:
  8300 ;;		_dtoa
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text60
  8305  00417A                     __ptext60:
  8306                           	callstack 0
  8307  00417A                     _pad:
  8308                           	callstack 17
  8309                           
  8310                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.20/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8311                           
  8312                           ;incstack = 0
  8313  00417A  A056               	btfss	_flags^0,0,c
  8314  00417C  D00A               	goto	l6568
  8315                           
  8316                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8317  00417E  C01A  F011         	movff	pad@buf,fputs@s
  8318  004182  C01B  F012         	movff	pad@buf+1,fputs@s+1
  8319  004186  C018  F013         	movff	pad@fp,fputs@fp
  8320  00418A  C019  F014         	movff	pad@fp+1,fputs@fp+1
  8321  00418E  EC58  F024         	call	_fputs	;wreg free
  8322  004192                     l6568:
  8323                           
  8324                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8325  004192  BE1D               	btfsc	(pad@p+1)^0,7,c
  8326  004194  D005               	goto	l6572
  8327  004196  C01C  F021         	movff	pad@p,pad@w
  8328  00419A  C01D  F022         	movff	pad@p+1,pad@w+1
  8329  00419E  D004               	goto	l2169
  8330  0041A0                     l6572:
  8331  0041A0  0E00               	movlw	0
  8332  0041A2  6E22               	movwf	(pad@w+1)^0,c
  8333  0041A4  0E00               	movlw	0
  8334  0041A6  6E21               	movwf	pad@w^0,c
  8335  0041A8                     l2169:
  8336                           
  8337                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8338  0041A8  0E00               	movlw	0
  8339  0041AA  6E20               	movwf	(pad@i+1)^0,c
  8340  0041AC  0E00               	movlw	0
  8341  0041AE  6E1F               	movwf	pad@i^0,c
  8342                           
  8343                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8344  0041B0  D00C               	goto	l6578
  8345  0041B2                     l6574:
  8346                           
  8347                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8348  0041B2  0E00               	movlw	0
  8349  0041B4  6E09               	movwf	(fputc@c+1)^0,c
  8350  0041B6  0E20               	movlw	32
  8351  0041B8  6E08               	movwf	fputc@c^0,c
  8352  0041BA  C018  F00A         	movff	pad@fp,fputc@fp
  8353  0041BE  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  8354  0041C2  EC25  F01F         	call	_fputc	;wreg free
  8355                           
  8356                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8357  0041C6  4A1F               	infsnz	pad@i^0,f,c
  8358  0041C8  2A20               	incf	(pad@i+1)^0,f,c
  8359  0041CA                     l6578:
  8360                           
  8361                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8362  0041CA  5021               	movf	pad@w^0,w,c
  8363  0041CC  5C1F               	subwf	pad@i^0,w,c
  8364  0041CE  5020               	movf	(pad@i+1)^0,w,c
  8365  0041D0  0A80               	xorlw	128
  8366  0041D2  6E1E               	movwf	??_pad^0,c
  8367  0041D4  5022               	movf	(pad@w+1)^0,w,c
  8368  0041D6  0A80               	xorlw	128
  8369  0041D8  581E               	subwfb	??_pad^0,w,c
  8370  0041DA  A0D8               	btfss	status,0,c
  8371  0041DC  D7EA               	goto	l6574
  8372                           
  8373                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8374  0041DE  B056               	btfsc	_flags^0,0,c
  8375  0041E0  D00A               	goto	l6582
  8376                           
  8377                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8378  0041E2  C01A  F011         	movff	pad@buf,fputs@s
  8379  0041E6  C01B  F012         	movff	pad@buf+1,fputs@s+1
  8380  0041EA  C018  F013         	movff	pad@fp,fputs@fp
  8381  0041EE  C019  F014         	movff	pad@fp+1,fputs@fp+1
  8382  0041F2  EC58  F024         	call	_fputs	;wreg free
  8383  0041F6                     l6582:
  8384                           
  8385                           ;/opt/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8386  0041F6  C01A  F006         	movff	pad@buf,strlen@s
  8387  0041FA  C01B  F007         	movff	pad@buf+1,strlen@s+1
  8388  0041FE  ECCE  F022         	call	_strlen	;wreg free
  8389  004202  5021               	movf	pad@w^0,w,c
  8390  004204  2406               	addwf	?_strlen^0,w,c
  8391  004206  6E18               	movwf	?_pad^0,c
  8392  004208  5022               	movf	(pad@w+1)^0,w,c
  8393  00420A  2007               	addwfc	(?_strlen+1)^0,w,c
  8394  00420C  6E19               	movwf	(?_pad+1)^0,c
  8395  00420E  0012               	return		;funcret
  8396  004210                     __end_of_pad:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function _strlen *****************
  8400 ;; Defined at:
  8401 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/strlen.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8404 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  8405 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8406 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8407 ;;		 -> work_sw@buffer(128), 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  a               2    7[COMRAM] PTR const unsigned char 
  8410 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  8411 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8412 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8413 ;;		 -> work_sw@buffer(128), 
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  2    5[COMRAM] unsigned int 
  8416 ;; Registers used:
  8417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/1
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8427 ;;Total ram usage:        4 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    4
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_eaDogM_WriteString
  8434 ;;		_pad
  8435 ;;		_stoa
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text61
  8440  00459C                     __ptext61:
  8441                           	callstack 0
  8442  00459C                     _strlen:
  8443                           	callstack 21
  8444                           
  8445                           ;incstack = 0
  8446  00459C  C006  F008         	movff	strlen@s,strlen@a
  8447  0045A0  C007  F009         	movff	strlen@s+1,strlen@a+1
  8448  0045A4  D002               	goto	l6444
  8449  0045A6                     l6442:
  8450  0045A6  4A06               	infsnz	strlen@s^0,f,c
  8451  0045A8  2A07               	incf	(strlen@s+1)^0,f,c
  8452  0045AA                     l6444:
  8453  0045AA  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  8454  0045B0  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  8455  0045B6  0E00               	movlw	low (__smallconst shr (0+16))
  8456  0045B8  6EF8               	movwf	tblptru,c
  8457  0045BA  0E1F               	movlw	(high __ramtop+-1)
  8458  0045BC  64F7               	cpfsgt	tblptrh,c
  8459  0045BE  D003               	bra	u5597
  8460  0045C0  0008               	tblrd		*
  8461  0045C2  50F5               	movf	tablat,w,c
  8462  0045C4  D007               	bra	u5590
  8463  0045C6                     u5597:
  8464  0045C6  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8465  0045CC  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8466  0045D2  50E7               	movf	indf1,w,c
  8467  0045D4                     u5590:
  8468  0045D4  0900               	iorlw	0
  8469  0045D6  A4D8               	btfss	status,2,c
  8470  0045D8  D7E6               	goto	l6442
  8471  0045DA  5008               	movf	strlen@a^0,w,c
  8472  0045DC  5C06               	subwf	strlen@s^0,w,c
  8473  0045DE  6E06               	movwf	?_strlen^0,c
  8474  0045E0  5009               	movf	(strlen@a+1)^0,w,c
  8475  0045E2  5807               	subwfb	(strlen@s+1)^0,w,c
  8476  0045E4  6E07               	movwf	(?_strlen+1)^0,c
  8477  0045E6  0012               	return		;funcret
  8478  0045E8                     __end_of_strlen:
  8479                           	callstack 0
  8480                           
  8481 ;; *************** function _fputs *****************
  8482 ;; Defined at:
  8483 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputs.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8486 ;;		 -> dbuf(32), 
  8487 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8488 ;;		 -> sprintf@f(6), NULL(0), 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  i               2   21[COMRAM] int 
  8491 ;;  c               1   20[COMRAM] unsigned char 
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  2   16[COMRAM] int 
  8494 ;; Registers used:
  8495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/2
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8505 ;;Total ram usage:        7 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    7
  8508 ;; This function calls:
  8509 ;;		_fputc
  8510 ;; This function is called by:
  8511 ;;		_pad
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text62
  8516  0048B0                     __ptext62:
  8517                           	callstack 0
  8518  0048B0                     _fputs:
  8519                           	callstack 17
  8520                           
  8521                           ;incstack = 0
  8522  0048B0  0E00               	movlw	0
  8523  0048B2  6E17               	movwf	(fputs@i+1)^0,c
  8524  0048B4  0E00               	movlw	0
  8525  0048B6  6E16               	movwf	fputs@i^0,c
  8526  0048B8  D00B               	goto	l6456
  8527  0048BA                     l6452:
  8528  0048BA  C015  F008         	movff	fputs@c,fputc@c
  8529  0048BE  6A09               	clrf	(fputc@c+1)^0,c
  8530  0048C0  C013  F00A         	movff	fputs@fp,fputc@fp
  8531  0048C4  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  8532  0048C8  EC25  F01F         	call	_fputc	;wreg free
  8533  0048CC  4A16               	infsnz	fputs@i^0,f,c
  8534  0048CE  2A17               	incf	(fputs@i+1)^0,f,c
  8535  0048D0                     l6456:
  8536  0048D0  5016               	movf	fputs@i^0,w,c
  8537  0048D2  2411               	addwf	fputs@s^0,w,c
  8538  0048D4  6ED9               	movwf	fsr2l,c
  8539  0048D6  5017               	movf	(fputs@i+1)^0,w,c
  8540  0048D8  2012               	addwfc	(fputs@s+1)^0,w,c
  8541  0048DA  6EDA               	movwf	fsr2h,c
  8542  0048DC  50DF               	movf	indf2,w,c
  8543  0048DE  6E15               	movwf	fputs@c^0,c
  8544  0048E0  5015               	movf	fputs@c^0,w,c
  8545  0048E2  B4D8               	btfsc	status,2,c
  8546  0048E4  0012               	return	
  8547  0048E6  D7E9               	goto	l6452
  8548  0048E8                     __end_of_fputs:
  8549                           	callstack 0
  8550                           
  8551 ;; *************** function _fputc *****************
  8552 ;; Defined at:
  8553 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputc.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  c               2    7[COMRAM] int 
  8556 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8557 ;;		 -> sprintf@f(6), NULL(0), 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  2    7[COMRAM] int 
  8562 ;; Registers used:
  8563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8571 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8572 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8573 ;;Total ram usage:        9 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    6
  8576 ;; This function calls:
  8577 ;;		_putch
  8578 ;; This function is called by:
  8579 ;;		_pad
  8580 ;;		_stoa
  8581 ;;		_vfpfcnvrt
  8582 ;;		_fputs
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text63
  8587  003E4A                     __ptext63:
  8588                           	callstack 0
  8589  003E4A                     _fputc:
  8590                           	callstack 19
  8591                           
  8592                           ;incstack = 0
  8593  003E4A  500A               	movf	fputc@fp^0,w,c
  8594  003E4C  100B               	iorwf	(fputc@fp+1)^0,w,c
  8595  003E4E  B4D8               	btfsc	status,2,c
  8596  003E50  D004               	goto	u5560
  8597  003E52  500A               	movf	fputc@fp^0,w,c
  8598  003E54  100B               	iorwf	(fputc@fp+1)^0,w,c
  8599  003E56  A4D8               	btfss	status,2,c
  8600  003E58  D004               	goto	l6428
  8601  003E5A                     u5560:
  8602  003E5A  5008               	movf	fputc@c^0,w,c
  8603  003E5C  EC86  F027         	call	_putch
  8604  003E60  0012               	return	
  8605  003E62                     l6428:
  8606  003E62  EE20 F004          	lfsr	2,4
  8607  003E66  500A               	movf	fputc@fp^0,w,c
  8608  003E68  26D9               	addwf	fsr2l,f,c
  8609  003E6A  500B               	movf	(fputc@fp+1)^0,w,c
  8610  003E6C  22DA               	addwfc	fsr2h,f,c
  8611  003E6E  50DE               	movf	postinc2,w,c
  8612  003E70  10DE               	iorwf	postinc2,w,c
  8613  003E72  B4D8               	btfsc	status,2,c
  8614  003E74  D016               	goto	u5580
  8615  003E76  EE20 F004          	lfsr	2,4
  8616  003E7A  500A               	movf	fputc@fp^0,w,c
  8617  003E7C  26D9               	addwf	fsr2l,f,c
  8618  003E7E  500B               	movf	(fputc@fp+1)^0,w,c
  8619  003E80  22DA               	addwfc	fsr2h,f,c
  8620  003E82  EE10 F002          	lfsr	1,2
  8621  003E86  500A               	movf	fputc@fp^0,w,c
  8622  003E88  26E1               	addwf	fsr1l,f,c
  8623  003E8A  500B               	movf	(fputc@fp+1)^0,w,c
  8624  003E8C  22E2               	addwfc	fsr1h,f,c
  8625  003E8E  50DE               	movf	postinc2,w,c
  8626  003E90  5CE6               	subwf	postinc1,w,c
  8627  003E92  50E6               	movf	postinc1,w,c
  8628  003E94  0A80               	xorlw	128
  8629  003E96  6E10               	movwf	(??_fputc+4)^0,c
  8630  003E98  50DE               	movf	postinc2,w,c
  8631  003E9A  0A80               	xorlw	128
  8632  003E9C  5810               	subwfb	(??_fputc+4)^0,w,c
  8633  003E9E  B0D8               	btfsc	status,0,c
  8634  003EA0  0012               	return	
  8635  003EA2                     u5580:
  8636  003EA2  EE20 F002          	lfsr	2,2
  8637  003EA6  500A               	movf	fputc@fp^0,w,c
  8638  003EA8  26D9               	addwf	fsr2l,f,c
  8639  003EAA  500B               	movf	(fputc@fp+1)^0,w,c
  8640  003EAC  22DA               	addwfc	fsr2h,f,c
  8641  003EAE  006F FF78  F00C    	movff	postinc2,??_fputc
  8642  003EB4  006F FF74  F00D    	movff	postdec2,??_fputc+1
  8643  003EBA  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  8644  003EC0  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  8645  003EC6  006F FF78  F00E    	movff	postinc2,??_fputc+2
  8646  003ECC  006F FF74  F00F    	movff	postdec2,??_fputc+3
  8647  003ED2  500C               	movf	??_fputc^0,w,c
  8648  003ED4  240E               	addwf	(??_fputc+2)^0,w,c
  8649  003ED6  6ED9               	movwf	fsr2l,c
  8650  003ED8  500D               	movf	(??_fputc+1)^0,w,c
  8651  003EDA  200F               	addwfc	(??_fputc+3)^0,w,c
  8652  003EDC  6EDA               	movwf	fsr2h,c
  8653  003EDE  0060  F023  FFDF   	movff	fputc@c,indf2
  8654  003EE4  EE20 F002          	lfsr	2,2
  8655  003EE8  500A               	movf	fputc@fp^0,w,c
  8656  003EEA  26D9               	addwf	fsr2l,f,c
  8657  003EEC  500B               	movf	(fputc@fp+1)^0,w,c
  8658  003EEE  22DA               	addwfc	fsr2h,f,c
  8659  003EF0  2ADE               	incf	postinc2,f,c
  8660  003EF2  0E00               	movlw	0
  8661  003EF4  22DD               	addwfc	postdec2,f,c
  8662  003EF6  0012               	return		;funcret
  8663  003EF8                     __end_of_fputc:
  8664                           	callstack 0
  8665                           
  8666 ;; *************** function _putch *****************
  8667 ;; Defined at:
  8668 ;;		line 221 in file "mcc_generated_files/uart2.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  txData          1    wreg     unsigned char 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  txData          1    6[COMRAM] unsigned char 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      void 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 3F/39
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;Total ram usage:        1 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    5
  8689 ;; This function calls:
  8690 ;;		_UART2_Write
  8691 ;; This function is called by:
  8692 ;;		_fputc
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text64
  8697  004F0C                     __ptext64:
  8698                           	callstack 0
  8699  004F0C                     _putch:
  8700                           	callstack 19
  8701                           
  8702                           ;incstack = 0
  8703                           ;putch@txData stored from wreg
  8704  004F0C  6E07               	movwf	putch@txData^0,c
  8705                           
  8706                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  8707  004F0E  5007               	movf	putch@txData^0,w,c
  8708  004F10  ECC4  F023         	call	_UART2_Write
  8709                           
  8710                           ; BSR set to: 57
  8711  004F14  0012               	return		;funcret
  8712  004F16                     __end_of_putch:
  8713                           	callstack 0
  8714                           
  8715 ;; *************** function _UART2_Write *****************
  8716 ;; Defined at:
  8717 ;;		line 193 in file "mcc_generated_files/uart2.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  txData          1    wreg     unsigned char 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;  txData          1    5[COMRAM] unsigned char 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  1    wreg      void 
  8724 ;; Registers used:
  8725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 3F/39
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8735 ;;Total ram usage:        1 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:    4
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_putch
  8742 ;;		_Digital232_RW
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text65
  8747  004788                     __ptext65:
  8748                           	callstack 0
  8749  004788                     _UART2_Write:
  8750                           	callstack 19
  8751                           
  8752                           ; BSR set to: 57
  8753                           ;incstack = 0
  8754                           ;UART2_Write@txData stored from wreg
  8755  004788  6E06               	movwf	UART2_Write@txData^0,c
  8756  00478A                     
  8757                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8758                           
  8759                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8760  00478A  0100               	movlb	0	; () banked
  8761  00478C  51A4               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  8762  00478E  B4D8               	btfsc	status,2,c
  8763  004790  D7FC               	goto	l6398
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  8767  004792  0139               	movlb	57	; () banked
  8768  004794  B796               	btfsc	150,3,b	;volatile
  8769  004796  D004               	goto	l494
  8770                           
  8771                           ; BSR set to: 57
  8772                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  8773  004798  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  8774                           
  8775                           ;mcc_generated_files/uart2.c: 202:     }
  8776  00479E  D012               	goto	l6414
  8777  0047A0                     l494:
  8778                           
  8779                           ; BSR set to: 57
  8780                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  8781  0047A0  9796               	bcf	150,3,b	;volatile
  8782                           
  8783                           ; BSR set to: 57
  8784                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  8785  0047A2  0E42               	movlw	low _uart2TxBuffer
  8786  0047A4  0100               	movlb	0	; () banked
  8787  0047A6  25A6               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  8788  0047A8  6ED9               	movwf	fsr2l,c
  8789  0047AA  6ADA               	clrf	fsr2h,c
  8790  0047AC  0E01               	movlw	high _uart2TxBuffer
  8791  0047AE  22DA               	addwfc	fsr2h,f,c
  8792  0047B0  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  8793                           
  8794                           ; BSR set to: 0
  8795  0047B6  2BA6               	incf	_uart2TxHead& (0+255),f,b	;volatile
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  8799  0047B8  0E07               	movlw	7
  8800  0047BA  65A6               	cpfsgt	_uart2TxHead& (0+255),b
  8801  0047BC  D002               	goto	l6412
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  8805  0047BE  0E00               	movlw	0
  8806  0047C0  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  8807  0047C2                     l6412:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  8811  0047C2  07A4               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  8812  0047C4                     l6414:
  8813                           
  8814                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  8815  0047C4  0139               	movlb	57	; () banked
  8816  0047C6  8796               	bsf	150,3,b	;volatile
  8817                           
  8818                           ; BSR set to: 57
  8819  0047C8  0012               	return		;funcret
  8820  0047CA                     __end_of_UART2_Write:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _abs *****************
  8824 ;; Defined at:
  8825 ;;		line 1 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/abs.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  a               2   23[COMRAM] int 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  2   23[COMRAM] int 
  8832 ;; Registers used:
  8833 ;;		wreg, status,2, status,0
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/2
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8843 ;;Total ram usage:        4 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    4
  8846 ;; This function calls:
  8847 ;;		Nothing
  8848 ;; This function is called by:
  8849 ;;		_dtoa
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text66
  8854  00491E                     __ptext66:
  8855                           	callstack 0
  8856  00491E                     _abs:
  8857                           	callstack 21
  8858                           
  8859                           ; BSR set to: 57
  8860                           ;incstack = 0
  8861  00491E  BE19               	btfsc	(abs@a+1)^0,7,c
  8862  004920  D005               	goto	u5790
  8863  004922  5019               	movf	(abs@a+1)^0,w,c
  8864  004924  E110               	bnz	l2242
  8865  004926  0418               	decf	abs@a^0,w,c
  8866  004928  B0D8               	btfsc	status,0,c
  8867  00492A  D00D               	goto	l2242
  8868  00492C                     u5790:
  8869  00492C  C018  F01A         	movff	abs@a,??_abs
  8870  004930  C019  F01B         	movff	abs@a+1,??_abs+1
  8871  004934  1E1A               	comf	??_abs^0,f,c
  8872  004936  1E1B               	comf	(??_abs+1)^0,f,c
  8873  004938  4A1A               	infsnz	??_abs^0,f,c
  8874  00493A  2A1B               	incf	(??_abs+1)^0,f,c
  8875  00493C  C01A  F018         	movff	??_abs,?_abs
  8876  004940  C01B  F019         	movff	??_abs+1,?_abs+1
  8877  004944  0012               	return	
  8878  004946                     l2242:
  8879  004946  C018  F018         	movff	abs@a,?_abs
  8880  00494A  C019  F019         	movff	abs@a+1,?_abs+1
  8881  00494E  0012               	return		;funcret
  8882  004950                     __end_of_abs:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function ___aomod *****************
  8886 ;; Defined at:
  8887 ;;		line 9 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/aomod.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  dividend        8    5[COMRAM] long long 
  8890 ;;  divisor         8   13[COMRAM] long long 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  sign            1   22[COMRAM] unsigned char 
  8893 ;;  counter         1   21[COMRAM] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  8    5[COMRAM] long long 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/2
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8903 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8906 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8907 ;;Total ram usage:       18 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; Hardware stack levels required when called:    4
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_dtoa
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text67
  8918  003842                     __ptext67:
  8919                           	callstack 0
  8920  003842                     ___aomod:
  8921                           	callstack 21
  8922                           
  8923                           ;incstack = 0
  8924  003842  0E00               	movlw	0
  8925  003844  6E17               	movwf	___aomod@sign^0,c
  8926  003846  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  8927  003848  D012               	goto	l6536
  8928  00384A  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  8929  00384C  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  8930  00384E  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  8931  003850  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  8932  003852  1E09               	comf	(___aomod@dividend+3)^0,f,c
  8933  003854  1E08               	comf	(___aomod@dividend+2)^0,f,c
  8934  003856  1E07               	comf	(___aomod@dividend+1)^0,f,c
  8935  003858  6C06               	negf	___aomod@dividend^0,c
  8936  00385A  0E00               	movlw	0
  8937  00385C  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  8938  00385E  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  8939  003860  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  8940  003862  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  8941  003864  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  8942  003866  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  8943  003868  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  8944  00386A  0E01               	movlw	1
  8945  00386C  6E17               	movwf	___aomod@sign^0,c
  8946  00386E                     l6536:
  8947  00386E  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8948  003870  D010               	goto	l6540
  8949  003872  1E15               	comf	(___aomod@divisor+7)^0,f,c
  8950  003874  1E14               	comf	(___aomod@divisor+6)^0,f,c
  8951  003876  1E13               	comf	(___aomod@divisor+5)^0,f,c
  8952  003878  1E12               	comf	(___aomod@divisor+4)^0,f,c
  8953  00387A  1E11               	comf	(___aomod@divisor+3)^0,f,c
  8954  00387C  1E10               	comf	(___aomod@divisor+2)^0,f,c
  8955  00387E  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  8956  003880  6C0E               	negf	___aomod@divisor^0,c
  8957  003882  0E00               	movlw	0
  8958  003884  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  8959  003886  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  8960  003888  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  8961  00388A  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  8962  00388C  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  8963  00388E  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  8964  003890  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  8965  003892                     l6540:
  8966  003892  500E               	movf	___aomod@divisor^0,w,c
  8967  003894  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  8968  003896  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  8969  003898  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  8970  00389A  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  8971  00389C  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  8972  00389E  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  8973  0038A0  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  8974  0038A2  B4D8               	btfsc	status,2,c
  8975  0038A4  D03C               	goto	l6556
  8976  0038A6  0E01               	movlw	1
  8977  0038A8  6E16               	movwf	___aomod@counter^0,c
  8978  0038AA  D00A               	goto	l6546
  8979  0038AC                     l6544:
  8980  0038AC  90D8               	bcf	status,0,c
  8981  0038AE  360E               	rlcf	___aomod@divisor^0,f,c
  8982  0038B0  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  8983  0038B2  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  8984  0038B4  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  8985  0038B6  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  8986  0038B8  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  8987  0038BA  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  8988  0038BC  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  8989  0038BE  2A16               	incf	___aomod@counter^0,f,c
  8990  0038C0                     l6546:
  8991  0038C0  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8992  0038C2  D7F4               	goto	l6544
  8993  0038C4                     u5720:
  8994  0038C4  500E               	movf	___aomod@divisor^0,w,c
  8995  0038C6  5C06               	subwf	___aomod@dividend^0,w,c
  8996  0038C8  500F               	movf	(___aomod@divisor+1)^0,w,c
  8997  0038CA  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  8998  0038CC  5010               	movf	(___aomod@divisor+2)^0,w,c
  8999  0038CE  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  9000  0038D0  5011               	movf	(___aomod@divisor+3)^0,w,c
  9001  0038D2  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  9002  0038D4  5012               	movf	(___aomod@divisor+4)^0,w,c
  9003  0038D6  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  9004  0038D8  5013               	movf	(___aomod@divisor+5)^0,w,c
  9005  0038DA  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  9006  0038DC  5014               	movf	(___aomod@divisor+6)^0,w,c
  9007  0038DE  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  9008  0038E0  5015               	movf	(___aomod@divisor+7)^0,w,c
  9009  0038E2  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  9010  0038E4  A0D8               	btfss	status,0,c
  9011  0038E6  D010               	goto	l6552
  9012  0038E8  500E               	movf	___aomod@divisor^0,w,c
  9013  0038EA  5E06               	subwf	___aomod@dividend^0,f,c
  9014  0038EC  500F               	movf	(___aomod@divisor+1)^0,w,c
  9015  0038EE  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  9016  0038F0  5010               	movf	(___aomod@divisor+2)^0,w,c
  9017  0038F2  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  9018  0038F4  5011               	movf	(___aomod@divisor+3)^0,w,c
  9019  0038F6  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  9020  0038F8  5012               	movf	(___aomod@divisor+4)^0,w,c
  9021  0038FA  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  9022  0038FC  5013               	movf	(___aomod@divisor+5)^0,w,c
  9023  0038FE  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  9024  003900  5014               	movf	(___aomod@divisor+6)^0,w,c
  9025  003902  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  9026  003904  5015               	movf	(___aomod@divisor+7)^0,w,c
  9027  003906  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  9028  003908                     l6552:
  9029  003908  90D8               	bcf	status,0,c
  9030  00390A  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  9031  00390C  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  9032  00390E  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  9033  003910  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  9034  003912  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  9035  003914  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  9036  003916  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  9037  003918  320E               	rrcf	___aomod@divisor^0,f,c
  9038  00391A  2E16               	decfsz	___aomod@counter^0,f,c
  9039  00391C  D7D3               	goto	u5720
  9040  00391E                     l6556:
  9041  00391E  5017               	movf	___aomod@sign^0,w,c
  9042  003920  B4D8               	btfsc	status,2,c
  9043  003922  D010               	goto	l6560
  9044  003924  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  9045  003926  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  9046  003928  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  9047  00392A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  9048  00392C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  9049  00392E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  9050  003930  1E07               	comf	(___aomod@dividend+1)^0,f,c
  9051  003932  6C06               	negf	___aomod@dividend^0,c
  9052  003934  0E00               	movlw	0
  9053  003936  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  9054  003938  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  9055  00393A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  9056  00393C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  9057  00393E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  9058  003940  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  9059  003942  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  9060  003944                     l6560:
  9061  003944  C006  F006         	movff	___aomod@dividend,?___aomod
  9062  003948  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  9063  00394C  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  9064  003950  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  9065  003954  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  9066  003958  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  9067  00395C  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  9068  003960  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  9069  003964  0012               	return		;funcret
  9070  003966                     __end_of___aomod:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function ___aodiv *****************
  9074 ;; Defined at:
  9075 ;;		line 9 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/aodiv.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  dividend        8    5[COMRAM] long long 
  9078 ;;  divisor         8   13[COMRAM] long long 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  quotient        8   23[COMRAM] long long 
  9081 ;;  sign            1   22[COMRAM] unsigned char 
  9082 ;;  counter         1   21[COMRAM] unsigned char 
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  8    5[COMRAM] long long 
  9085 ;; Registers used:
  9086 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/2
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9092 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9093 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9095 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9096 ;;Total ram usage:       26 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:    4
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_dtoa
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text68
  9107  0035BA                     __ptext68:
  9108                           	callstack 0
  9109  0035BA                     ___aodiv:
  9110                           	callstack 21
  9111                           
  9112                           ;incstack = 0
  9113  0035BA  0E00               	movlw	0
  9114  0035BC  6E17               	movwf	___aodiv@sign^0,c
  9115  0035BE  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9116  0035C0  D012               	goto	l6492
  9117  0035C2  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  9118  0035C4  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  9119  0035C6  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  9120  0035C8  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  9121  0035CA  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  9122  0035CC  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  9123  0035CE  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  9124  0035D0  6C0E               	negf	___aodiv@divisor^0,c
  9125  0035D2  0E00               	movlw	0
  9126  0035D4  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  9127  0035D6  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  9128  0035D8  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  9129  0035DA  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  9130  0035DC  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  9131  0035DE  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  9132  0035E0  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  9133  0035E2  0E01               	movlw	1
  9134  0035E4  6E17               	movwf	___aodiv@sign^0,c
  9135  0035E6                     l6492:
  9136  0035E6  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  9137  0035E8  D012               	goto	l6498
  9138  0035EA  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  9139  0035EC  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  9140  0035EE  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  9141  0035F0  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  9142  0035F2  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  9143  0035F4  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  9144  0035F6  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  9145  0035F8  6C06               	negf	___aodiv@dividend^0,c
  9146  0035FA  0E00               	movlw	0
  9147  0035FC  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  9148  0035FE  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  9149  003600  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  9150  003602  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  9151  003604  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  9152  003606  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  9153  003608  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  9154  00360A  0E01               	movlw	1
  9155  00360C  1A17               	xorwf	___aodiv@sign^0,f,c
  9156  00360E                     l6498:
  9157  00360E  EE20  F018         	lfsr	2,___aodiv@quotient
  9158  003612  0E07               	movlw	7
  9159  003614                     u5641:
  9160  003614  6ADE               	clrf	postinc2,c
  9161  003616  06E8               	decf	wreg,f,c
  9162  003618  E2FD               	bc	u5641
  9163  00361A  500E               	movf	___aodiv@divisor^0,w,c
  9164  00361C  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  9165  00361E  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  9166  003620  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  9167  003622  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  9168  003624  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  9169  003626  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  9170  003628  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  9171  00362A  B4D8               	btfsc	status,2,c
  9172  00362C  D046               	goto	l6520
  9173  00362E  0E01               	movlw	1
  9174  003630  6E16               	movwf	___aodiv@counter^0,c
  9175  003632  D00A               	goto	l6506
  9176  003634                     l6504:
  9177  003634  90D8               	bcf	status,0,c
  9178  003636  360E               	rlcf	___aodiv@divisor^0,f,c
  9179  003638  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  9180  00363A  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  9181  00363C  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  9182  00363E  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  9183  003640  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  9184  003642  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  9185  003644  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  9186  003646  2A16               	incf	___aodiv@counter^0,f,c
  9187  003648                     l6506:
  9188  003648  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9189  00364A  D7F4               	goto	l6504
  9190  00364C                     u5660:
  9191  00364C  90D8               	bcf	status,0,c
  9192  00364E  3618               	rlcf	___aodiv@quotient^0,f,c
  9193  003650  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  9194  003652  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  9195  003654  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  9196  003656  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  9197  003658  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  9198  00365A  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  9199  00365C  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  9200  00365E  500E               	movf	___aodiv@divisor^0,w,c
  9201  003660  5C06               	subwf	___aodiv@dividend^0,w,c
  9202  003662  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9203  003664  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  9204  003666  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9205  003668  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  9206  00366A  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9207  00366C  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  9208  00366E  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9209  003670  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  9210  003672  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9211  003674  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  9212  003676  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9213  003678  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  9214  00367A  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9215  00367C  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  9216  00367E  A0D8               	btfss	status,0,c
  9217  003680  D011               	goto	l6516
  9218  003682  500E               	movf	___aodiv@divisor^0,w,c
  9219  003684  5E06               	subwf	___aodiv@dividend^0,f,c
  9220  003686  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9221  003688  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  9222  00368A  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9223  00368C  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  9224  00368E  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9225  003690  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  9226  003692  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9227  003694  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  9228  003696  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9229  003698  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  9230  00369A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9231  00369C  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  9232  00369E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9233  0036A0  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  9234  0036A2  8018               	bsf	___aodiv@quotient^0,0,c
  9235  0036A4                     l6516:
  9236  0036A4  90D8               	bcf	status,0,c
  9237  0036A6  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  9238  0036A8  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  9239  0036AA  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  9240  0036AC  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  9241  0036AE  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  9242  0036B0  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  9243  0036B2  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  9244  0036B4  320E               	rrcf	___aodiv@divisor^0,f,c
  9245  0036B6  2E16               	decfsz	___aodiv@counter^0,f,c
  9246  0036B8  D7C9               	goto	u5660
  9247  0036BA                     l6520:
  9248  0036BA  5017               	movf	___aodiv@sign^0,w,c
  9249  0036BC  B4D8               	btfsc	status,2,c
  9250  0036BE  D010               	goto	l6524
  9251  0036C0  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  9252  0036C2  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  9253  0036C4  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  9254  0036C6  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  9255  0036C8  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  9256  0036CA  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  9257  0036CC  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  9258  0036CE  6C18               	negf	___aodiv@quotient^0,c
  9259  0036D0  0E00               	movlw	0
  9260  0036D2  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  9261  0036D4  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  9262  0036D6  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  9263  0036D8  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  9264  0036DA  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  9265  0036DC  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  9266  0036DE  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  9267  0036E0                     l6524:
  9268  0036E0  C018  F006         	movff	___aodiv@quotient,?___aodiv
  9269  0036E4  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  9270  0036E8  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  9271  0036EC  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  9272  0036F0  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  9273  0036F4  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  9274  0036F8  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  9275  0036FC  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  9276  003700  0012               	return		;funcret
  9277  003702                     __end_of___aodiv:
  9278                           	callstack 0
  9279                           
  9280 ;; *************** function _calc_pot *****************
  9281 ;; Defined at:
  9282 ;;		line 57 in file "d232.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  value           2   26[BANK0 ] unsigned short 
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  2   26[BANK0 ] short 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 3F/3E
  9293 ;;		On exit  : 3F/1
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9298 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9299 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9300 ;;Total ram usage:        4 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    7
  9303 ;; This function calls:
  9304 ;;		___flmul
  9305 ;;		___fltol
  9306 ;;		___xxtofl
  9307 ;;		_lp_filter
  9308 ;; This function is called by:
  9309 ;;		_Digital232_RW
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           	psect	text69
  9314  003966                     __ptext69:
  9315                           	callstack 0
  9316  003966                     _calc_pot:
  9317                           	callstack 22
  9318                           
  9319                           ; BSR set to: 62
  9320                           ;d232.c: 57: int16_t calc_pot(adc_result_t value);d232.c: 58: {;d232.c: 59:  if (value <
      +                           otto_b1.offset)
  9321                           
  9322                           ;incstack = 0
  9323  003966  0101               	movlb	1	; () banked
  9324  003968  51D2               	movf	_otto_b1& (0+255),w,b
  9325  00396A  0100               	movlb	0	; () banked
  9326  00396C  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9327  00396E  0101               	movlb	1	; () banked
  9328  003970  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9329  003972  0100               	movlb	0	; () banked
  9330  003974  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9331  003976  B0D8               	btfsc	status,0,c
  9332  003978  D004               	goto	l7714
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;d232.c: 60:   value = otto_b1.offset;
  9336  00397A  C1D2  F07A         	movff	_otto_b1,calc_pot@value
  9337  00397E  C1D3  F07B         	movff	_otto_b1+1,calc_pot@value+1
  9338  003982                     l7714:
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;d232.c: 61:  otto_b1.result = (adc_result_t) ((float) (value - otto_b1.offset) * otto_b
      +                          1.scalar);
  9342  003982  C1D8  F01A         	movff	_otto_b1+6,___flmul@a
  9343  003986  C1D9  F01B         	movff	_otto_b1+7,___flmul@a+1
  9344  00398A  C1DA  F01C         	movff	_otto_b1+8,___flmul@a+2
  9345  00398E  C1DB  F01D         	movff	_otto_b1+9,___flmul@a+3
  9346  003992  0101               	movlb	1	; () banked
  9347  003994  51D2               	movf	_otto_b1& (0+255),w,b
  9348  003996  0100               	movlb	0	; () banked
  9349  003998  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9350  00399A  6F7C               	movwf	??_calc_pot& (0+255),b
  9351  00399C  0101               	movlb	1	; () banked
  9352  00399E  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9353  0039A0  0100               	movlb	0	; () banked
  9354  0039A2  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9355  0039A4  6F7D               	movwf	(??_calc_pot+1)& (0+255),b
  9356  0039A6  C07C  F006         	movff	??_calc_pot,___xxtofl@val
  9357  0039AA  C07D  F007         	movff	??_calc_pot+1,___xxtofl@val+1
  9358  0039AE  6A08               	clrf	(___xxtofl@val+2)^0,c
  9359  0039B0  6A09               	clrf	(___xxtofl@val+3)^0,c
  9360  0039B2  0E00               	movlw	0
  9361  0039B4  EC81  F01B         	call	___xxtofl
  9362  0039B8  C006  F016         	movff	?___xxtofl,___flmul@b
  9363  0039BC  C007  F017         	movff	?___xxtofl+1,___flmul@b+1
  9364  0039C0  C008  F018         	movff	?___xxtofl+2,___flmul@b+2
  9365  0039C4  C009  F019         	movff	?___xxtofl+3,___flmul@b+3
  9366  0039C8  EC28  F010         	call	___flmul	;wreg free
  9367  0039CC  C016  F074         	movff	?___flmul,___fltol@f1
  9368  0039D0  C017  F075         	movff	?___flmul+1,___fltol@f1+1
  9369  0039D4  C018  F076         	movff	?___flmul+2,___fltol@f1+2
  9370  0039D8  C019  F077         	movff	?___flmul+3,___fltol@f1+3
  9371  0039DC  EC14  F01E         	call	___fltol	;wreg free
  9372  0039E0  C074  F1DE         	movff	?___fltol,_otto_b1+12
  9373  0039E4  C075  F1DF         	movff	?___fltol+1,_otto_b1+13
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;d232.c: 62:  otto_b1.result = -127 + otto_b1.result + (int8_t) lp_filter((float) IO.rnd
      +                          , 0, 1);
  9377  0039E8  0E00               	movlw	0
  9378  0039EA  6F67               	movwf	(lp_filter@slow+1)& (0+255),b
  9379  0039EC  0E01               	movlw	1
  9380  0039EE  6F66               	movwf	lp_filter@slow& (0+255),b
  9381  0039F0  0E00               	movlw	0
  9382  0039F2  6F65               	movwf	(lp_filter@bn+1)& (0+255),b
  9383  0039F4  0E00               	movlw	0
  9384  0039F6  6F64               	movwf	lp_filter@bn& (0+255),b
  9385  0039F8  0101               	movlb	1	; () banked
  9386  0039FA  51D1               	movf	(_IO+40)& (0+255),w,b
  9387  0039FC  6E06               	movwf	___xxtofl@val^0,c
  9388  0039FE  0E00               	movlw	0
  9389  003A00  BE06               	btfsc	___xxtofl@val^0,7,c
  9390  003A02  0EFF               	movlw	-1
  9391  003A04  6E07               	movwf	(___xxtofl@val+1)^0,c
  9392  003A06  6E08               	movwf	(___xxtofl@val+2)^0,c
  9393  003A08  6E09               	movwf	(___xxtofl@val+3)^0,c
  9394  003A0A  0E01               	movlw	1
  9395  003A0C  EC81  F01B         	call	___xxtofl
  9396  003A10  C006  F060         	movff	?___xxtofl,lp_filter@new
  9397  003A14  C007  F061         	movff	?___xxtofl+1,lp_filter@new+1
  9398  003A18  C008  F062         	movff	?___xxtofl+2,lp_filter@new+2
  9399  003A1C  C009  F063         	movff	?___xxtofl+3,lp_filter@new+3
  9400  003A20  ECEF  F015         	call	_lp_filter	;wreg free
  9401  003A24  C060  F074         	movff	?_lp_filter,___fltol@f1
  9402  003A28  C061  F075         	movff	?_lp_filter+1,___fltol@f1+1
  9403  003A2C  C062  F076         	movff	?_lp_filter+2,___fltol@f1+2
  9404  003A30  C063  F077         	movff	?_lp_filter+3,___fltol@f1+3
  9405  003A34  EC14  F01E         	call	___fltol	;wreg free
  9406  003A38  5174               	movf	?___fltol& (0+255),w,b
  9407  003A3A  6F7C               	movwf	??_calc_pot& (0+255),b
  9408  003A3C  6B7D               	clrf	(??_calc_pot+1)& (0+255),b
  9409  003A3E  BF7C               	btfsc	??_calc_pot& (0+255),7,b
  9410  003A40  077D               	decf	(??_calc_pot+1)& (0+255),f,b
  9411  003A42  0101               	movlb	1	; () banked
  9412  003A44  51DE               	movf	(_otto_b1+12)& (0+255),w,b
  9413  003A46  0100               	movlb	0	; () banked
  9414  003A48  277C               	addwf	??_calc_pot& (0+255),f,b
  9415  003A4A  0101               	movlb	1	; () banked
  9416  003A4C  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  9417  003A4E  0100               	movlb	0	; () banked
  9418  003A50  237D               	addwfc	(??_calc_pot+1)& (0+255),f,b
  9419  003A52  0E81               	movlw	129
  9420  003A54  257C               	addwf	??_calc_pot& (0+255),w,b
  9421  003A56  0101               	movlb	1	; () banked
  9422  003A58  6FDE               	movwf	(_otto_b1+12)& (0+255),b
  9423  003A5A  0EFF               	movlw	255
  9424  003A5C  0100               	movlb	0	; () banked
  9425  003A5E  217D               	addwfc	(??_calc_pot+1)& (0+255),w,b
  9426  003A60  0101               	movlb	1	; () banked
  9427  003A62  6FDF               	movwf	(_otto_b1+13)& (0+255),b
  9428                           
  9429                           ; BSR set to: 1
  9430  003A64  0012               	return		;funcret
  9431  003A66                     __end_of_calc_pot:
  9432                           	callstack 0
  9433                           
  9434 ;; *************** function _lp_filter *****************
  9435 ;; Defined at:
  9436 ;;		line 36 in file "d232.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  new             4    0[BANK0 ] float 
  9439 ;;  bn              2    4[BANK0 ] short 
  9440 ;;  slow            2    6[BANK0 ] short 
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  lp_x            4   16[BANK0 ] float 
  9443 ;;  lp_speed        4   12[BANK0 ] float 
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  4    0[BANK0 ] float 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/1
  9450 ;;		On exit  : 3F/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9454 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9456 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9457 ;;Total ram usage:       22 bytes
  9458 ;; Hardware stack levels used:    1
  9459 ;; Hardware stack levels required when called:    6
  9460 ;; This function calls:
  9461 ;;		___fladd
  9462 ;;		___fldiv
  9463 ;;		___flmul
  9464 ;;		___flsub
  9465 ;; This function is called by:
  9466 ;;		_calc_pot
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           	psect	text70
  9471  002BDE                     __ptext70:
  9472                           	callstack 0
  9473  002BDE                     _lp_filter:
  9474                           	callstack 22
  9475                           
  9476                           ;d232.c: 36: float lp_filter(float new, int16_t bn, int16_t slow);d232.c: 37: {;d232.c: 
      +                          38:  float lp_speed, lp_x;;d232.c: 39:  static float smooth[8];;d232.c: 41:  if (bn > 7)
  9477                           
  9478                           ; BSR set to: 1
  9479                           ;incstack = 0
  9480  002BDE  0100               	movlb	0	; () banked
  9481  002BE0  BF65               	btfsc	(lp_filter@bn+1)& (0+255),7,b
  9482  002BE2  D00F               	goto	l7324
  9483  002BE4  5165               	movf	(lp_filter@bn+1)& (0+255),w,b
  9484  002BE6  E104               	bnz	u6970
  9485  002BE8  0E08               	movlw	8
  9486  002BEA  5D64               	subwf	lp_filter@bn& (0+255),w,b
  9487  002BEC  A0D8               	btfss	status,0,c
  9488  002BEE  D009               	goto	l7324
  9489  002BF0                     u6970:
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;d232.c: 42:   return new;
  9493  002BF0  C060  F060         	movff	lp_filter@new,?_lp_filter
  9494  002BF4  C061  F061         	movff	lp_filter@new+1,?_lp_filter+1
  9495  002BF8  C062  F062         	movff	lp_filter@new+2,?_lp_filter+2
  9496  002BFC  C063  F063         	movff	lp_filter@new+3,?_lp_filter+3
  9497  002C00  0012               	return	
  9498  002C02                     l7324:
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;d232.c: 43:  if (slow) {
  9502  002C02  5166               	movf	lp_filter@slow& (0+255),w,b
  9503  002C04  1167               	iorwf	(lp_filter@slow+1)& (0+255),w,b
  9504  002C06  B4D8               	btfsc	status,2,c
  9505  002C08  D008               	goto	l7328
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;d232.c: 44:   lp_speed = 0.01;
  9509  002C0A  0E0A               	movlw	10
  9510  002C0C  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9511  002C0E  0ED7               	movlw	215
  9512  002C10  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9513  002C12  0E23               	movlw	35
  9514  002C14  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9515  002C16  0E3C               	movlw	60
  9516  002C18  D007               	goto	L11
  9517  002C1A                     l7328:
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;d232.c: 46:   lp_speed = 0.250;
  9521  002C1A  0E00               	movlw	0
  9522  002C1C  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9523  002C1E  0E00               	movlw	0
  9524  002C20  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9525  002C22  0E80               	movlw	128
  9526  002C24  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9527  002C26  0E3E               	movlw	62
  9528  002C28                     L11:
  9529  002C28  6F6F               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9533  002C2A  0E00               	movlw	0
  9534  002C2C  6E1A               	movwf	___flmul@a^0,c
  9535  002C2E  0E00               	movlw	0
  9536  002C30  6E1B               	movwf	(___flmul@a+1)^0,c
  9537  002C32  0EC8               	movlw	200
  9538  002C34  6E1C               	movwf	(___flmul@a+2)^0,c
  9539  002C36  0E42               	movlw	66
  9540  002C38  6E1D               	movwf	(___flmul@a+3)^0,c
  9541  002C3A  0E00               	movlw	low lp_filter@smooth
  9542  002C3C  6E50               	movwf	??_lp_filter^0,c
  9543  002C3E  0E01               	movlw	high lp_filter@smooth
  9544  002C40  6E51               	movwf	(??_lp_filter+1)^0,c
  9545  002C42  90D8               	bcf	status,0,c
  9546  002C44  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9547  002C46  6ED9               	movwf	fsr2l,c
  9548  002C48  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9549  002C4A  6EDA               	movwf	fsr2h,c
  9550  002C4C  90D8               	bcf	status,0,c
  9551  002C4E  36D9               	rlcf	fsr2l,f,c
  9552  002C50  36DA               	rlcf	fsr2h,f,c
  9553  002C52  5050               	movf	??_lp_filter^0,w,c
  9554  002C54  26D9               	addwf	fsr2l,f,c
  9555  002C56  5051               	movf	(??_lp_filter+1)^0,w,c
  9556  002C58  22DA               	addwfc	fsr2h,f,c
  9557  002C5A  006F FF78  F016    	movff	postinc2,___flmul@b
  9558  002C60  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9559  002C66  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9560  002C6C  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9561  002C72  EC28  F010         	call	___flmul	;wreg free
  9562  002C76  C016  F033         	movff	?___flmul,___flsub@a
  9563  002C7A  C017  F034         	movff	?___flmul+1,___flsub@a+1
  9564  002C7E  C018  F035         	movff	?___flmul+2,___flsub@a+2
  9565  002C82  C019  F036         	movff	?___flmul+3,___flsub@a+3
  9566  002C86  0E00               	movlw	0
  9567  002C88  6E1A               	movwf	___flmul@a^0,c
  9568  002C8A  0E00               	movlw	0
  9569  002C8C  6E1B               	movwf	(___flmul@a+1)^0,c
  9570  002C8E  0EC8               	movlw	200
  9571  002C90  6E1C               	movwf	(___flmul@a+2)^0,c
  9572  002C92  0E42               	movlw	66
  9573  002C94  6E1D               	movwf	(___flmul@a+3)^0,c
  9574  002C96  C060  F016         	movff	lp_filter@new,___flmul@b
  9575  002C9A  C061  F017         	movff	lp_filter@new+1,___flmul@b+1
  9576  002C9E  C062  F018         	movff	lp_filter@new+2,___flmul@b+2
  9577  002CA2  C063  F019         	movff	lp_filter@new+3,___flmul@b+3
  9578  002CA6  EC28  F010         	call	___flmul	;wreg free
  9579  002CAA  C016  F02F         	movff	?___flmul,___flsub@b
  9580  002CAE  C017  F030         	movff	?___flmul+1,___flsub@b+1
  9581  002CB2  C018  F031         	movff	?___flmul+2,___flsub@b+2
  9582  002CB6  C019  F032         	movff	?___flmul+3,___flsub@b+3
  9583  002CBA  EC3D  F023         	call	___flsub	;wreg free
  9584  002CBE  C02F  F068         	movff	?___flsub,_lp_filter$3840
  9585  002CC2  C030  F069         	movff	?___flsub+1,_lp_filter$3840+1
  9586  002CC6  C031  F06A         	movff	?___flsub+2,_lp_filter$3840+2
  9587  002CCA  C032  F06B         	movff	?___flsub+3,_lp_filter$3840+3
  9588                           
  9589                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9590  002CCE  C06C  F01A         	movff	lp_filter@lp_speed,___flmul@a
  9591  002CD2  C06D  F01B         	movff	lp_filter@lp_speed+1,___flmul@a+1
  9592  002CD6  C06E  F01C         	movff	lp_filter@lp_speed+2,___flmul@a+2
  9593  002CDA  C06F  F01D         	movff	lp_filter@lp_speed+3,___flmul@a+3
  9594  002CDE  C068  F016         	movff	_lp_filter$3840,___flmul@b
  9595  002CE2  C069  F017         	movff	_lp_filter$3840+1,___flmul@b+1
  9596  002CE6  C06A  F018         	movff	_lp_filter$3840+2,___flmul@b+2
  9597  002CEA  C06B  F019         	movff	_lp_filter$3840+3,___flmul@b+3
  9598  002CEE  EC28  F010         	call	___flmul	;wreg free
  9599  002CF2  C016  F00A         	movff	?___flmul,___fladd@a
  9600  002CF6  C017  F00B         	movff	?___flmul+1,___fladd@a+1
  9601  002CFA  C018  F00C         	movff	?___flmul+2,___fladd@a+2
  9602  002CFE  C019  F00D         	movff	?___flmul+3,___fladd@a+3
  9603  002D02  0E00               	movlw	0
  9604  002D04  6E1A               	movwf	___flmul@a^0,c
  9605  002D06  0E00               	movlw	0
  9606  002D08  6E1B               	movwf	(___flmul@a+1)^0,c
  9607  002D0A  0EC8               	movlw	200
  9608  002D0C  6E1C               	movwf	(___flmul@a+2)^0,c
  9609  002D0E  0E42               	movlw	66
  9610  002D10  6E1D               	movwf	(___flmul@a+3)^0,c
  9611  002D12  0E00               	movlw	low lp_filter@smooth
  9612  002D14  6E50               	movwf	??_lp_filter^0,c
  9613  002D16  0E01               	movlw	high lp_filter@smooth
  9614  002D18  6E51               	movwf	(??_lp_filter+1)^0,c
  9615  002D1A  90D8               	bcf	status,0,c
  9616  002D1C  0100               	movlb	0	; () banked
  9617  002D1E  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9618  002D20  6ED9               	movwf	fsr2l,c
  9619  002D22  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9620  002D24  6EDA               	movwf	fsr2h,c
  9621  002D26  90D8               	bcf	status,0,c
  9622  002D28  36D9               	rlcf	fsr2l,f,c
  9623  002D2A  36DA               	rlcf	fsr2h,f,c
  9624  002D2C  5050               	movf	??_lp_filter^0,w,c
  9625  002D2E  26D9               	addwf	fsr2l,f,c
  9626  002D30  5051               	movf	(??_lp_filter+1)^0,w,c
  9627  002D32  22DA               	addwfc	fsr2h,f,c
  9628  002D34  006F FF78  F016    	movff	postinc2,___flmul@b
  9629  002D3A  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9630  002D40  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9631  002D46  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9632  002D4C  EC28  F010         	call	___flmul	;wreg free
  9633  002D50  C016  F006         	movff	?___flmul,___fladd@b
  9634  002D54  C017  F007         	movff	?___flmul+1,___fladd@b+1
  9635  002D58  C018  F008         	movff	?___flmul+2,___fladd@b+2
  9636  002D5C  C019  F009         	movff	?___flmul+3,___fladd@b+3
  9637  002D60  ECD0  F011         	call	___fladd	;wreg free
  9638  002D64  C006  F037         	movff	?___fladd,___fldiv@b
  9639  002D68  C007  F038         	movff	?___fladd+1,___fldiv@b+1
  9640  002D6C  C008  F039         	movff	?___fladd+2,___fldiv@b+2
  9641  002D70  C009  F03A         	movff	?___fladd+3,___fldiv@b+3
  9642  002D74  0E00               	movlw	0
  9643  002D76  6E3B               	movwf	___fldiv@a^0,c
  9644  002D78  0E00               	movlw	0
  9645  002D7A  6E3C               	movwf	(___fldiv@a+1)^0,c
  9646  002D7C  0EC8               	movlw	200
  9647  002D7E  6E3D               	movwf	(___fldiv@a+2)^0,c
  9648  002D80  0E42               	movlw	66
  9649  002D82  6E3E               	movwf	(___fldiv@a+3)^0,c
  9650  002D84  ECAB  F014         	call	___fldiv	;wreg free
  9651  002D88  C037  F070         	movff	?___fldiv,lp_filter@lp_x
  9652  002D8C  C038  F071         	movff	?___fldiv+1,lp_filter@lp_x+1
  9653  002D90  C039  F072         	movff	?___fldiv+2,lp_filter@lp_x+2
  9654  002D94  C03A  F073         	movff	?___fldiv+3,lp_filter@lp_x+3
  9655                           
  9656                           ;d232.c: 49:  smooth[bn] = lp_x;
  9657  002D98  0E00               	movlw	low lp_filter@smooth
  9658  002D9A  6E50               	movwf	??_lp_filter^0,c
  9659  002D9C  0E01               	movlw	high lp_filter@smooth
  9660  002D9E  6E51               	movwf	(??_lp_filter+1)^0,c
  9661  002DA0  90D8               	bcf	status,0,c
  9662  002DA2  0100               	movlb	0	; () banked
  9663  002DA4  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9664  002DA6  6ED9               	movwf	fsr2l,c
  9665  002DA8  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9666  002DAA  6EDA               	movwf	fsr2h,c
  9667  002DAC  90D8               	bcf	status,0,c
  9668  002DAE  36D9               	rlcf	fsr2l,f,c
  9669  002DB0  36DA               	rlcf	fsr2h,f,c
  9670  002DB2  5050               	movf	??_lp_filter^0,w,c
  9671  002DB4  26D9               	addwf	fsr2l,f,c
  9672  002DB6  5051               	movf	(??_lp_filter+1)^0,w,c
  9673  002DB8  22DA               	addwfc	fsr2h,f,c
  9674  002DBA  0060  F1C3  FFDE   	movff	lp_filter@lp_x,postinc2
  9675  002DC0  0060  F1C7  FFDE   	movff	lp_filter@lp_x+1,postinc2
  9676  002DC6  0060  F1CB  FFDE   	movff	lp_filter@lp_x+2,postinc2
  9677  002DCC  0060  F1CF  FFDE   	movff	lp_filter@lp_x+3,postinc2
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;d232.c: 50:  if (slow == (-1)) {
  9681  002DD2  2966               	incf	lp_filter@slow& (0+255),w,b
  9682  002DD4  E123               	bnz	l7342
  9683  002DD6  2967               	incf	(lp_filter@slow+1)& (0+255),w,b
  9684  002DD8  A4D8               	btfss	status,2,c
  9685  002DDA  D020               	goto	l7342
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;d232.c: 51:   lp_x = 0.0;
  9689  002DDC  0E00               	movlw	0
  9690  002DDE  6F70               	movwf	lp_filter@lp_x& (0+255),b
  9691  002DE0  0E00               	movlw	0
  9692  002DE2  6F71               	movwf	(lp_filter@lp_x+1)& (0+255),b
  9693  002DE4  0E00               	movlw	0
  9694  002DE6  6F72               	movwf	(lp_filter@lp_x+2)& (0+255),b
  9695  002DE8  0E00               	movlw	0
  9696  002DEA  6F73               	movwf	(lp_filter@lp_x+3)& (0+255),b
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;d232.c: 52:   smooth[bn] = 0.0;
  9700  002DEC  0E00               	movlw	low lp_filter@smooth
  9701  002DEE  6E50               	movwf	??_lp_filter^0,c
  9702  002DF0  0E01               	movlw	high lp_filter@smooth
  9703  002DF2  6E51               	movwf	(??_lp_filter+1)^0,c
  9704  002DF4  90D8               	bcf	status,0,c
  9705  002DF6  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9706  002DF8  6ED9               	movwf	fsr2l,c
  9707  002DFA  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9708  002DFC  6EDA               	movwf	fsr2h,c
  9709  002DFE  90D8               	bcf	status,0,c
  9710  002E00  36D9               	rlcf	fsr2l,f,c
  9711  002E02  36DA               	rlcf	fsr2h,f,c
  9712  002E04  5050               	movf	??_lp_filter^0,w,c
  9713  002E06  26D9               	addwf	fsr2l,f,c
  9714  002E08  5051               	movf	(??_lp_filter+1)^0,w,c
  9715  002E0A  22DA               	addwfc	fsr2h,f,c
  9716  002E0C  0E00               	movlw	0
  9717  002E0E  6EDE               	movwf	postinc2,c
  9718  002E10  0E00               	movlw	0
  9719  002E12  6EDE               	movwf	postinc2,c
  9720  002E14  0E00               	movlw	0
  9721  002E16  6EDE               	movwf	postinc2,c
  9722  002E18  0E00               	movlw	0
  9723  002E1A  6EDD               	movwf	postdec2,c
  9724  002E1C                     l7342:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;d232.c: 54:  return lp_x;
  9728  002E1C  C070  F060         	movff	lp_filter@lp_x,?_lp_filter
  9729  002E20  C071  F061         	movff	lp_filter@lp_x+1,?_lp_filter+1
  9730  002E24  C072  F062         	movff	lp_filter@lp_x+2,?_lp_filter+2
  9731  002E28  C073  F063         	movff	lp_filter@lp_x+3,?_lp_filter+3
  9732                           
  9733                           ; BSR set to: 0
  9734  002E2C  0012               	return		;funcret
  9735  002E2E                     __end_of_lp_filter:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function ___flsub *****************
  9739 ;; Defined at:
  9740 ;;		line 245 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/sprcadd.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  b               4   46[COMRAM] float 
  9743 ;;  a               4   50[COMRAM] float 
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;		None
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  4   46[COMRAM] float 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0, cstack
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9755 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9758 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9759 ;;Total ram usage:        8 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    5
  9762 ;; This function calls:
  9763 ;;		___fladd
  9764 ;; This function is called by:
  9765 ;;		_lp_filter
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text71
  9770  00467A                     __ptext71:
  9771                           	callstack 0
  9772  00467A                     ___flsub:
  9773                           	callstack 22
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;incstack = 0
  9777  00467A  0E00               	movlw	0
  9778  00467C  1A33               	xorwf	___flsub@a^0,f,c
  9779  00467E  0E00               	movlw	0
  9780  004680  1A34               	xorwf	(___flsub@a+1)^0,f,c
  9781  004682  0E00               	movlw	0
  9782  004684  1A35               	xorwf	(___flsub@a+2)^0,f,c
  9783  004686  0E80               	movlw	128
  9784  004688  1A36               	xorwf	(___flsub@a+3)^0,f,c
  9785  00468A  C02F  F006         	movff	___flsub@b,___fladd@b
  9786  00468E  C030  F007         	movff	___flsub@b+1,___fladd@b+1
  9787  004692  C031  F008         	movff	___flsub@b+2,___fladd@b+2
  9788  004696  C032  F009         	movff	___flsub@b+3,___fladd@b+3
  9789  00469A  C033  F00A         	movff	___flsub@a,___fladd@a
  9790  00469E  C034  F00B         	movff	___flsub@a+1,___fladd@a+1
  9791  0046A2  C035  F00C         	movff	___flsub@a+2,___fladd@a+2
  9792  0046A6  C036  F00D         	movff	___flsub@a+3,___fladd@a+3
  9793  0046AA  ECD0  F011         	call	___fladd	;wreg free
  9794  0046AE  C006  F02F         	movff	?___fladd,?___flsub
  9795  0046B2  C007  F030         	movff	?___fladd+1,?___flsub+1
  9796  0046B6  C008  F031         	movff	?___fladd+2,?___flsub+2
  9797  0046BA  C009  F032         	movff	?___fladd+3,?___flsub+3
  9798  0046BE  0012               	return		;funcret
  9799  0046C0                     __end_of___flsub:
  9800                           	callstack 0
  9801                           
  9802 ;; *************** function ___fladd *****************
  9803 ;; Defined at:
  9804 ;;		line 10 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/sprcadd.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  b               4    5[COMRAM] float 
  9807 ;;  a               4    9[COMRAM] float 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  grs             1   20[COMRAM] unsigned char 
  9810 ;;  bexp            1   19[COMRAM] unsigned char 
  9811 ;;  aexp            1   18[COMRAM] unsigned char 
  9812 ;;  signs           1   17[COMRAM] unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  4    5[COMRAM] unsigned char 
  9815 ;; Registers used:
  9816 ;;		wreg, status,2, status,0
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9822 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9825 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9826 ;;Total ram usage:       16 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    4
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_lp_filter
  9833 ;;		___flsub
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           	psect	text72
  9838  0023A0                     __ptext72:
  9839                           	callstack 0
  9840  0023A0                     ___fladd:
  9841                           	callstack 22
  9842                           
  9843                           ;incstack = 0
  9844  0023A0  5009               	movf	(___fladd@b+3)^0,w,c
  9845  0023A2  0B80               	andlw	128
  9846  0023A4  6E12               	movwf	___fladd@signs^0,c
  9847  0023A6  5009               	movf	(___fladd@b+3)^0,w,c
  9848  0023A8  2409               	addwf	(___fladd@b+3)^0,w,c
  9849  0023AA  6E14               	movwf	___fladd@bexp^0,c
  9850  0023AC  BE08               	btfsc	(___fladd@b+2)^0,7,c
  9851  0023AE  8014               	bsf	___fladd@bexp^0,0,c
  9852  0023B0  5014               	movf	___fladd@bexp^0,w,c
  9853  0023B2  B4D8               	btfsc	status,2,c
  9854  0023B4  D00D               	goto	l6622
  9855  0023B6  2814               	incf	___fladd@bexp^0,w,c
  9856  0023B8  A4D8               	btfss	status,2,c
  9857  0023BA  D008               	goto	l6618
  9858  0023BC  0E00               	movlw	0
  9859  0023BE  6E06               	movwf	___fladd@b^0,c
  9860  0023C0  0E00               	movlw	0
  9861  0023C2  6E07               	movwf	(___fladd@b+1)^0,c
  9862  0023C4  0E00               	movlw	0
  9863  0023C6  6E08               	movwf	(___fladd@b+2)^0,c
  9864  0023C8  0E00               	movlw	0
  9865  0023CA  6E09               	movwf	(___fladd@b+3)^0,c
  9866  0023CC                     l6618:
  9867  0023CC  8E08               	bsf	(___fladd@b+2)^0,7,c
  9868  0023CE  D006               	goto	L12
  9869  0023D0                     l6622:
  9870  0023D0  0E00               	movlw	0
  9871  0023D2  6E06               	movwf	___fladd@b^0,c
  9872  0023D4  0E00               	movlw	0
  9873  0023D6  6E07               	movwf	(___fladd@b+1)^0,c
  9874  0023D8  0E00               	movlw	0
  9875  0023DA  6E08               	movwf	(___fladd@b+2)^0,c
  9876  0023DC                     L12:
  9877  0023DC  0E00               	movlw	0
  9878  0023DE  6E09               	movwf	(___fladd@b+3)^0,c
  9879  0023E0  500D               	movf	(___fladd@a+3)^0,w,c
  9880  0023E2  0B80               	andlw	128
  9881  0023E4  6E13               	movwf	___fladd@aexp^0,c
  9882  0023E6  5012               	movf	___fladd@signs^0,w,c
  9883  0023E8  1813               	xorwf	___fladd@aexp^0,w,c
  9884  0023EA  A4D8               	btfss	status,2,c
  9885  0023EC  8C12               	bsf	___fladd@signs^0,6,c
  9886  0023EE  500D               	movf	(___fladd@a+3)^0,w,c
  9887  0023F0  240D               	addwf	(___fladd@a+3)^0,w,c
  9888  0023F2  6E13               	movwf	___fladd@aexp^0,c
  9889  0023F4  BE0C               	btfsc	(___fladd@a+2)^0,7,c
  9890  0023F6  8013               	bsf	___fladd@aexp^0,0,c
  9891  0023F8  5013               	movf	___fladd@aexp^0,w,c
  9892  0023FA  B4D8               	btfsc	status,2,c
  9893  0023FC  D00D               	goto	l6646
  9894  0023FE  2813               	incf	___fladd@aexp^0,w,c
  9895  002400  A4D8               	btfss	status,2,c
  9896  002402  D008               	goto	l6642
  9897  002404  0E00               	movlw	0
  9898  002406  6E0A               	movwf	___fladd@a^0,c
  9899  002408  0E00               	movlw	0
  9900  00240A  6E0B               	movwf	(___fladd@a+1)^0,c
  9901  00240C  0E00               	movlw	0
  9902  00240E  6E0C               	movwf	(___fladd@a+2)^0,c
  9903  002410  0E00               	movlw	0
  9904  002412  6E0D               	movwf	(___fladd@a+3)^0,c
  9905  002414                     l6642:
  9906  002414  8E0C               	bsf	(___fladd@a+2)^0,7,c
  9907  002416  D006               	goto	L13
  9908  002418                     l6646:
  9909  002418  0E00               	movlw	0
  9910  00241A  6E0A               	movwf	___fladd@a^0,c
  9911  00241C  0E00               	movlw	0
  9912  00241E  6E0B               	movwf	(___fladd@a+1)^0,c
  9913  002420  0E00               	movlw	0
  9914  002422  6E0C               	movwf	(___fladd@a+2)^0,c
  9915  002424                     L13:
  9916  002424  0E00               	movlw	0
  9917  002426  6E0D               	movwf	(___fladd@a+3)^0,c
  9918  002428  5014               	movf	___fladd@bexp^0,w,c
  9919  00242A  5C13               	subwf	___fladd@aexp^0,w,c
  9920  00242C  B0D8               	btfsc	status,0,c
  9921  00242E  D022               	goto	l6684
  9922  002430  AC12               	btfss	___fladd@signs^0,6,c
  9923  002432  D002               	goto	l6654
  9924  002434  0E80               	movlw	128
  9925  002436  1A12               	xorwf	___fladd@signs^0,f,c
  9926  002438                     l6654:
  9927  002438  C014  F015         	movff	___fladd@bexp,___fladd@grs
  9928  00243C  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  9929  002440  C015  F013         	movff	___fladd@grs,___fladd@aexp
  9930  002444  C006  F015         	movff	___fladd@b,___fladd@grs
  9931  002448  C00A  F006         	movff	___fladd@a,___fladd@b
  9932  00244C  C015  F00A         	movff	___fladd@grs,___fladd@a
  9933  002450  C007  F015         	movff	___fladd@b+1,___fladd@grs
  9934  002454  C00B  F007         	movff	___fladd@a+1,___fladd@b+1
  9935  002458  C015  F00B         	movff	___fladd@grs,___fladd@a+1
  9936  00245C  C008  F015         	movff	___fladd@b+2,___fladd@grs
  9937  002460  C00C  F008         	movff	___fladd@a+2,___fladd@b+2
  9938  002464  C015  F00C         	movff	___fladd@grs,___fladd@a+2
  9939  002468  C009  F015         	movff	___fladd@b+3,___fladd@grs
  9940  00246C  C00D  F009         	movff	___fladd@a+3,___fladd@b+3
  9941  002470  C015  F00D         	movff	___fladd@grs,___fladd@a+3
  9942  002474                     l6684:
  9943  002474  0E00               	movlw	0
  9944  002476  6E15               	movwf	___fladd@grs^0,c
  9945  002478  5014               	movf	___fladd@bexp^0,w,c
  9946  00247A  C013  F00E         	movff	___fladd@aexp,??___fladd
  9947  00247E  6A0F               	clrf	(??___fladd+1)^0,c
  9948  002480  5E0E               	subwf	??___fladd^0,f,c
  9949  002482  0E00               	movlw	0
  9950  002484  5A0F               	subwfb	(??___fladd+1)^0,f,c
  9951  002486  BE0F               	btfsc	(??___fladd+1)^0,7,c
  9952  002488  D02C               	goto	l1993
  9953  00248A  500F               	movf	(??___fladd+1)^0,w,c
  9954  00248C  E104               	bnz	u5890
  9955  00248E  0E1A               	movlw	26
  9956  002490  5C0E               	subwf	??___fladd^0,w,c
  9957  002492  A0D8               	btfss	status,0,c
  9958  002494  D026               	goto	l1993
  9959  002496                     u5890:
  9960  002496  5006               	movf	___fladd@b^0,w,c
  9961  002498  1007               	iorwf	(___fladd@b+1)^0,w,c
  9962  00249A  1008               	iorwf	(___fladd@b+2)^0,w,c
  9963  00249C  1009               	iorwf	(___fladd@b+3)^0,w,c
  9964  00249E  B4D8               	btfsc	status,2,c
  9965  0024A0  D002               	goto	u5900
  9966  0024A2  0E01               	movlw	1
  9967  0024A4  D001               	goto	u5910
  9968  0024A6                     u5900:
  9969  0024A6  0E00               	movlw	0
  9970  0024A8                     u5910:
  9971  0024A8  6E15               	movwf	___fladd@grs^0,c
  9972  0024AA  0E00               	movlw	0
  9973  0024AC  6E06               	movwf	___fladd@b^0,c
  9974  0024AE  0E00               	movlw	0
  9975  0024B0  6E07               	movwf	(___fladd@b+1)^0,c
  9976  0024B2  0E00               	movlw	0
  9977  0024B4  6E08               	movwf	(___fladd@b+2)^0,c
  9978  0024B6  0E00               	movlw	0
  9979  0024B8  6E09               	movwf	(___fladd@b+3)^0,c
  9980  0024BA  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  9981  0024BE  D015               	goto	u5940
  9982  0024C0                     l1994:
  9983  0024C0  A015               	btfss	___fladd@grs^0,0,c
  9984  0024C2  D005               	goto	l6696
  9985  0024C4  90D8               	bcf	status,0,c
  9986  0024C6  3015               	rrcf	___fladd@grs^0,w,c
  9987  0024C8  0901               	iorlw	1
  9988  0024CA  6E15               	movwf	___fladd@grs^0,c
  9989  0024CC  D002               	goto	l6698
  9990  0024CE                     l6696:
  9991  0024CE  90D8               	bcf	status,0,c
  9992  0024D0  3215               	rrcf	___fladd@grs^0,f,c
  9993  0024D2                     l6698:
  9994  0024D2  B006               	btfsc	___fladd@b^0,0,c
  9995  0024D4  8E15               	bsf	___fladd@grs^0,7,c
  9996  0024D6  3409               	rlcf	(___fladd@b+3)^0,w,c
  9997  0024D8  3209               	rrcf	(___fladd@b+3)^0,f,c
  9998  0024DA  3208               	rrcf	(___fladd@b+2)^0,f,c
  9999  0024DC  3207               	rrcf	(___fladd@b+1)^0,f,c
 10000  0024DE  3206               	rrcf	___fladd@b^0,f,c
 10001  0024E0  2A14               	incf	___fladd@bexp^0,f,c
 10002  0024E2                     l1993:
 10003  0024E2  5013               	movf	___fladd@aexp^0,w,c
 10004  0024E4  5C14               	subwf	___fladd@bexp^0,w,c
 10005  0024E6  A0D8               	btfss	status,0,c
 10006  0024E8  D7EB               	goto	l1994
 10007  0024EA                     u5940:
 10008  0024EA  BC12               	btfsc	___fladd@signs^0,6,c
 10009  0024EC  D028               	goto	l6730
 10010  0024EE  5014               	movf	___fladd@bexp^0,w,c
 10011  0024F0  A4D8               	btfss	status,2,c
 10012  0024F2  D009               	goto	l6712
 10013  0024F4  0E00               	movlw	0
 10014  0024F6  6E06               	movwf	?___fladd^0,c
 10015  0024F8  0E00               	movlw	0
 10016  0024FA  6E07               	movwf	(?___fladd+1)^0,c
 10017  0024FC  0E00               	movlw	0
 10018  0024FE  6E08               	movwf	(?___fladd+2)^0,c
 10019  002500  0E00               	movlw	0
 10020  002502  6E09               	movwf	(?___fladd+3)^0,c
 10021  002504  0012               	return	
 10022  002506                     l6712:
 10023  002506  500A               	movf	___fladd@a^0,w,c
 10024  002508  2606               	addwf	___fladd@b^0,f,c
 10025  00250A  500B               	movf	(___fladd@a+1)^0,w,c
 10026  00250C  2207               	addwfc	(___fladd@b+1)^0,f,c
 10027  00250E  500C               	movf	(___fladd@a+2)^0,w,c
 10028  002510  2208               	addwfc	(___fladd@b+2)^0,f,c
 10029  002512  500D               	movf	(___fladd@a+3)^0,w,c
 10030  002514  2209               	addwfc	(___fladd@b+3)^0,f,c
 10031  002516  A009               	btfss	(___fladd@b+3)^0,0,c
 10032  002518  D071               	goto	u6070
 10033  00251A  A015               	btfss	___fladd@grs^0,0,c
 10034  00251C  D005               	goto	l6720
 10035  00251E  90D8               	bcf	status,0,c
 10036  002520  3015               	rrcf	___fladd@grs^0,w,c
 10037  002522  0901               	iorlw	1
 10038  002524  6E15               	movwf	___fladd@grs^0,c
 10039  002526  D002               	goto	l6722
 10040  002528                     l6720:
 10041  002528  90D8               	bcf	status,0,c
 10042  00252A  3215               	rrcf	___fladd@grs^0,f,c
 10043  00252C                     l6722:
 10044  00252C  B006               	btfsc	___fladd@b^0,0,c
 10045  00252E  8E15               	bsf	___fladd@grs^0,7,c
 10046  002530  3409               	rlcf	(___fladd@b+3)^0,w,c
 10047  002532  3209               	rrcf	(___fladd@b+3)^0,f,c
 10048  002534  3208               	rrcf	(___fladd@b+2)^0,f,c
 10049  002536  3207               	rrcf	(___fladd@b+1)^0,f,c
 10050  002538  3206               	rrcf	___fladd@b^0,f,c
 10051  00253A  2A14               	incf	___fladd@bexp^0,f,c
 10052  00253C  D05F               	goto	u6070
 10053  00253E                     l6730:
 10054  00253E  500A               	movf	___fladd@a^0,w,c
 10055  002540  5C06               	subwf	___fladd@b^0,w,c
 10056  002542  500B               	movf	(___fladd@a+1)^0,w,c
 10057  002544  5807               	subwfb	(___fladd@b+1)^0,w,c
 10058  002546  500C               	movf	(___fladd@a+2)^0,w,c
 10059  002548  5808               	subwfb	(___fladd@b+2)^0,w,c
 10060  00254A  5009               	movf	(___fladd@b+3)^0,w,c
 10061  00254C  0A80               	xorlw	128
 10062  00254E  6E0E               	movwf	??___fladd^0,c
 10063  002550  500D               	movf	(___fladd@a+3)^0,w,c
 10064  002552  0A80               	xorlw	128
 10065  002554  580E               	subwfb	??___fladd^0,w,c
 10066  002556  B0D8               	btfsc	status,0,c
 10067  002558  D025               	goto	l6740
 10068  00255A  5006               	movf	___fladd@b^0,w,c
 10069  00255C  5C0A               	subwf	___fladd@a^0,w,c
 10070  00255E  6E0E               	movwf	??___fladd^0,c
 10071  002560  5007               	movf	(___fladd@b+1)^0,w,c
 10072  002562  580B               	subwfb	(___fladd@a+1)^0,w,c
 10073  002564  6E0F               	movwf	(??___fladd+1)^0,c
 10074  002566  5008               	movf	(___fladd@b+2)^0,w,c
 10075  002568  580C               	subwfb	(___fladd@a+2)^0,w,c
 10076  00256A  6E10               	movwf	(??___fladd+2)^0,c
 10077  00256C  5009               	movf	(___fladd@b+3)^0,w,c
 10078  00256E  580D               	subwfb	(___fladd@a+3)^0,w,c
 10079  002570  6E11               	movwf	(??___fladd+3)^0,c
 10080  002572  0EFF               	movlw	255
 10081  002574  240E               	addwf	??___fladd^0,w,c
 10082  002576  6E06               	movwf	___fladd@b^0,c
 10083  002578  0EFF               	movlw	255
 10084  00257A  200F               	addwfc	(??___fladd+1)^0,w,c
 10085  00257C  6E07               	movwf	(___fladd@b+1)^0,c
 10086  00257E  0EFF               	movlw	255
 10087  002580  2010               	addwfc	(??___fladd+2)^0,w,c
 10088  002582  6E08               	movwf	(___fladd@b+2)^0,c
 10089  002584  0EFF               	movlw	255
 10090  002586  2011               	addwfc	(??___fladd+3)^0,w,c
 10091  002588  6E09               	movwf	(___fladd@b+3)^0,c
 10092  00258A  0E80               	movlw	128
 10093  00258C  1A12               	xorwf	___fladd@signs^0,f,c
 10094  00258E  6C15               	negf	___fladd@grs^0,c
 10095  002590  5015               	movf	___fladd@grs^0,w,c
 10096  002592  A4D8               	btfss	status,2,c
 10097  002594  D00F               	goto	l2009
 10098  002596  0E01               	movlw	1
 10099  002598  2606               	addwf	___fladd@b^0,f,c
 10100  00259A  0E00               	movlw	0
 10101  00259C  2207               	addwfc	(___fladd@b+1)^0,f,c
 10102  00259E  2208               	addwfc	(___fladd@b+2)^0,f,c
 10103  0025A0  2209               	addwfc	(___fladd@b+3)^0,f,c
 10104  0025A2  D008               	goto	l2009
 10105  0025A4                     l6740:
 10106  0025A4  500A               	movf	___fladd@a^0,w,c
 10107  0025A6  5E06               	subwf	___fladd@b^0,f,c
 10108  0025A8  500B               	movf	(___fladd@a+1)^0,w,c
 10109  0025AA  5A07               	subwfb	(___fladd@b+1)^0,f,c
 10110  0025AC  500C               	movf	(___fladd@a+2)^0,w,c
 10111  0025AE  5A08               	subwfb	(___fladd@b+2)^0,f,c
 10112  0025B0  500D               	movf	(___fladd@a+3)^0,w,c
 10113  0025B2  5A09               	subwfb	(___fladd@b+3)^0,f,c
 10114  0025B4                     l2009:
 10115  0025B4  5006               	movf	___fladd@b^0,w,c
 10116  0025B6  1007               	iorwf	(___fladd@b+1)^0,w,c
 10117  0025B8  1008               	iorwf	(___fladd@b+2)^0,w,c
 10118  0025BA  1009               	iorwf	(___fladd@b+3)^0,w,c
 10119  0025BC  A4D8               	btfss	status,2,c
 10120  0025BE  D01C               	goto	l6764
 10121  0025C0  5015               	movf	___fladd@grs^0,w,c
 10122  0025C2  A4D8               	btfss	status,2,c
 10123  0025C4  D019               	goto	l6764
 10124  0025C6  0E00               	movlw	0
 10125  0025C8  6E06               	movwf	?___fladd^0,c
 10126  0025CA  0E00               	movlw	0
 10127  0025CC  6E07               	movwf	(?___fladd+1)^0,c
 10128  0025CE  0E00               	movlw	0
 10129  0025D0  6E08               	movwf	(?___fladd+2)^0,c
 10130  0025D2  0E00               	movlw	0
 10131  0025D4  6E09               	movwf	(?___fladd+3)^0,c
 10132  0025D6  0012               	return	
 10133  0025D8                     l6748:
 10134  0025D8  90D8               	bcf	status,0,c
 10135  0025DA  3606               	rlcf	___fladd@b^0,f,c
 10136  0025DC  3607               	rlcf	(___fladd@b+1)^0,f,c
 10137  0025DE  3608               	rlcf	(___fladd@b+2)^0,f,c
 10138  0025E0  3609               	rlcf	(___fladd@b+3)^0,f,c
 10139  0025E2  BE15               	btfsc	___fladd@grs^0,7,c
 10140  0025E4  8006               	bsf	___fladd@b^0,0,c
 10141  0025E6  A015               	btfss	___fladd@grs^0,0,c
 10142  0025E8  D002               	goto	l6758
 10143  0025EA  80D8               	bsf	status,0,c
 10144  0025EC  D001               	goto	L14
 10145  0025EE                     l6758:
 10146  0025EE  90D8               	bcf	status,0,c
 10147  0025F0                     L14:
 10148  0025F0  3615               	rlcf	___fladd@grs^0,f,c
 10149  0025F2  5014               	movf	___fladd@bexp^0,w,c
 10150  0025F4  A4D8               	btfss	status,2,c
 10151  0025F6  0614               	decf	___fladd@bexp^0,f,c
 10152  0025F8                     l6764:
 10153  0025F8  AE08               	btfss	(___fladd@b+2)^0,7,c
 10154  0025FA  D7EE               	goto	l6748
 10155  0025FC                     u6070:
 10156  0025FC  0E00               	movlw	0
 10157  0025FE  6E13               	movwf	___fladd@aexp^0,c
 10158  002600  AE15               	btfss	___fladd@grs^0,7,c
 10159  002602  D00B               	goto	l2018
 10160  002604  C015  F00E         	movff	___fladd@grs,??___fladd
 10161  002608  0E7F               	movlw	127
 10162  00260A  160E               	andwf	??___fladd^0,f,c
 10163  00260C  B4D8               	btfsc	status,2,c
 10164  00260E  D003               	goto	l2019
 10165  002610                     u6090:
 10166  002610  0E01               	movlw	1
 10167  002612  6E13               	movwf	___fladd@aexp^0,c
 10168  002614  D002               	goto	l2018
 10169  002616                     l2019:
 10170  002616  B006               	btfsc	___fladd@b^0,0,c
 10171  002618  D7FB               	goto	u6090
 10172  00261A                     l2018:
 10173  00261A  5013               	movf	___fladd@aexp^0,w,c
 10174  00261C  B4D8               	btfsc	status,2,c
 10175  00261E  D020               	goto	l6784
 10176  002620  0E01               	movlw	1
 10177  002622  2606               	addwf	___fladd@b^0,f,c
 10178  002624  0E00               	movlw	0
 10179  002626  2207               	addwfc	(___fladd@b+1)^0,f,c
 10180  002628  2208               	addwfc	(___fladd@b+2)^0,f,c
 10181  00262A  2209               	addwfc	(___fladd@b+3)^0,f,c
 10182  00262C  A009               	btfss	(___fladd@b+3)^0,0,c
 10183  00262E  D018               	goto	l6784
 10184  002630  C006  F00E         	movff	___fladd@b,??___fladd
 10185  002634  C007  F00F         	movff	___fladd@b+1,??___fladd+1
 10186  002638  C008  F010         	movff	___fladd@b+2,??___fladd+2
 10187  00263C  C009  F011         	movff	___fladd@b+3,??___fladd+3
 10188  002640  3411               	rlcf	(??___fladd+3)^0,w,c
 10189  002642  3211               	rrcf	(??___fladd+3)^0,f,c
 10190  002644  3210               	rrcf	(??___fladd+2)^0,f,c
 10191  002646  320F               	rrcf	(??___fladd+1)^0,f,c
 10192  002648  320E               	rrcf	??___fladd^0,f,c
 10193  00264A  C00E  F006         	movff	??___fladd,___fladd@b
 10194  00264E  C00F  F007         	movff	??___fladd+1,___fladd@b+1
 10195  002652  C010  F008         	movff	??___fladd+2,___fladd@b+2
 10196  002656  C011  F009         	movff	??___fladd+3,___fladd@b+3
 10197  00265A  2814               	incf	___fladd@bexp^0,w,c
 10198  00265C  A4D8               	btfss	status,2,c
 10199  00265E  2A14               	incf	___fladd@bexp^0,f,c
 10200  002660                     l6784:
 10201  002660  2814               	incf	___fladd@bexp^0,w,c
 10202  002662  B4D8               	btfsc	status,2,c
 10203  002664  D003               	goto	u6150
 10204  002666  5014               	movf	___fladd@bexp^0,w,c
 10205  002668  A4D8               	btfss	status,2,c
 10206  00266A  D00D               	goto	l6792
 10207  00266C                     u6150:
 10208  00266C  0E00               	movlw	0
 10209  00266E  6E06               	movwf	___fladd@b^0,c
 10210  002670  0E00               	movlw	0
 10211  002672  6E07               	movwf	(___fladd@b+1)^0,c
 10212  002674  0E00               	movlw	0
 10213  002676  6E08               	movwf	(___fladd@b+2)^0,c
 10214  002678  0E00               	movlw	0
 10215  00267A  6E09               	movwf	(___fladd@b+3)^0,c
 10216  00267C  5014               	movf	___fladd@bexp^0,w,c
 10217  00267E  A4D8               	btfss	status,2,c
 10218  002680  D002               	goto	l6792
 10219  002682  0E00               	movlw	0
 10220  002684  6E12               	movwf	___fladd@signs^0,c
 10221  002686                     l6792:
 10222  002686  A014               	btfss	___fladd@bexp^0,0,c
 10223  002688  D002               	goto	l6796
 10224  00268A  8E08               	bsf	(___fladd@b+2)^0,7,c
 10225  00268C  D001               	goto	l6798
 10226  00268E                     l6796:
 10227  00268E  9E08               	bcf	(___fladd@b+2)^0,7,c
 10228  002690                     l6798:
 10229  002690  90D8               	bcf	status,0,c
 10230  002692  3014               	rrcf	___fladd@bexp^0,w,c
 10231  002694  6E09               	movwf	(___fladd@b+3)^0,c
 10232  002696  BE12               	btfsc	___fladd@signs^0,7,c
 10233  002698  8E09               	bsf	(___fladd@b+3)^0,7,c
 10234  00269A  C006  F006         	movff	___fladd@b,?___fladd
 10235  00269E  C007  F007         	movff	___fladd@b+1,?___fladd+1
 10236  0026A2  C008  F008         	movff	___fladd@b+2,?___fladd+2
 10237  0026A6  C009  F009         	movff	___fladd@b+3,?___fladd+3
 10238  0026AA  0012               	return		;funcret
 10239  0026AC                     __end_of___fladd:
 10240                           	callstack 0
 10241                           
 10242 ;; *************** function ___flmul *****************
 10243 ;; Defined at:
 10244 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/sprcmul.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  b               4   21[COMRAM] unsigned char 
 10247 ;;  a               4   25[COMRAM] unsigned char 
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;  prod            4   40[COMRAM] struct .
 10250 ;;  grs             4   36[COMRAM] unsigned long 
 10251 ;;  temp            2   44[COMRAM] struct .
 10252 ;;  bexp            1   35[COMRAM] unsigned char 
 10253 ;;  aexp            1   34[COMRAM] unsigned char 
 10254 ;;  sign            1   33[COMRAM] unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  4   21[COMRAM] unsigned char 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0, prodl, prodh
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10264 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10265 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10267 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10268 ;;Total ram usage:       25 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    4
 10271 ;; This function calls:
 10272 ;;		Nothing
 10273 ;; This function is called by:
 10274 ;;		_lp_filter
 10275 ;;		_calc_pot
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           	psect	text73
 10280  002050                     __ptext73:
 10281                           	callstack 0
 10282  002050                     ___flmul:
 10283                           	callstack 23
 10284                           
 10285                           ;incstack = 0
 10286  002050  5019               	movf	(___flmul@b+3)^0,w,c
 10287  002052  0B80               	andlw	128
 10288  002054  6E22               	movwf	___flmul@sign^0,c
 10289  002056  5019               	movf	(___flmul@b+3)^0,w,c
 10290  002058  2419               	addwf	(___flmul@b+3)^0,w,c
 10291  00205A  6E24               	movwf	___flmul@bexp^0,c
 10292  00205C  BE18               	btfsc	(___flmul@b+2)^0,7,c
 10293  00205E  8024               	bsf	___flmul@bexp^0,0,c
 10294  002060  5024               	movf	___flmul@bexp^0,w,c
 10295  002062  B4D8               	btfsc	status,2,c
 10296  002064  D00D               	goto	l7106
 10297  002066  2824               	incf	___flmul@bexp^0,w,c
 10298  002068  A4D8               	btfss	status,2,c
 10299  00206A  D008               	goto	l7104
 10300  00206C  0E00               	movlw	0
 10301  00206E  6E16               	movwf	___flmul@b^0,c
 10302  002070  0E00               	movlw	0
 10303  002072  6E17               	movwf	(___flmul@b+1)^0,c
 10304  002074  0E00               	movlw	0
 10305  002076  6E18               	movwf	(___flmul@b+2)^0,c
 10306  002078  0E00               	movlw	0
 10307  00207A  6E19               	movwf	(___flmul@b+3)^0,c
 10308  00207C                     l7104:
 10309  00207C  8E18               	bsf	(___flmul@b+2)^0,7,c
 10310  00207E  D008               	goto	l7108
 10311  002080                     l7106:
 10312  002080  0E00               	movlw	0
 10313  002082  6E16               	movwf	___flmul@b^0,c
 10314  002084  0E00               	movlw	0
 10315  002086  6E17               	movwf	(___flmul@b+1)^0,c
 10316  002088  0E00               	movlw	0
 10317  00208A  6E18               	movwf	(___flmul@b+2)^0,c
 10318  00208C  0E00               	movlw	0
 10319  00208E  6E19               	movwf	(___flmul@b+3)^0,c
 10320  002090                     l7108:
 10321  002090  501D               	movf	(___flmul@a+3)^0,w,c
 10322  002092  0B80               	andlw	128
 10323  002094  1A22               	xorwf	___flmul@sign^0,f,c
 10324  002096  501D               	movf	(___flmul@a+3)^0,w,c
 10325  002098  241D               	addwf	(___flmul@a+3)^0,w,c
 10326  00209A  6E23               	movwf	___flmul@aexp^0,c
 10327  00209C  BE1C               	btfsc	(___flmul@a+2)^0,7,c
 10328  00209E  8023               	bsf	___flmul@aexp^0,0,c
 10329  0020A0  5023               	movf	___flmul@aexp^0,w,c
 10330  0020A2  B4D8               	btfsc	status,2,c
 10331  0020A4  D00D               	goto	l7124
 10332  0020A6  2823               	incf	___flmul@aexp^0,w,c
 10333  0020A8  A4D8               	btfss	status,2,c
 10334  0020AA  D008               	goto	l7122
 10335  0020AC  0E00               	movlw	0
 10336  0020AE  6E1A               	movwf	___flmul@a^0,c
 10337  0020B0  0E00               	movlw	0
 10338  0020B2  6E1B               	movwf	(___flmul@a+1)^0,c
 10339  0020B4  0E00               	movlw	0
 10340  0020B6  6E1C               	movwf	(___flmul@a+2)^0,c
 10341  0020B8  0E00               	movlw	0
 10342  0020BA  6E1D               	movwf	(___flmul@a+3)^0,c
 10343  0020BC                     l7122:
 10344  0020BC  8E1C               	bsf	(___flmul@a+2)^0,7,c
 10345  0020BE  D008               	goto	l2078
 10346  0020C0                     l7124:
 10347  0020C0  0E00               	movlw	0
 10348  0020C2  6E1A               	movwf	___flmul@a^0,c
 10349  0020C4  0E00               	movlw	0
 10350  0020C6  6E1B               	movwf	(___flmul@a+1)^0,c
 10351  0020C8  0E00               	movlw	0
 10352  0020CA  6E1C               	movwf	(___flmul@a+2)^0,c
 10353  0020CC  0E00               	movlw	0
 10354  0020CE  6E1D               	movwf	(___flmul@a+3)^0,c
 10355  0020D0                     l2078:
 10356  0020D0  5023               	movf	___flmul@aexp^0,w,c
 10357  0020D2  B4D8               	btfsc	status,2,c
 10358  0020D4  D003               	goto	u6800
 10359  0020D6  5024               	movf	___flmul@bexp^0,w,c
 10360  0020D8  A4D8               	btfss	status,2,c
 10361  0020DA  D009               	goto	l7132
 10362  0020DC                     u6800:
 10363  0020DC  0E00               	movlw	0
 10364  0020DE  6E16               	movwf	?___flmul^0,c
 10365  0020E0  0E00               	movlw	0
 10366  0020E2  6E17               	movwf	(?___flmul+1)^0,c
 10367  0020E4  0E00               	movlw	0
 10368  0020E6  6E18               	movwf	(?___flmul+2)^0,c
 10369  0020E8  0E00               	movlw	0
 10370  0020EA  6E19               	movwf	(?___flmul+3)^0,c
 10371  0020EC  0012               	return	
 10372  0020EE                     l7132:
 10373  0020EE  501C               	movf	(___flmul@a+2)^0,w,c
 10374  0020F0  0216               	mulwf	___flmul@b^0,c
 10375  0020F2  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10376  0020F8  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10377  0020FE  502D               	movf	___flmul@temp^0,w,c
 10378  002100  6E25               	movwf	___flmul@grs^0,c
 10379  002102  6A26               	clrf	(___flmul@grs+1)^0,c
 10380  002104  6A27               	clrf	(___flmul@grs+2)^0,c
 10381  002106  6A28               	clrf	(___flmul@grs+3)^0,c
 10382  002108  502E               	movf	(___flmul@temp+1)^0,w,c
 10383  00210A  6E29               	movwf	___flmul@prod^0,c
 10384  00210C  6A2A               	clrf	(___flmul@prod+1)^0,c
 10385  00210E  6A2B               	clrf	(___flmul@prod+2)^0,c
 10386  002110  6A2C               	clrf	(___flmul@prod+3)^0,c
 10387  002112  501B               	movf	(___flmul@a+1)^0,w,c
 10388  002114  0217               	mulwf	(___flmul@b+1)^0,c
 10389  002116  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10390  00211C  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10391  002122  502D               	movf	___flmul@temp^0,w,c
 10392  002124  2625               	addwf	___flmul@grs^0,f,c
 10393  002126  0E00               	movlw	0
 10394  002128  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10395  00212A  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10396  00212C  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10397  00212E  502E               	movf	(___flmul@temp+1)^0,w,c
 10398  002130  2629               	addwf	___flmul@prod^0,f,c
 10399  002132  0E00               	movlw	0
 10400  002134  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10401  002136  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10402  002138  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10403  00213A  501A               	movf	___flmul@a^0,w,c
 10404  00213C  0218               	mulwf	(___flmul@b+2)^0,c
 10405  00213E  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10406  002144  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10407  00214A  502D               	movf	___flmul@temp^0,w,c
 10408  00214C  2625               	addwf	___flmul@grs^0,f,c
 10409  00214E  0E00               	movlw	0
 10410  002150  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10411  002152  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10412  002154  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10413  002156  502E               	movf	(___flmul@temp+1)^0,w,c
 10414  002158  2629               	addwf	___flmul@prod^0,f,c
 10415  00215A  0E00               	movlw	0
 10416  00215C  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10417  00215E  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10418  002160  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10419  002162  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
 10420  002166  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
 10421  00216A  C025  F026         	movff	___flmul@grs,___flmul@grs+1
 10422  00216E  6A25               	clrf	___flmul@grs^0,c
 10423  002170  501A               	movf	___flmul@a^0,w,c
 10424  002172  0217               	mulwf	(___flmul@b+1)^0,c
 10425  002174  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10426  00217A  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10427  002180  502D               	movf	___flmul@temp^0,w,c
 10428  002182  2625               	addwf	___flmul@grs^0,f,c
 10429  002184  502E               	movf	(___flmul@temp+1)^0,w,c
 10430  002186  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10431  002188  0E00               	movlw	0
 10432  00218A  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10433  00218C  0E00               	movlw	0
 10434  00218E  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10435  002190  501B               	movf	(___flmul@a+1)^0,w,c
 10436  002192  0216               	mulwf	___flmul@b^0,c
 10437  002194  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10438  00219A  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10439  0021A0  502D               	movf	___flmul@temp^0,w,c
 10440  0021A2  2625               	addwf	___flmul@grs^0,f,c
 10441  0021A4  502E               	movf	(___flmul@temp+1)^0,w,c
 10442  0021A6  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10443  0021A8  0E00               	movlw	0
 10444  0021AA  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10445  0021AC  0E00               	movlw	0
 10446  0021AE  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10447  0021B0  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
 10448  0021B4  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
 10449  0021B8  C025  F026         	movff	___flmul@grs,___flmul@grs+1
 10450  0021BC  6A25               	clrf	___flmul@grs^0,c
 10451  0021BE  501A               	movf	___flmul@a^0,w,c
 10452  0021C0  0216               	mulwf	___flmul@b^0,c
 10453  0021C2  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10454  0021C8  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10455  0021CE  502D               	movf	___flmul@temp^0,w,c
 10456  0021D0  2625               	addwf	___flmul@grs^0,f,c
 10457  0021D2  502E               	movf	(___flmul@temp+1)^0,w,c
 10458  0021D4  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10459  0021D6  0E00               	movlw	0
 10460  0021D8  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10461  0021DA  0E00               	movlw	0
 10462  0021DC  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10463  0021DE  501C               	movf	(___flmul@a+2)^0,w,c
 10464  0021E0  0217               	mulwf	(___flmul@b+1)^0,c
 10465  0021E2  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10466  0021E8  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10467  0021EE  502D               	movf	___flmul@temp^0,w,c
 10468  0021F0  2629               	addwf	___flmul@prod^0,f,c
 10469  0021F2  502E               	movf	(___flmul@temp+1)^0,w,c
 10470  0021F4  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10471  0021F6  0E00               	movlw	0
 10472  0021F8  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10473  0021FA  0E00               	movlw	0
 10474  0021FC  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10475  0021FE  501B               	movf	(___flmul@a+1)^0,w,c
 10476  002200  0218               	mulwf	(___flmul@b+2)^0,c
 10477  002202  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10478  002208  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10479  00220E  502D               	movf	___flmul@temp^0,w,c
 10480  002210  2629               	addwf	___flmul@prod^0,f,c
 10481  002212  502E               	movf	(___flmul@temp+1)^0,w,c
 10482  002214  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10483  002216  0E00               	movlw	0
 10484  002218  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10485  00221A  0E00               	movlw	0
 10486  00221C  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10487  00221E  501C               	movf	(___flmul@a+2)^0,w,c
 10488  002220  0218               	mulwf	(___flmul@b+2)^0,c
 10489  002222  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10490  002228  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10491  00222E  502D               	movf	___flmul@temp^0,w,c
 10492  002230  6E1E               	movwf	??___flmul^0,c
 10493  002232  502E               	movf	(___flmul@temp+1)^0,w,c
 10494  002234  6E1F               	movwf	(??___flmul+1)^0,c
 10495  002236  6A20               	clrf	(??___flmul+2)^0,c
 10496  002238  6A21               	clrf	(??___flmul+3)^0,c
 10497  00223A  C020  F021         	movff	??___flmul+2,??___flmul+3
 10498  00223E  C01F  F020         	movff	??___flmul+1,??___flmul+2
 10499  002242  C01E  F01F         	movff	??___flmul,??___flmul+1
 10500  002246  6A1E               	clrf	??___flmul^0,c
 10501  002248  501E               	movf	??___flmul^0,w,c
 10502  00224A  2629               	addwf	___flmul@prod^0,f,c
 10503  00224C  501F               	movf	(??___flmul+1)^0,w,c
 10504  00224E  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10505  002250  5020               	movf	(??___flmul+2)^0,w,c
 10506  002252  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10507  002254  5021               	movf	(??___flmul+3)^0,w,c
 10508  002256  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10509  002258  5028               	movf	(___flmul@grs+3)^0,w,c
 10510  00225A  2629               	addwf	___flmul@prod^0,f,c
 10511  00225C  0E00               	movlw	0
 10512  00225E  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10513  002260  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10514  002262  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10515  002264  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
 10516  002268  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
 10517  00226C  C025  F026         	movff	___flmul@grs,___flmul@grs+1
 10518  002270  6A25               	clrf	___flmul@grs^0,c
 10519  002272  5023               	movf	___flmul@aexp^0,w,c
 10520  002274  C024  F01E         	movff	___flmul@bexp,??___flmul
 10521  002278  6A1F               	clrf	(??___flmul+1)^0,c
 10522  00227A  261E               	addwf	??___flmul^0,f,c
 10523  00227C  0E00               	movlw	0
 10524  00227E  221F               	addwfc	(??___flmul+1)^0,f,c
 10525  002280  0E82               	movlw	130
 10526  002282  241E               	addwf	??___flmul^0,w,c
 10527  002284  6E2D               	movwf	___flmul@temp^0,c
 10528  002286  0EFF               	movlw	255
 10529  002288  201F               	addwfc	(??___flmul+1)^0,w,c
 10530  00228A  6E2E               	movwf	(___flmul@temp+1)^0,c
 10531  00228C  D00F               	goto	l7180
 10532  00228E                     l7174:
 10533  00228E  90D8               	bcf	status,0,c
 10534  002290  3629               	rlcf	___flmul@prod^0,f,c
 10535  002292  362A               	rlcf	(___flmul@prod+1)^0,f,c
 10536  002294  362B               	rlcf	(___flmul@prod+2)^0,f,c
 10537  002296  362C               	rlcf	(___flmul@prod+3)^0,f,c
 10538  002298  BE28               	btfsc	(___flmul@grs+3)^0,7,c
 10539  00229A  8029               	bsf	___flmul@prod^0,0,c
 10540  00229C  90D8               	bcf	status,0,c
 10541  00229E  3625               	rlcf	___flmul@grs^0,f,c
 10542  0022A0  3626               	rlcf	(___flmul@grs+1)^0,f,c
 10543  0022A2  3627               	rlcf	(___flmul@grs+2)^0,f,c
 10544  0022A4  3628               	rlcf	(___flmul@grs+3)^0,f,c
 10545  0022A6  062D               	decf	___flmul@temp^0,f,c
 10546  0022A8  A0D8               	btfss	status,0,c
 10547  0022AA  062E               	decf	(___flmul@temp+1)^0,f,c
 10548  0022AC                     l7180:
 10549  0022AC  AE2B               	btfss	(___flmul@prod+2)^0,7,c
 10550  0022AE  D7EF               	goto	l7174
 10551  0022B0  0E00               	movlw	0
 10552  0022B2  6E23               	movwf	___flmul@aexp^0,c
 10553  0022B4  AE28               	btfss	(___flmul@grs+3)^0,7,c
 10554  0022B6  D017               	goto	l2087
 10555  0022B8  0EFF               	movlw	255
 10556  0022BA  1425               	andwf	___flmul@grs^0,w,c
 10557  0022BC  6E1E               	movwf	??___flmul^0,c
 10558  0022BE  0EFF               	movlw	255
 10559  0022C0  1426               	andwf	(___flmul@grs+1)^0,w,c
 10560  0022C2  6E1F               	movwf	(??___flmul+1)^0,c
 10561  0022C4  0EFF               	movlw	255
 10562  0022C6  1427               	andwf	(___flmul@grs+2)^0,w,c
 10563  0022C8  6E20               	movwf	(??___flmul+2)^0,c
 10564  0022CA  0E7F               	movlw	127
 10565  0022CC  1428               	andwf	(___flmul@grs+3)^0,w,c
 10566  0022CE  6E21               	movwf	(??___flmul+3)^0,c
 10567  0022D0  501E               	movf	??___flmul^0,w,c
 10568  0022D2  101F               	iorwf	(??___flmul+1)^0,w,c
 10569  0022D4  1020               	iorwf	(??___flmul+2)^0,w,c
 10570  0022D6  1021               	iorwf	(??___flmul+3)^0,w,c
 10571  0022D8  B4D8               	btfsc	status,2,c
 10572  0022DA  D003               	goto	l2088
 10573  0022DC                     u6840:
 10574  0022DC  0E01               	movlw	1
 10575  0022DE  6E23               	movwf	___flmul@aexp^0,c
 10576  0022E0  D002               	goto	l2087
 10577  0022E2                     l2088:
 10578  0022E2  B029               	btfsc	___flmul@prod^0,0,c
 10579  0022E4  D7FB               	goto	u6840
 10580  0022E6                     l2087:
 10581  0022E6  5023               	movf	___flmul@aexp^0,w,c
 10582  0022E8  B4D8               	btfsc	status,2,c
 10583  0022EA  D01F               	goto	l7200
 10584  0022EC  0E01               	movlw	1
 10585  0022EE  2629               	addwf	___flmul@prod^0,f,c
 10586  0022F0  0E00               	movlw	0
 10587  0022F2  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10588  0022F4  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10589  0022F6  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10590  0022F8  A02C               	btfss	(___flmul@prod+3)^0,0,c
 10591  0022FA  D017               	goto	l7200
 10592  0022FC  C029  F01E         	movff	___flmul@prod,??___flmul
 10593  002300  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
 10594  002304  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
 10595  002308  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
 10596  00230C  3421               	rlcf	(??___flmul+3)^0,w,c
 10597  00230E  3221               	rrcf	(??___flmul+3)^0,f,c
 10598  002310  3220               	rrcf	(??___flmul+2)^0,f,c
 10599  002312  321F               	rrcf	(??___flmul+1)^0,f,c
 10600  002314  321E               	rrcf	??___flmul^0,f,c
 10601  002316  C01E  F029         	movff	??___flmul,___flmul@prod
 10602  00231A  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
 10603  00231E  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
 10604  002322  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
 10605  002326  4A2D               	infsnz	___flmul@temp^0,f,c
 10606  002328  2A2E               	incf	(___flmul@temp+1)^0,f,c
 10607  00232A                     l7200:
 10608  00232A  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10609  00232C  D00D               	goto	l7204
 10610  00232E  502E               	movf	(___flmul@temp+1)^0,w,c
 10611  002330  E103               	bnz	u6880
 10612  002332  282D               	incf	___flmul@temp^0,w,c
 10613  002334  A0D8               	btfss	status,0,c
 10614  002336  D008               	goto	l7204
 10615  002338                     u6880:
 10616  002338  0E00               	movlw	0
 10617  00233A  6E29               	movwf	___flmul@prod^0,c
 10618  00233C  0E00               	movlw	0
 10619  00233E  6E2A               	movwf	(___flmul@prod+1)^0,c
 10620  002340  0E80               	movlw	128
 10621  002342  6E2B               	movwf	(___flmul@prod+2)^0,c
 10622  002344  0E7F               	movlw	127
 10623  002346  D020               	goto	L15
 10624  002348                     l7204:
 10625  002348  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10626  00234A  D005               	goto	u6890
 10627  00234C  502E               	movf	(___flmul@temp+1)^0,w,c
 10628  00234E  E10E               	bnz	l2095
 10629  002350  042D               	decf	___flmul@temp^0,w,c
 10630  002352  B0D8               	btfsc	status,0,c
 10631  002354  D00B               	goto	l2095
 10632  002356                     u6890:
 10633  002356  0E00               	movlw	0
 10634  002358  6E29               	movwf	___flmul@prod^0,c
 10635  00235A  0E00               	movlw	0
 10636  00235C  6E2A               	movwf	(___flmul@prod+1)^0,c
 10637  00235E  0E00               	movlw	0
 10638  002360  6E2B               	movwf	(___flmul@prod+2)^0,c
 10639  002362  0E00               	movlw	0
 10640  002364  6E2C               	movwf	(___flmul@prod+3)^0,c
 10641  002366  0E00               	movlw	0
 10642  002368  6E22               	movwf	___flmul@sign^0,c
 10643  00236A  D00F               	goto	l7216
 10644  00236C                     l2095:
 10645  00236C  C02D  F024         	movff	___flmul@temp,___flmul@bexp
 10646  002370  0EFF               	movlw	255
 10647  002372  1629               	andwf	___flmul@prod^0,f,c
 10648  002374  0EFF               	movlw	255
 10649  002376  162A               	andwf	(___flmul@prod+1)^0,f,c
 10650  002378  0E7F               	movlw	127
 10651  00237A  162B               	andwf	(___flmul@prod+2)^0,f,c
 10652  00237C  0E00               	movlw	0
 10653  00237E  162C               	andwf	(___flmul@prod+3)^0,f,c
 10654  002380  B024               	btfsc	___flmul@bexp^0,0,c
 10655  002382  8E2B               	bsf	(___flmul@prod+2)^0,7,c
 10656  002384  90D8               	bcf	status,0,c
 10657  002386  3024               	rrcf	___flmul@bexp^0,w,c
 10658  002388                     L15:
 10659  002388  6E2C               	movwf	(___flmul@prod+3)^0,c
 10660  00238A                     l7216:
 10661  00238A  5022               	movf	___flmul@sign^0,w,c
 10662  00238C  122C               	iorwf	(___flmul@prod+3)^0,f,c
 10663  00238E  C029  F016         	movff	___flmul@prod,?___flmul
 10664  002392  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
 10665  002396  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
 10666  00239A  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
 10667  00239E  0012               	return		;funcret
 10668  0023A0                     __end_of___flmul:
 10669                           	callstack 0
 10670                           
 10671 ;; *************** function ___fldiv *****************
 10672 ;; Defined at:
 10673 ;;		line 11 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/sprcdiv.c"
 10674 ;; Parameters:    Size  Location     Type
 10675 ;;  b               4   54[COMRAM] unsigned char 
 10676 ;;  a               4   58[COMRAM] unsigned char 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;  grs             4   73[COMRAM] unsigned long 
 10679 ;;  rem             4   66[COMRAM] unsigned long 
 10680 ;;  new_exp         2   71[COMRAM] short 
 10681 ;;  aexp            1   78[COMRAM] unsigned char 
 10682 ;;  bexp            1   77[COMRAM] unsigned char 
 10683 ;;  sign            1   70[COMRAM] unsigned char 
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  4   54[COMRAM] unsigned char 
 10686 ;; Registers used:
 10687 ;;		wreg, status,2, status,0
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10693 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10694 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10696 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10697 ;;Total ram usage:       25 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    4
 10700 ;; This function calls:
 10701 ;;		Nothing
 10702 ;; This function is called by:
 10703 ;;		_main
 10704 ;;		_lp_filter
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text74
 10709  002956                     __ptext74:
 10710                           	callstack 0
 10711  002956                     ___fldiv:
 10712                           	callstack 26
 10713                           
 10714                           ;incstack = 0
 10715  002956  503A               	movf	(___fldiv@b+3)^0,w,c
 10716  002958  0B80               	andlw	128
 10717  00295A  6E47               	movwf	___fldiv@sign^0,c
 10718  00295C  503A               	movf	(___fldiv@b+3)^0,w,c
 10719  00295E  243A               	addwf	(___fldiv@b+3)^0,w,c
 10720  002960  6E4E               	movwf	___fldiv@bexp^0,c
 10721  002962  BE39               	btfsc	(___fldiv@b+2)^0,7,c
 10722  002964  804E               	bsf	___fldiv@bexp^0,0,c
 10723  002966  504E               	movf	___fldiv@bexp^0,w,c
 10724  002968  B4D8               	btfsc	status,2,c
 10725  00296A  D00D               	goto	l6970
 10726  00296C  284E               	incf	___fldiv@bexp^0,w,c
 10727  00296E  A4D8               	btfss	status,2,c
 10728  002970  D008               	goto	l6966
 10729  002972  0E00               	movlw	0
 10730  002974  6E37               	movwf	___fldiv@b^0,c
 10731  002976  0E00               	movlw	0
 10732  002978  6E38               	movwf	(___fldiv@b+1)^0,c
 10733  00297A  0E00               	movlw	0
 10734  00297C  6E39               	movwf	(___fldiv@b+2)^0,c
 10735  00297E  0E00               	movlw	0
 10736  002980  6E3A               	movwf	(___fldiv@b+3)^0,c
 10737  002982                     l6966:
 10738  002982  8E39               	bsf	(___fldiv@b+2)^0,7,c
 10739  002984  D006               	goto	L16
 10740  002986                     l6970:
 10741  002986  0E00               	movlw	0
 10742  002988  6E37               	movwf	___fldiv@b^0,c
 10743  00298A  0E00               	movlw	0
 10744  00298C  6E38               	movwf	(___fldiv@b+1)^0,c
 10745  00298E  0E00               	movlw	0
 10746  002990  6E39               	movwf	(___fldiv@b+2)^0,c
 10747  002992                     L16:
 10748  002992  0E00               	movlw	0
 10749  002994  6E3A               	movwf	(___fldiv@b+3)^0,c
 10750  002996  503E               	movf	(___fldiv@a+3)^0,w,c
 10751  002998  0B80               	andlw	128
 10752  00299A  1A47               	xorwf	___fldiv@sign^0,f,c
 10753  00299C  503E               	movf	(___fldiv@a+3)^0,w,c
 10754  00299E  243E               	addwf	(___fldiv@a+3)^0,w,c
 10755  0029A0  6E4F               	movwf	___fldiv@aexp^0,c
 10756  0029A2  BE3D               	btfsc	(___fldiv@a+2)^0,7,c
 10757  0029A4  804F               	bsf	___fldiv@aexp^0,0,c
 10758  0029A6  504F               	movf	___fldiv@aexp^0,w,c
 10759  0029A8  B4D8               	btfsc	status,2,c
 10760  0029AA  D00D               	goto	l6990
 10761  0029AC  284F               	incf	___fldiv@aexp^0,w,c
 10762  0029AE  A4D8               	btfss	status,2,c
 10763  0029B0  D008               	goto	l6986
 10764  0029B2  0E00               	movlw	0
 10765  0029B4  6E3B               	movwf	___fldiv@a^0,c
 10766  0029B6  0E00               	movlw	0
 10767  0029B8  6E3C               	movwf	(___fldiv@a+1)^0,c
 10768  0029BA  0E00               	movlw	0
 10769  0029BC  6E3D               	movwf	(___fldiv@a+2)^0,c
 10770  0029BE  0E00               	movlw	0
 10771  0029C0  6E3E               	movwf	(___fldiv@a+3)^0,c
 10772  0029C2                     l6986:
 10773  0029C2  8E3D               	bsf	(___fldiv@a+2)^0,7,c
 10774  0029C4  D006               	goto	L17
 10775  0029C6                     l6990:
 10776  0029C6  0E00               	movlw	0
 10777  0029C8  6E3B               	movwf	___fldiv@a^0,c
 10778  0029CA  0E00               	movlw	0
 10779  0029CC  6E3C               	movwf	(___fldiv@a+1)^0,c
 10780  0029CE  0E00               	movlw	0
 10781  0029D0  6E3D               	movwf	(___fldiv@a+2)^0,c
 10782  0029D2                     L17:
 10783  0029D2  0E00               	movlw	0
 10784  0029D4  6E3E               	movwf	(___fldiv@a+3)^0,c
 10785  0029D6  503B               	movf	___fldiv@a^0,w,c
 10786  0029D8  103C               	iorwf	(___fldiv@a+1)^0,w,c
 10787  0029DA  103D               	iorwf	(___fldiv@a+2)^0,w,c
 10788  0029DC  103E               	iorwf	(___fldiv@a+3)^0,w,c
 10789  0029DE  A4D8               	btfss	status,2,c
 10790  0029E0  D017               	goto	l7004
 10791  0029E2  0E00               	movlw	0
 10792  0029E4  6E37               	movwf	___fldiv@b^0,c
 10793  0029E6  0E00               	movlw	0
 10794  0029E8  6E38               	movwf	(___fldiv@b+1)^0,c
 10795  0029EA  0E00               	movlw	0
 10796  0029EC  6E39               	movwf	(___fldiv@b+2)^0,c
 10797  0029EE  0E00               	movlw	0
 10798  0029F0  6E3A               	movwf	(___fldiv@b+3)^0,c
 10799  0029F2  0E80               	movlw	128
 10800  0029F4  1239               	iorwf	(___fldiv@b+2)^0,f,c
 10801  0029F6  0E7F               	movlw	127
 10802  0029F8  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10803  0029FA                     l6998:
 10804  0029FA  5047               	movf	___fldiv@sign^0,w,c
 10805  0029FC  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10806  0029FE  C037  F037         	movff	___fldiv@b,?___fldiv
 10807  002A02  C038  F038         	movff	___fldiv@b+1,?___fldiv+1
 10808  002A06  C039  F039         	movff	___fldiv@b+2,?___fldiv+2
 10809  002A0A  C03A  F03A         	movff	___fldiv@b+3,?___fldiv+3
 10810  002A0E  0012               	return	
 10811  002A10                     l7004:
 10812  002A10  504E               	movf	___fldiv@bexp^0,w,c
 10813  002A12  A4D8               	btfss	status,2,c
 10814  002A14  D009               	goto	l7012
 10815  002A16  0E00               	movlw	0
 10816  002A18  6E37               	movwf	?___fldiv^0,c
 10817  002A1A  0E00               	movlw	0
 10818  002A1C  6E38               	movwf	(?___fldiv+1)^0,c
 10819  002A1E  0E00               	movlw	0
 10820  002A20  6E39               	movwf	(?___fldiv+2)^0,c
 10821  002A22  0E00               	movlw	0
 10822  002A24  6E3A               	movwf	(?___fldiv+3)^0,c
 10823  002A26  0012               	return	
 10824  002A28                     l7012:
 10825  002A28  504F               	movf	___fldiv@aexp^0,w,c
 10826  002A2A  C04E  F03F         	movff	___fldiv@bexp,??___fldiv
 10827  002A2E  6A40               	clrf	(??___fldiv+1)^0,c
 10828  002A30  5E3F               	subwf	??___fldiv^0,f,c
 10829  002A32  0E00               	movlw	0
 10830  002A34  5A40               	subwfb	(??___fldiv+1)^0,f,c
 10831  002A36  0E7F               	movlw	127
 10832  002A38  243F               	addwf	??___fldiv^0,w,c
 10833  002A3A  6E48               	movwf	___fldiv@new_exp^0,c
 10834  002A3C  0E00               	movlw	0
 10835  002A3E  2040               	addwfc	(??___fldiv+1)^0,w,c
 10836  002A40  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10837  002A42  C037  F043         	movff	___fldiv@b,___fldiv@rem
 10838  002A46  C038  F044         	movff	___fldiv@b+1,___fldiv@rem+1
 10839  002A4A  C039  F045         	movff	___fldiv@b+2,___fldiv@rem+2
 10840  002A4E  C03A  F046         	movff	___fldiv@b+3,___fldiv@rem+3
 10841  002A52  0E00               	movlw	0
 10842  002A54  6E37               	movwf	___fldiv@b^0,c
 10843  002A56  0E00               	movlw	0
 10844  002A58  6E38               	movwf	(___fldiv@b+1)^0,c
 10845  002A5A  0E00               	movlw	0
 10846  002A5C  6E39               	movwf	(___fldiv@b+2)^0,c
 10847  002A5E  0E00               	movlw	0
 10848  002A60  6E3A               	movwf	(___fldiv@b+3)^0,c
 10849  002A62  0E00               	movlw	0
 10850  002A64  6E4A               	movwf	___fldiv@grs^0,c
 10851  002A66  0E00               	movlw	0
 10852  002A68  6E4B               	movwf	(___fldiv@grs+1)^0,c
 10853  002A6A  0E00               	movlw	0
 10854  002A6C  6E4C               	movwf	(___fldiv@grs+2)^0,c
 10855  002A6E  0E00               	movlw	0
 10856  002A70  6E4D               	movwf	(___fldiv@grs+3)^0,c
 10857  002A72  0E00               	movlw	0
 10858  002A74  6E4F               	movwf	___fldiv@aexp^0,c
 10859  002A76  D028               	goto	l2048
 10860  002A78                     l7022:
 10861  002A78  504F               	movf	___fldiv@aexp^0,w,c
 10862  002A7A  B4D8               	btfsc	status,2,c
 10863  002A7C  D011               	goto	l7030
 10864  002A7E  90D8               	bcf	status,0,c
 10865  002A80  3643               	rlcf	___fldiv@rem^0,f,c
 10866  002A82  3644               	rlcf	(___fldiv@rem+1)^0,f,c
 10867  002A84  3645               	rlcf	(___fldiv@rem+2)^0,f,c
 10868  002A86  3646               	rlcf	(___fldiv@rem+3)^0,f,c
 10869  002A88  90D8               	bcf	status,0,c
 10870  002A8A  3637               	rlcf	___fldiv@b^0,f,c
 10871  002A8C  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10872  002A8E  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10873  002A90  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10874  002A92  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10875  002A94  8037               	bsf	___fldiv@b^0,0,c
 10876  002A96  90D8               	bcf	status,0,c
 10877  002A98  364A               	rlcf	___fldiv@grs^0,f,c
 10878  002A9A  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10879  002A9C  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10880  002A9E  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10881  002AA0                     l7030:
 10882  002AA0  503B               	movf	___fldiv@a^0,w,c
 10883  002AA2  5C43               	subwf	___fldiv@rem^0,w,c
 10884  002AA4  503C               	movf	(___fldiv@a+1)^0,w,c
 10885  002AA6  5844               	subwfb	(___fldiv@rem+1)^0,w,c
 10886  002AA8  503D               	movf	(___fldiv@a+2)^0,w,c
 10887  002AAA  5845               	subwfb	(___fldiv@rem+2)^0,w,c
 10888  002AAC  503E               	movf	(___fldiv@a+3)^0,w,c
 10889  002AAE  5846               	subwfb	(___fldiv@rem+3)^0,w,c
 10890  002AB0  A0D8               	btfss	status,0,c
 10891  002AB2  D009               	goto	l7036
 10892  002AB4  8C4D               	bsf	(___fldiv@grs+3)^0,6,c
 10893  002AB6  503B               	movf	___fldiv@a^0,w,c
 10894  002AB8  5E43               	subwf	___fldiv@rem^0,f,c
 10895  002ABA  503C               	movf	(___fldiv@a+1)^0,w,c
 10896  002ABC  5A44               	subwfb	(___fldiv@rem+1)^0,f,c
 10897  002ABE  503D               	movf	(___fldiv@a+2)^0,w,c
 10898  002AC0  5A45               	subwfb	(___fldiv@rem+2)^0,f,c
 10899  002AC2  503E               	movf	(___fldiv@a+3)^0,w,c
 10900  002AC4  5A46               	subwfb	(___fldiv@rem+3)^0,f,c
 10901  002AC6                     l7036:
 10902  002AC6  2A4F               	incf	___fldiv@aexp^0,f,c
 10903  002AC8                     l2048:
 10904  002AC8  0E19               	movlw	25
 10905  002ACA  644F               	cpfsgt	___fldiv@aexp^0,c
 10906  002ACC  D7D5               	goto	l7022
 10907  002ACE  5043               	movf	___fldiv@rem^0,w,c
 10908  002AD0  1044               	iorwf	(___fldiv@rem+1)^0,w,c
 10909  002AD2  1045               	iorwf	(___fldiv@rem+2)^0,w,c
 10910  002AD4  1046               	iorwf	(___fldiv@rem+3)^0,w,c
 10911  002AD6  B4D8               	btfsc	status,2,c
 10912  002AD8  D011               	goto	l7048
 10913  002ADA  804A               	bsf	___fldiv@grs^0,0,c
 10914  002ADC  D00F               	goto	l7048
 10915  002ADE                     l7042:
 10916  002ADE  90D8               	bcf	status,0,c
 10917  002AE0  3637               	rlcf	___fldiv@b^0,f,c
 10918  002AE2  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10919  002AE4  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10920  002AE6  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10921  002AE8  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10922  002AEA  8037               	bsf	___fldiv@b^0,0,c
 10923  002AEC  90D8               	bcf	status,0,c
 10924  002AEE  364A               	rlcf	___fldiv@grs^0,f,c
 10925  002AF0  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10926  002AF2  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10927  002AF4  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10928  002AF6  0648               	decf	___fldiv@new_exp^0,f,c
 10929  002AF8  A0D8               	btfss	status,0,c
 10930  002AFA  0649               	decf	(___fldiv@new_exp+1)^0,f,c
 10931  002AFC                     l7048:
 10932  002AFC  AE39               	btfss	(___fldiv@b+2)^0,7,c
 10933  002AFE  D7EF               	goto	l7042
 10934  002B00  0E00               	movlw	0
 10935  002B02  6E4F               	movwf	___fldiv@aexp^0,c
 10936  002B04  AE4D               	btfss	(___fldiv@grs+3)^0,7,c
 10937  002B06  D017               	goto	l2059
 10938  002B08  0EFF               	movlw	255
 10939  002B0A  144A               	andwf	___fldiv@grs^0,w,c
 10940  002B0C  6E3F               	movwf	??___fldiv^0,c
 10941  002B0E  0EFF               	movlw	255
 10942  002B10  144B               	andwf	(___fldiv@grs+1)^0,w,c
 10943  002B12  6E40               	movwf	(??___fldiv+1)^0,c
 10944  002B14  0EFF               	movlw	255
 10945  002B16  144C               	andwf	(___fldiv@grs+2)^0,w,c
 10946  002B18  6E41               	movwf	(??___fldiv+2)^0,c
 10947  002B1A  0E7F               	movlw	127
 10948  002B1C  144D               	andwf	(___fldiv@grs+3)^0,w,c
 10949  002B1E  6E42               	movwf	(??___fldiv+3)^0,c
 10950  002B20  503F               	movf	??___fldiv^0,w,c
 10951  002B22  1040               	iorwf	(??___fldiv+1)^0,w,c
 10952  002B24  1041               	iorwf	(??___fldiv+2)^0,w,c
 10953  002B26  1042               	iorwf	(??___fldiv+3)^0,w,c
 10954  002B28  B4D8               	btfsc	status,2,c
 10955  002B2A  D003               	goto	l2060
 10956  002B2C                     u6660:
 10957  002B2C  0E01               	movlw	1
 10958  002B2E  6E4F               	movwf	___fldiv@aexp^0,c
 10959  002B30  D002               	goto	l2059
 10960  002B32                     l2060:
 10961  002B32  B037               	btfsc	___fldiv@b^0,0,c
 10962  002B34  D7FB               	goto	u6660
 10963  002B36                     l2059:
 10964  002B36  504F               	movf	___fldiv@aexp^0,w,c
 10965  002B38  B4D8               	btfsc	status,2,c
 10966  002B3A  D01F               	goto	l7068
 10967  002B3C  0E01               	movlw	1
 10968  002B3E  2637               	addwf	___fldiv@b^0,f,c
 10969  002B40  0E00               	movlw	0
 10970  002B42  2238               	addwfc	(___fldiv@b+1)^0,f,c
 10971  002B44  2239               	addwfc	(___fldiv@b+2)^0,f,c
 10972  002B46  223A               	addwfc	(___fldiv@b+3)^0,f,c
 10973  002B48  A03A               	btfss	(___fldiv@b+3)^0,0,c
 10974  002B4A  D017               	goto	l7068
 10975  002B4C  C037  F03F         	movff	___fldiv@b,??___fldiv
 10976  002B50  C038  F040         	movff	___fldiv@b+1,??___fldiv+1
 10977  002B54  C039  F041         	movff	___fldiv@b+2,??___fldiv+2
 10978  002B58  C03A  F042         	movff	___fldiv@b+3,??___fldiv+3
 10979  002B5C  3442               	rlcf	(??___fldiv+3)^0,w,c
 10980  002B5E  3242               	rrcf	(??___fldiv+3)^0,f,c
 10981  002B60  3241               	rrcf	(??___fldiv+2)^0,f,c
 10982  002B62  3240               	rrcf	(??___fldiv+1)^0,f,c
 10983  002B64  323F               	rrcf	??___fldiv^0,f,c
 10984  002B66  C03F  F037         	movff	??___fldiv,___fldiv@b
 10985  002B6A  C040  F038         	movff	??___fldiv+1,___fldiv@b+1
 10986  002B6E  C041  F039         	movff	??___fldiv+2,___fldiv@b+2
 10987  002B72  C042  F03A         	movff	??___fldiv+3,___fldiv@b+3
 10988  002B76  4A48               	infsnz	___fldiv@new_exp^0,f,c
 10989  002B78  2A49               	incf	(___fldiv@new_exp+1)^0,f,c
 10990  002B7A                     l7068:
 10991  002B7A  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10992  002B7C  D010               	goto	l7072
 10993  002B7E  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 10994  002B80  E103               	bnz	u6700
 10995  002B82  2848               	incf	___fldiv@new_exp^0,w,c
 10996  002B84  A0D8               	btfss	status,0,c
 10997  002B86  D00B               	goto	l7072
 10998  002B88                     u6700:
 10999  002B88  0E00               	movlw	0
 11000  002B8A  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 11001  002B8C  6848               	setf	___fldiv@new_exp^0,c
 11002  002B8E  0E00               	movlw	0
 11003  002B90  6E37               	movwf	___fldiv@b^0,c
 11004  002B92  0E00               	movlw	0
 11005  002B94  6E38               	movwf	(___fldiv@b+1)^0,c
 11006  002B96  0E00               	movlw	0
 11007  002B98  6E39               	movwf	(___fldiv@b+2)^0,c
 11008  002B9A  0E00               	movlw	0
 11009  002B9C  6E3A               	movwf	(___fldiv@b+3)^0,c
 11010  002B9E                     l7072:
 11011  002B9E  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11012  002BA0  D005               	goto	u6710
 11013  002BA2  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 11014  002BA4  E111               	bnz	l7076
 11015  002BA6  0448               	decf	___fldiv@new_exp^0,w,c
 11016  002BA8  B0D8               	btfsc	status,0,c
 11017  002BAA  D00E               	goto	l7076
 11018  002BAC                     u6710:
 11019  002BAC  0E00               	movlw	0
 11020  002BAE  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 11021  002BB0  0E00               	movlw	0
 11022  002BB2  6E48               	movwf	___fldiv@new_exp^0,c
 11023  002BB4  0E00               	movlw	0
 11024  002BB6  6E37               	movwf	___fldiv@b^0,c
 11025  002BB8  0E00               	movlw	0
 11026  002BBA  6E38               	movwf	(___fldiv@b+1)^0,c
 11027  002BBC  0E00               	movlw	0
 11028  002BBE  6E39               	movwf	(___fldiv@b+2)^0,c
 11029  002BC0  0E00               	movlw	0
 11030  002BC2  6E3A               	movwf	(___fldiv@b+3)^0,c
 11031  002BC4  0E00               	movlw	0
 11032  002BC6  6E47               	movwf	___fldiv@sign^0,c
 11033  002BC8                     l7076:
 11034  002BC8  C048  F04E         	movff	___fldiv@new_exp,___fldiv@bexp
 11035  002BCC  A04E               	btfss	___fldiv@bexp^0,0,c
 11036  002BCE  D002               	goto	l7082
 11037  002BD0  8E39               	bsf	(___fldiv@b+2)^0,7,c
 11038  002BD2  D001               	goto	l7084
 11039  002BD4                     l7082:
 11040  002BD4  9E39               	bcf	(___fldiv@b+2)^0,7,c
 11041  002BD6                     l7084:
 11042  002BD6  90D8               	bcf	status,0,c
 11043  002BD8  304E               	rrcf	___fldiv@bexp^0,w,c
 11044  002BDA  6E3A               	movwf	(___fldiv@b+3)^0,c
 11045  002BDC  D70E               	goto	l6998
 11046  002BDE                     __end_of___fldiv:
 11047                           	callstack 0
 11048                           
 11049 ;; *************** function ___xxtofl *****************
 11050 ;; Defined at:
 11051 ;;		line 10 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/xxtofl.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  sign            1    wreg     unsigned char 
 11054 ;;  val             4    5[COMRAM] long 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  sign            1   13[COMRAM] unsigned char 
 11057 ;;  arg             4   15[COMRAM] unsigned long 
 11058 ;;  exp             1   14[COMRAM] unsigned char 
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  4    5[COMRAM] unsigned char 
 11061 ;; Registers used:
 11062 ;;		wreg, status,2, status,0
 11063 ;; Tracked objects:
 11064 ;;		On entry : 3E/0
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11069 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11070 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11071 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11072 ;;Total ram usage:       14 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; Hardware stack levels required when called:    4
 11075 ;; This function calls:
 11076 ;;		Nothing
 11077 ;; This function is called by:
 11078 ;;		_main
 11079 ;;		_calc_pot
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text75
 11084  003702                     __ptext75:
 11085                           	callstack 0
 11086  003702                     ___xxtofl:
 11087                           	callstack 26
 11088                           
 11089                           ;incstack = 0
 11090                           ;___xxtofl@sign stored from wreg
 11091  003702  6E0E               	movwf	___xxtofl@sign^0,c
 11092  003704  500E               	movf	___xxtofl@sign^0,w,c
 11093  003706  A4D8               	btfss	status,2,c
 11094  003708  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 11095  00370A  D01A               	goto	l2119
 11096  00370C  C006  F00A         	movff	___xxtofl@val,??___xxtofl
 11097  003710  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
 11098  003714  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
 11099  003718  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
 11100  00371C  1E0A               	comf	??___xxtofl^0,f,c
 11101  00371E  1E0B               	comf	(??___xxtofl+1)^0,f,c
 11102  003720  1E0C               	comf	(??___xxtofl+2)^0,f,c
 11103  003722  1E0D               	comf	(??___xxtofl+3)^0,f,c
 11104  003724  2A0A               	incf	??___xxtofl^0,f,c
 11105  003726  0E00               	movlw	0
 11106  003728  220B               	addwfc	(??___xxtofl+1)^0,f,c
 11107  00372A  220C               	addwfc	(??___xxtofl+2)^0,f,c
 11108  00372C  220D               	addwfc	(??___xxtofl+3)^0,f,c
 11109  00372E  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
 11110  003732  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
 11111  003736  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
 11112  00373A  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
 11113  00373E  D008               	goto	l7428
 11114  003740                     l2119:
 11115  003740  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
 11116  003744  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11117  003748  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11118  00374C  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11119  003750                     l7428:
 11120  003750  5006               	movf	___xxtofl@val^0,w,c
 11121  003752  1007               	iorwf	(___xxtofl@val+1)^0,w,c
 11122  003754  1008               	iorwf	(___xxtofl@val+2)^0,w,c
 11123  003756  1009               	iorwf	(___xxtofl@val+3)^0,w,c
 11124  003758  A4D8               	btfss	status,2,c
 11125  00375A  D009               	goto	l7434
 11126  00375C  0E00               	movlw	0
 11127  00375E  6E06               	movwf	?___xxtofl^0,c
 11128  003760  0E00               	movlw	0
 11129  003762  6E07               	movwf	(?___xxtofl+1)^0,c
 11130  003764  0E00               	movlw	0
 11131  003766  6E08               	movwf	(?___xxtofl+2)^0,c
 11132  003768  0E00               	movlw	0
 11133  00376A  6E09               	movwf	(?___xxtofl+3)^0,c
 11134  00376C  0012               	return	
 11135  00376E                     l7434:
 11136  00376E  0E96               	movlw	150
 11137  003770  6E0F               	movwf	___xxtofl@exp^0,c
 11138  003772  D006               	goto	l7438
 11139  003774                     l7436:
 11140  003774  2A0F               	incf	___xxtofl@exp^0,f,c
 11141  003776  90D8               	bcf	status,0,c
 11142  003778  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11143  00377A  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11144  00377C  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11145  00377E  3210               	rrcf	___xxtofl@arg^0,f,c
 11146  003780                     l7438:
 11147  003780  0E00               	movlw	0
 11148  003782  1410               	andwf	___xxtofl@arg^0,w,c
 11149  003784  6E0A               	movwf	??___xxtofl^0,c
 11150  003786  0E00               	movlw	0
 11151  003788  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11152  00378A  6E0B               	movwf	(??___xxtofl+1)^0,c
 11153  00378C  0E00               	movlw	0
 11154  00378E  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11155  003790  6E0C               	movwf	(??___xxtofl+2)^0,c
 11156  003792  0EFE               	movlw	254
 11157  003794  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11158  003796  6E0D               	movwf	(??___xxtofl+3)^0,c
 11159  003798  500A               	movf	??___xxtofl^0,w,c
 11160  00379A  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11161  00379C  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11162  00379E  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11163  0037A0  B4D8               	btfsc	status,2,c
 11164  0037A2  D00D               	goto	l2126
 11165  0037A4  D7E7               	goto	l7436
 11166  0037A6                     l7440:
 11167  0037A6  2A0F               	incf	___xxtofl@exp^0,f,c
 11168  0037A8  0E01               	movlw	1
 11169  0037AA  2610               	addwf	___xxtofl@arg^0,f,c
 11170  0037AC  0E00               	movlw	0
 11171  0037AE  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
 11172  0037B0  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
 11173  0037B2  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
 11174  0037B4  90D8               	bcf	status,0,c
 11175  0037B6  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11176  0037B8  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11177  0037BA  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11178  0037BC  3210               	rrcf	___xxtofl@arg^0,f,c
 11179  0037BE                     l2126:
 11180  0037BE  0E00               	movlw	0
 11181  0037C0  1410               	andwf	___xxtofl@arg^0,w,c
 11182  0037C2  6E0A               	movwf	??___xxtofl^0,c
 11183  0037C4  0E00               	movlw	0
 11184  0037C6  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11185  0037C8  6E0B               	movwf	(??___xxtofl+1)^0,c
 11186  0037CA  0E00               	movlw	0
 11187  0037CC  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11188  0037CE  6E0C               	movwf	(??___xxtofl+2)^0,c
 11189  0037D0  0EFF               	movlw	255
 11190  0037D2  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11191  0037D4  6E0D               	movwf	(??___xxtofl+3)^0,c
 11192  0037D6  500A               	movf	??___xxtofl^0,w,c
 11193  0037D8  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11194  0037DA  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11195  0037DC  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11196  0037DE  B4D8               	btfsc	status,2,c
 11197  0037E0  D007               	goto	l7448
 11198  0037E2  D7E1               	goto	l7440
 11199  0037E4                     l7446:
 11200  0037E4  060F               	decf	___xxtofl@exp^0,f,c
 11201  0037E6  90D8               	bcf	status,0,c
 11202  0037E8  3610               	rlcf	___xxtofl@arg^0,f,c
 11203  0037EA  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
 11204  0037EC  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
 11205  0037EE  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
 11206  0037F0                     l7448:
 11207  0037F0  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
 11208  0037F2  D003               	goto	u7150
 11209  0037F4  0E02               	movlw	2
 11210  0037F6  600F               	cpfslt	___xxtofl@exp^0,c
 11211  0037F8  D7F5               	goto	l7446
 11212  0037FA                     u7150:
 11213  0037FA  A00F               	btfss	___xxtofl@exp^0,0,c
 11214  0037FC  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
 11215  0037FE  90D8               	bcf	status,0,c
 11216  003800  320F               	rrcf	___xxtofl@exp^0,f,c
 11217  003802  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
 11218  003806  6A0B               	clrf	(??___xxtofl+1)^0,c
 11219  003808  6A0C               	clrf	(??___xxtofl+2)^0,c
 11220  00380A  6A0D               	clrf	(??___xxtofl+3)^0,c
 11221  00380C  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
 11222  003810  6A0C               	clrf	(??___xxtofl+2)^0,c
 11223  003812  6A0B               	clrf	(??___xxtofl+1)^0,c
 11224  003814  6A0A               	clrf	??___xxtofl^0,c
 11225  003816  500A               	movf	??___xxtofl^0,w,c
 11226  003818  1210               	iorwf	___xxtofl@arg^0,f,c
 11227  00381A  500B               	movf	(??___xxtofl+1)^0,w,c
 11228  00381C  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
 11229  00381E  500C               	movf	(??___xxtofl+2)^0,w,c
 11230  003820  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
 11231  003822  500D               	movf	(??___xxtofl+3)^0,w,c
 11232  003824  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
 11233  003826  500E               	movf	___xxtofl@sign^0,w,c
 11234  003828  A4D8               	btfss	status,2,c
 11235  00382A  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 11236  00382C  D001               	goto	l7464
 11237  00382E  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
 11238  003830                     l7464:
 11239  003830  C010  F006         	movff	___xxtofl@arg,?___xxtofl
 11240  003834  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
 11241  003838  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
 11242  00383C  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
 11243  003840  0012               	return		;funcret
 11244  003842                     __end_of___xxtofl:
 11245                           	callstack 0
 11246                           
 11247 ;; *************** function ___fltol *****************
 11248 ;; Defined at:
 11249 ;;		line 43 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/fltol.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  f1              4   20[BANK0 ] unsigned char 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  exp1            1   25[BANK0 ] unsigned char 
 11254 ;;  sign1           1   24[BANK0 ] unsigned char 
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  4   20[BANK0 ] long 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2, status,0
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 3F/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11267 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11268 ;;Total ram usage:       10 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    4
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_calc_pot
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text76
 11279  003C28                     __ptext76:
 11280                           	callstack 0
 11281  003C28                     ___fltol:
 11282                           	callstack 24
 11283                           
 11284                           ;incstack = 0
 11285  003C28  0100               	movlb	0	; () banked
 11286  003C2A  3576               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11287  003C2C  3577               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11288  003C2E  6F79               	movwf	___fltol@exp1& (0+255),b
 11289  003C30  5179               	movf	___fltol@exp1& (0+255),w,b
 11290  003C32  A4D8               	btfss	status,2,c
 11291  003C34  D009               	goto	l7384
 11292  003C36                     u7020:
 11293                           
 11294                           ; BSR set to: 0
 11295  003C36  0E00               	movlw	0
 11296  003C38  6F74               	movwf	?___fltol& (0+255),b
 11297  003C3A  0E00               	movlw	0
 11298  003C3C  6F75               	movwf	(?___fltol+1)& (0+255),b
 11299  003C3E  0E00               	movlw	0
 11300  003C40  6F76               	movwf	(?___fltol+2)& (0+255),b
 11301  003C42  0E00               	movlw	0
 11302  003C44  6F77               	movwf	(?___fltol+3)& (0+255),b
 11303  003C46  0012               	return	
 11304  003C48                     l7384:
 11305                           
 11306                           ; BSR set to: 0
 11307  003C48  C074  F052         	movff	___fltol@f1,??___fltol
 11308  003C4C  C075  F053         	movff	___fltol@f1+1,??___fltol+1
 11309  003C50  C076  F054         	movff	___fltol@f1+2,??___fltol+2
 11310  003C54  C077  F055         	movff	___fltol@f1+3,??___fltol+3
 11311  003C58  0E20               	movlw	32
 11312  003C5A  D005               	goto	u7030
 11313  003C5C                     u7035:
 11314  003C5C  90D8               	bcf	status,0,c
 11315  003C5E  3255               	rrcf	(??___fltol+3)^0,f,c
 11316  003C60  3254               	rrcf	(??___fltol+2)^0,f,c
 11317  003C62  3253               	rrcf	(??___fltol+1)^0,f,c
 11318  003C64  3252               	rrcf	??___fltol^0,f,c
 11319  003C66                     u7030:
 11320  003C66  2EE8               	decfsz	wreg,f,c
 11321  003C68  D7F9               	goto	u7035
 11322  003C6A  5052               	movf	??___fltol^0,w,c
 11323  003C6C  6F78               	movwf	___fltol@sign1& (0+255),b
 11324                           
 11325                           ; BSR set to: 0
 11326  003C6E  8F76               	bsf	(___fltol@f1+2)& (0+255),7,b
 11327                           
 11328                           ; BSR set to: 0
 11329  003C70  0EFF               	movlw	255
 11330  003C72  1774               	andwf	___fltol@f1& (0+255),f,b
 11331  003C74  0EFF               	movlw	255
 11332  003C76  1775               	andwf	(___fltol@f1+1)& (0+255),f,b
 11333  003C78  0EFF               	movlw	255
 11334  003C7A  1776               	andwf	(___fltol@f1+2)& (0+255),f,b
 11335  003C7C  0E00               	movlw	0
 11336  003C7E  1777               	andwf	(___fltol@f1+3)& (0+255),f,b
 11337                           
 11338                           ; BSR set to: 0
 11339  003C80  0E96               	movlw	150
 11340  003C82  5F79               	subwf	___fltol@exp1& (0+255),f,b
 11341                           
 11342                           ; BSR set to: 0
 11343  003C84  AF79               	btfss	___fltol@exp1& (0+255),7,b
 11344  003C86  D00D               	goto	l7404
 11345                           
 11346                           ; BSR set to: 0
 11347  003C88  5179               	movf	___fltol@exp1& (0+255),w,b
 11348  003C8A  0A80               	xorlw	128
 11349  003C8C  0F97               	addlw	151
 11350  003C8E  A0D8               	btfss	status,0,c
 11351  003C90  D7D2               	goto	u7020
 11352  003C92                     l7400:
 11353                           
 11354                           ; BSR set to: 0
 11355  003C92  90D8               	bcf	status,0,c
 11356  003C94  3377               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11357  003C96  3376               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11358  003C98  3375               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11359  003C9A  3374               	rrcf	___fltol@f1& (0+255),f,b
 11360                           
 11361                           ; BSR set to: 0
 11362  003C9C  3F79               	incfsz	___fltol@exp1& (0+255),f,b
 11363  003C9E  D7F9               	goto	l7400
 11364  003CA0  D00D               	goto	u7070
 11365  003CA2                     l7404:
 11366                           
 11367                           ; BSR set to: 0
 11368  003CA2  0E1F               	movlw	31
 11369  003CA4  6579               	cpfsgt	___fltol@exp1& (0+255),b
 11370  003CA6  D007               	goto	l7412
 11371  003CA8  D7C6               	goto	u7020
 11372  003CAA                     l7410:
 11373                           
 11374                           ; BSR set to: 0
 11375  003CAA  90D8               	bcf	status,0,c
 11376  003CAC  3774               	rlcf	___fltol@f1& (0+255),f,b
 11377  003CAE  3775               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11378  003CB0  3776               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11379  003CB2  3777               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11380  003CB4  0779               	decf	___fltol@exp1& (0+255),f,b
 11381  003CB6                     l7412:
 11382                           
 11383                           ; BSR set to: 0
 11384  003CB6  5179               	movf	___fltol@exp1& (0+255),w,b
 11385  003CB8  A4D8               	btfss	status,2,c
 11386  003CBA  D7F7               	goto	l7410
 11387  003CBC                     u7070:
 11388                           
 11389                           ; BSR set to: 0
 11390  003CBC  5178               	movf	___fltol@sign1& (0+255),w,b
 11391  003CBE  B4D8               	btfsc	status,2,c
 11392  003CC0  D008               	goto	l7418
 11393                           
 11394                           ; BSR set to: 0
 11395  003CC2  1F77               	comf	(___fltol@f1+3)& (0+255),f,b
 11396  003CC4  1F76               	comf	(___fltol@f1+2)& (0+255),f,b
 11397  003CC6  1F75               	comf	(___fltol@f1+1)& (0+255),f,b
 11398  003CC8  6D74               	negf	___fltol@f1& (0+255),b
 11399  003CCA  0E00               	movlw	0
 11400  003CCC  2375               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11401  003CCE  2376               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11402  003CD0  2377               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11403  003CD2                     l7418:
 11404                           
 11405                           ; BSR set to: 0
 11406  003CD2  C074  F074         	movff	___fltol@f1,?___fltol
 11407  003CD6  C075  F075         	movff	___fltol@f1+1,?___fltol+1
 11408  003CDA  C076  F076         	movff	___fltol@f1+2,?___fltol+2
 11409  003CDE  C077  F077         	movff	___fltol@f1+3,?___fltol+3
 11410                           
 11411                           ; BSR set to: 0
 11412  003CE2  0012               	return		;funcret
 11413  003CE4                     __end_of___fltol:
 11414                           	callstack 0
 11415                           
 11416 ;; *************** function _UART2_is_rx_ready *****************
 11417 ;; Defined at:
 11418 ;;		line 152 in file "mcc_generated_files/uart2.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;		None
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;		None
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  1    wreg      unsigned char 
 11425 ;; Registers used:
 11426 ;;		wreg, status,2
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/1
 11429 ;;		On exit  : 3F/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11436 ;;Total ram usage:        0 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:    4
 11439 ;; This function calls:
 11440 ;;		Nothing
 11441 ;; This function is called by:
 11442 ;;		_Digital232_init
 11443 ;;		_Digital232_RW
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447                           	psect	text77
 11448  004F24                     __ptext77:
 11449                           	callstack 0
 11450  004F24                     _UART2_is_rx_ready:
 11451                           	callstack 25
 11452                           
 11453                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;incstack = 0
 11457  004F24  0100               	movlb	0	; () banked
 11458  004F26  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11459                           
 11460                           ; BSR set to: 0
 11461  004F28  0012               	return		;funcret
 11462  004F2A                     __end_of_UART2_is_rx_ready:
 11463                           	callstack 0
 11464                           
 11465 ;; *************** function _UART2_Read *****************
 11466 ;; Defined at:
 11467 ;;		line 171 in file "mcc_generated_files/uart2.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;  readValue       1    5[COMRAM] unsigned char 
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      unsigned char 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11476 ;; Tracked objects:
 11477 ;;		On entry : 3F/0
 11478 ;;		On exit  : 3F/39
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11485 ;;Total ram usage:        1 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:    4
 11488 ;; This function calls:
 11489 ;;		Nothing
 11490 ;; This function is called by:
 11491 ;;		_Digital232_init
 11492 ;;		_Digital232_RW
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text78
 11497  0046C0                     __ptext78:
 11498                           	callstack 0
 11499  0046C0                     _UART2_Read:
 11500                           	callstack 25
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;incstack = 0
 11510  0046C0  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11511  0046C2  B4D8               	btfsc	status,2,c
 11512  0046C4  D7FD               	goto	_UART2_Read
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
 11516  0046C6  0E32               	movlw	low _uart2RxStatusBuffer
 11517  0046C8  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11518  0046CA  6ED9               	movwf	fsr2l,c
 11519  0046CC  6ADA               	clrf	fsr2h,c
 11520  0046CE  0E01               	movlw	high _uart2RxStatusBuffer
 11521  0046D0  22DA               	addwfc	fsr2h,f,c
 11522  0046D2  50DF               	movf	indf2,w,c
 11523  0046D4  0101               	movlb	1	; () banked
 11524  0046D6  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
 11525                           
 11526                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
 11527  0046D8  0E3A               	movlw	low _uart2RxBuffer
 11528  0046DA  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11529  0046DC  6ED9               	movwf	fsr2l,c
 11530  0046DE  6ADA               	clrf	fsr2h,c
 11531  0046E0  0E01               	movlw	high _uart2RxBuffer
 11532  0046E2  22DA               	addwfc	fsr2h,f,c
 11533  0046E4  50DF               	movf	indf2,w,c
 11534  0046E6  6E06               	movwf	UART2_Read@readValue^0,c
 11535                           
 11536                           ; BSR set to: 1
 11537  0046E8  2A58               	incf	_uart2RxTail^0,f,c	;volatile
 11538                           
 11539                           ; BSR set to: 1
 11540                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 11541  0046EA  0E07               	movlw	7
 11542  0046EC  6458               	cpfsgt	_uart2RxTail^0,c
 11543  0046EE  D002               	goto	l7658
 11544                           
 11545                           ; BSR set to: 1
 11546                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
 11547  0046F0  0E00               	movlw	0
 11548  0046F2  6E58               	movwf	_uart2RxTail^0,c	;volatile
 11549  0046F4                     l7658:
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
 11553  0046F4  0139               	movlb	57	; () banked
 11554  0046F6  9596               	bcf	150,2,b	;volatile
 11555                           
 11556                           ; BSR set to: 57
 11557                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
 11558  0046F8  0100               	movlb	0	; () banked
 11559  0046FA  07A3               	decf	_uart2RxCount& (0+255),f,b	;volatile
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
 11563  0046FC  0139               	movlb	57	; () banked
 11564  0046FE  8596               	bsf	150,2,b	;volatile
 11565                           
 11566                           ; BSR set to: 57
 11567                           ;mcc_generated_files/uart2.c: 190:     return readValue;
 11568  004700  5006               	movf	UART2_Read@readValue^0,w,c
 11569                           
 11570                           ; BSR set to: 57
 11571  004702  0012               	return		;funcret
 11572  004704                     __end_of_UART2_Read:
 11573                           	callstack 0
 11574                           
 11575 ;; *************** function _TimerDone *****************
 11576 ;; Defined at:
 11577 ;;		line 19 in file "timers.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;  timer           1    wreg     const unsigned char 
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;  timer           1    7[COMRAM] const unsigned char 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  1    wreg      _Bool 
 11584 ;; Registers used:
 11585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11594 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11595 ;;Total ram usage:        3 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; Hardware stack levels required when called:    4
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		_work_sw
 11602 ;;		_main
 11603 ;;		_Digital232_RW
 11604 ;;		_led_lightshow
 11605 ;;		_WaitMs
 11606 ;; This function uses a non-reentrant model
 11607 ;;
 11608                           
 11609                           	psect	text79
 11610  004B4C                     __ptext79:
 11611                           	callstack 0
 11612  004B4C                     _TimerDone:
 11613                           	callstack 25
 11614                           
 11615                           ; BSR set to: 57
 11616                           ;incstack = 0
 11617                           ;TimerDone@timer stored from wreg
 11618  004B4C  6E08               	movwf	TimerDone@timer^0,c
 11619  004B4E  0004               	clrwdt		;# 
 11620                           
 11621                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 11622  004B50  5008               	movf	TimerDone@timer^0,w,c
 11623  004B52  0D02               	mullw	2
 11624  004B54  0E20               	movlw	low _tickCount
 11625  004B56  24F3               	addwf	243,w,c
 11626  004B58  6ED9               	movwf	fsr2l,c
 11627  004B5A  0E01               	movlw	high _tickCount
 11628  004B5C  20F4               	addwfc	prodh,w,c
 11629  004B5E  6EDA               	movwf	fsr2h,c
 11630  004B60  50DE               	movf	postinc2,w,c
 11631  004B62  10DE               	iorwf	postinc2,w,c
 11632  004B64  A4D8               	btfss	status,2,c
 11633  004B66  D002               	goto	l7314
 11634                           
 11635                           ;timers.c: 23:   return 1;
 11636  004B68  0E01               	movlw	1
 11637  004B6A  0012               	return	
 11638  004B6C                     l7314:
 11639                           
 11640                           ;timers.c: 25:  return 0;
 11641  004B6C  0E00               	movlw	0
 11642  004B6E  0012               	return		;funcret
 11643  004B70                     __end_of_TimerDone:
 11644                           	callstack 0
 11645                           
 11646 ;; *************** function _StartTimer *****************
 11647 ;; Defined at:
 11648 ;;		line 11 in file "timers.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  timer           1    wreg     const unsigned char 
 11651 ;;  count           2    5[COMRAM] const unsigned short 
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;  timer           1    9[COMRAM] const unsigned char 
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  1    wreg      void 
 11656 ;; Registers used:
 11657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/2
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11666 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11667 ;;Total ram usage:        5 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:    4
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_work_sw
 11674 ;;		_main
 11675 ;;		_Digital232_init
 11676 ;;		_Digital232_RW
 11677 ;;		_led_lightshow
 11678 ;;		_WaitMs
 11679 ;; This function uses a non-reentrant model
 11680 ;;
 11681                           
 11682                           	psect	text80
 11683  004A78                     __ptext80:
 11684                           	callstack 0
 11685  004A78                     _StartTimer:
 11686                           	callstack 25
 11687                           
 11688                           ;incstack = 0
 11689                           ;StartTimer@timer stored from wreg
 11690  004A78  6E0A               	movwf	StartTimer@timer^0,c
 11691                           
 11692                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
 11693  004A7A  C006  F008         	movff	StartTimer@count,??_StartTimer
 11694  004A7E  C007  F009         	movff	StartTimer@count+1,??_StartTimer+1
 11695  004A82  90D8               	bcf	status,0,c
 11696  004A84  3608               	rlcf	??_StartTimer^0,f,c
 11697  004A86  3609               	rlcf	(??_StartTimer+1)^0,f,c
 11698  004A88  500A               	movf	StartTimer@timer^0,w,c
 11699  004A8A  0D02               	mullw	2
 11700  004A8C  0E20               	movlw	low _tickCount
 11701  004A8E  24F3               	addwf	243,w,c
 11702  004A90  6ED9               	movwf	fsr2l,c
 11703  004A92  0E01               	movlw	high _tickCount
 11704  004A94  20F4               	addwfc	prodh,w,c
 11705  004A96  6EDA               	movwf	fsr2h,c
 11706  004A98  0060  F023  FFDE   	movff	??_StartTimer,postinc2
 11707  004A9E  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
 11708  004AA4  0012               	return		;funcret
 11709  004AA6                     __end_of_StartTimer:
 11710                           	callstack 0
 11711                           
 11712 ;; *************** function _PWM8_LoadDutyValue *****************
 11713 ;; Defined at:
 11714 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;  dutyValue       2    5[COMRAM] unsigned short 
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;		None
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		wreg, status,2, status,0
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11732 ;;Total ram usage:        4 bytes
 11733 ;; Hardware stack levels used:    1
 11734 ;; Hardware stack levels required when called:    4
 11735 ;; This function calls:
 11736 ;;		Nothing
 11737 ;; This function is called by:
 11738 ;;		_Digital232_RW
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text81
 11743  004950                     __ptext81:
 11744                           	callstack 0
 11745  004950                     _PWM8_LoadDutyValue:
 11746                           	callstack 25
 11747                           
 11748                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11749                           
 11750                           ;incstack = 0
 11751  004950  C006  F008         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11752  004954  C007  F009         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11753  004958  90D8               	bcf	status,0,c
 11754  00495A  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11755  00495C  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11756  00495E  90D8               	bcf	status,0,c
 11757  004960  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11758  004962  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11759  004964  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11760  004966  6E61               	movwf	97,c	;volatile
 11761                           
 11762                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11763  004968  C006  F008         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11764  00496C  0E03               	movlw	3
 11765  00496E  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11766  004970  0E06               	movlw	6
 11767  004972  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11768  004974                     u7245:
 11769  004974  90D8               	bcf	status,0,c
 11770  004976  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11771  004978  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11772  00497A  D7FC               	goto	u7245
 11773  00497C  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11774  00497E  6E60               	movwf	96,c	;volatile
 11775  004980  0012               	return		;funcret
 11776  004982                     __end_of_PWM8_LoadDutyValue:
 11777                           	callstack 0
 11778                           
 11779 ;; *************** function _ADCC_StartConversion *****************
 11780 ;; Defined at:
 11781 ;;		line 113 in file "mcc_generated_files/adcc.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;  channel         1    wreg     enum E15802
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  channel         1    5[COMRAM] enum E15802
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      void 
 11788 ;; Registers used:
 11789 ;;		wreg
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/1
 11792 ;;		On exit  : 3F/3E
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11799 ;;Total ram usage:        1 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    4
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_Digital232_init
 11806 ;;		_Digital232_RW
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	text82
 11811  004E46                     __ptext82:
 11812                           	callstack 0
 11813  004E46                     _ADCC_StartConversion:
 11814                           	callstack 25
 11815                           
 11816                           ;incstack = 0
 11817                           ;ADCC_StartConversion@channel stored from wreg
 11818  004E46  6E06               	movwf	ADCC_StartConversion@channel^0,c
 11819                           
 11820                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
 11821  004E48  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 11822                           
 11823                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
 11824  004E4E  013E               	movlb	62	; () banked
 11825  004E50  8FF8               	bsf	248,7,b	;volatile
 11826                           
 11827                           ; BSR set to: 62
 11828                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
 11829  004E52  81F8               	bsf	248,0,b	;volatile
 11830                           
 11831                           ; BSR set to: 62
 11832  004E54  0012               	return		;funcret
 11833  004E56                     __end_of_ADCC_StartConversion:
 11834                           	callstack 0
 11835                           
 11836 ;; *************** function _ADCC_IsConversionDone *****************
 11837 ;; Defined at:
 11838 ;;		line 125 in file "mcc_generated_files/adcc.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;		None
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      _Bool 
 11845 ;; Registers used:
 11846 ;;		wreg
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/3E
 11849 ;;		On exit  : 3F/3E
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11856 ;;Total ram usage:        0 bytes
 11857 ;; Hardware stack levels used:    1
 11858 ;; Hardware stack levels required when called:    4
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_Digital232_RW
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text83
 11867  004EFE                     __ptext83:
 11868                           	callstack 0
 11869  004EFE                     _ADCC_IsConversionDone:
 11870                           	callstack 25
 11871                           
 11872                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
 11873                           
 11874                           ; BSR set to: 62
 11875                           ;incstack = 0
 11876  004EFE  013E               	movlb	62	; () banked
 11877  004F00  B1F8               	btfsc	248,0,b	;volatile
 11878  004F02  D002               	goto	u7250
 11879  004F04  0E01               	movlw	1
 11880  004F06  0012               	return	
 11881  004F08                     u7250:
 11882  004F08  0E00               	movlw	0
 11883                           
 11884                           ; BSR set to: 62
 11885  004F0A  0012               	return		;funcret
 11886  004F0C                     __end_of_ADCC_IsConversionDone:
 11887                           	callstack 0
 11888                           
 11889 ;; *************** function _ADCC_GetConversionResult *****************
 11890 ;; Defined at:
 11891 ;;		line 131 in file "mcc_generated_files/adcc.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;		None
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;		None
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  2    5[COMRAM] unsigned short 
 11898 ;; Registers used:
 11899 ;;		wreg, status,2, status,0
 11900 ;; Tracked objects:
 11901 ;;		On entry : 3F/3E
 11902 ;;		On exit  : 3F/3E
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11909 ;;Total ram usage:        4 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; Hardware stack levels required when called:    4
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_Digital232_RW
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           	psect	text84
 11920  004E22                     __ptext84:
 11921                           	callstack 0
 11922  004E22                     _ADCC_GetConversionResult:
 11923                           	callstack 25
 11924                           
 11925                           ; BSR set to: 62
 11926                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11927                           
 11928                           ; BSR set to: 62
 11929                           ;incstack = 0
 11930  004E22  51F0               	movf	240,w,b	;volatile
 11931  004E24  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 11932  004E26  6A08               	clrf	??_ADCC_GetConversionResult^0,c
 11933  004E28  51EF               	movf	239,w,b	;volatile
 11934  004E2A  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
 11935  004E2C  6E06               	movwf	?_ADCC_GetConversionResult^0,c
 11936  004E2E  0E00               	movlw	0
 11937  004E30  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 11938  004E32  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 11939                           
 11940                           ; BSR set to: 62
 11941  004E34  0012               	return		;funcret
 11942  004E36                     __end_of_ADCC_GetConversionResult:
 11943                           	callstack 0
 11944                           
 11945 ;; *************** function _Default_ISR *****************
 11946 ;; Defined at:
 11947 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      void 
 11954 ;; Registers used:
 11955 ;;		None
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11965 ;;Total ram usage:        0 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; This function calls:
 11968 ;;		Nothing
 11969 ;; This function is called by:
 11970 ;;		Interrupt level 2
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           
 11974                           	psect	text85
 11975  004F3C                     __ptext85:
 11976                           	callstack 0
 11977  004F3C                     _Default_ISR:
 11978                           	callstack 20
 11979                           
 11980                           ; BSR set to: 62
 11981                           ;incstack = 0
 11982  004F3C  0011               	retfie		f
 11983  004F3E                     __end_of_Default_ISR:
 11984                           	callstack 0
 11985                           
 11986 ;; *************** function _UART1_tx_vect_isr *****************
 11987 ;; Defined at:
 11988 ;;		line 225 in file "mcc_generated_files/uart1.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;		None
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;		None
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  1    wreg      void 
 11995 ;; Registers used:
 11996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/0
 11999 ;;		On exit  : 0/0
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12006 ;;Total ram usage:        0 bytes
 12007 ;; Hardware stack levels used:    1
 12008 ;; Hardware stack levels required when called:    1
 12009 ;; This function calls:
 12010 ;;		Absolute function
 12011 ;;		_UART1_Transmit_ISR
 12012 ;; This function is called by:
 12013 ;;		Interrupt level 2
 12014 ;; This function uses a non-reentrant model
 12015 ;;
 12016                           
 12017                           	psect	text86
 12018  004B70                     __ptext86:
 12019                           	callstack 0
 12020  004B70                     _UART1_tx_vect_isr:
 12021                           	callstack 19
 12022                           
 12023                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
 12024                           
 12025                           ;incstack = 0
 12026  004B70  0101               	movlb	1	; () banked
 12027  004B72  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 12028  004B74  117F               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 12029  004B76  1180               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 12030  004B78  B4D8               	btfsc	status,2,c
 12031  004B7A  0011               	retfie		f
 12032                           
 12033                           ; BSR set to: 1
 12034                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
 12035  004B7C  D801               	call	i2u541_48
 12036  004B7E  0011               	retfie		f
 12037  004B80                     i2u541_48:
 12038  004B80  0005               	push	
 12039  004B82  6EFA               	movwf	pclath,c
 12040  004B84  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 12041  004B86  6EFD               	movwf	tosl,c
 12042  004B88  517F               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 12043  004B8A  6EFE               	movwf	tosh,c
 12044  004B8C  5180               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 12045  004B8E  6EFF               	movwf	tosu,c
 12046  004B90  50FA               	movf	pclath,w,c
 12047  004B92  0012               	return		;indir
 12048  004B94                     __end_of_UART1_tx_vect_isr:
 12049                           	callstack 0
 12050                           
 12051 ;; *************** function _UART1_Transmit_ISR *****************
 12052 ;; Defined at:
 12053 ;;		line 243 in file "mcc_generated_files/uart1.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;		None
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;		None
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  1    wreg      void 
 12060 ;; Registers used:
 12061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12062 ;; Tracked objects:
 12063 ;;		On entry : 3F/1
 12064 ;;		On exit  : 6/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12071 ;;Total ram usage:        0 bytes
 12072 ;; Hardware stack levels used:    1
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_UART1_Initialize
 12077 ;;		_UART1_tx_vect_isr
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           	psect	text87
 12082  004982                     __ptext87:
 12083                           	callstack 0
 12084  004982                     _UART1_Transmit_ISR:
 12085                           	callstack 19
 12086                           
 12087                           ; BSR set to: 1
 12088                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 12089                           
 12090                           ;incstack = 0
 12091  004982  0E08               	movlw	8
 12092  004984  0100               	movlb	0	; () banked
 12093  004986  61A9               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 12094  004988  D012               	goto	i2l344
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 12098  00498A  0E5A               	movlw	low _uart1TxBuffer
 12099  00498C  25AA               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 12100  00498E  6ED9               	movwf	fsr2l,c
 12101  004990  6ADA               	clrf	fsr2h,c
 12102  004992  0E01               	movlw	high _uart1TxBuffer
 12103  004994  22DA               	addwfc	fsr2h,f,c
 12104  004996  50DF               	movf	indf2,w,c
 12105  004998  013D               	movlb	61	; () banked
 12106  00499A  6FEA               	movwf	234,b	;volatile
 12107                           
 12108                           ; BSR set to: 61
 12109  00499C  0100               	movlb	0	; () banked
 12110  00499E  2BAA               	incf	_uart1TxTail& (0+255),f,b	;volatile
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 12114  0049A0  0E07               	movlw	7
 12115  0049A2  65AA               	cpfsgt	_uart1TxTail& (0+255),b
 12116  0049A4  D002               	goto	i2l5778
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
 12120  0049A6  0E00               	movlw	0
 12121  0049A8  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
 12122  0049AA                     i2l5778:
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
 12126  0049AA  2BA9               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 12127                           
 12128                           ;mcc_generated_files/uart1.c: 254:     }
 12129  0049AC  0012               	return	
 12130  0049AE                     i2l344:
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
 12134  0049AE  0139               	movlb	57	; () banked
 12135  0049B0  9993               	bcf	147,4,b	;volatile
 12136  0049B2  0012               	return		;funcret
 12137  0049B4                     __end_of_UART1_Transmit_ISR:
 12138                           	callstack 0
 12139                           
 12140 ;; *************** function _UART1_rx_vect_isr *****************
 12141 ;; Defined at:
 12142 ;;		line 233 in file "mcc_generated_files/uart1.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;		None
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1    wreg      void 
 12149 ;; Registers used:
 12150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/0
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12160 ;;Total ram usage:        0 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:    3
 12163 ;; This function calls:
 12164 ;;		Absolute function
 12165 ;;		_UART1_Receive_ISR
 12166 ;; This function is called by:
 12167 ;;		Interrupt level 2
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text88
 12172  004B94                     __ptext88:
 12173                           	callstack 0
 12174  004B94                     _UART1_rx_vect_isr:
 12175                           	callstack 17
 12176                           
 12177                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
 12178                           
 12179                           ;incstack = 0
 12180  004B94  0101               	movlb	1	; () banked
 12181  004B96  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12182  004B98  1182               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12183  004B9A  1183               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12184  004B9C  B4D8               	btfsc	status,2,c
 12185  004B9E  0011               	retfie		f
 12186                           
 12187                           ; BSR set to: 1
 12188                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
 12189  004BA0  D801               	call	i2u543_48
 12190  004BA2  0011               	retfie		f
 12191  004BA4                     i2u543_48:
 12192  004BA4  0005               	push	
 12193  004BA6  6EFA               	movwf	pclath,c
 12194  004BA8  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12195  004BAA  6EFD               	movwf	tosl,c
 12196  004BAC  5182               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12197  004BAE  6EFE               	movwf	tosh,c
 12198  004BB0  5183               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12199  004BB2  6EFF               	movwf	tosu,c
 12200  004BB4  50FA               	movf	pclath,w,c
 12201  004BB6  0012               	return		;indir
 12202  004BB8                     __end_of_UART1_rx_vect_isr:
 12203                           	callstack 0
 12204                           
 12205 ;; *************** function _UART1_Receive_ISR *****************
 12206 ;; Defined at:
 12207 ;;		line 263 in file "mcc_generated_files/uart1.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;		None
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;		None
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1    wreg      void 
 12214 ;; Registers used:
 12215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12216 ;; Tracked objects:
 12217 ;;		On entry : 3F/1
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12225 ;;Total ram usage:        0 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    2
 12228 ;; This function calls:
 12229 ;;		Absolute function
 12230 ;;		_UART1_DefaultErrorHandler
 12231 ;;		_UART1_DefaultFramingErrorHandler
 12232 ;;		_UART1_DefaultOverrunErrorHandler
 12233 ;;		_UART1_RxDataHandler
 12234 ;; This function is called by:
 12235 ;;		_UART1_Initialize
 12236 ;;		_UART1_rx_vect_isr
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text89
 12241  003FA4                     __ptext89:
 12242                           	callstack 0
 12243  003FA4                     _UART1_Receive_ISR:
 12244                           	callstack 17
 12245                           
 12246                           ; BSR set to: 1
 12247                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 12248                           
 12249                           ;incstack = 0
 12250  003FA4  0E4A               	movlw	low _uart1RxStatusBuffer
 12251  003FA6  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12252  003FA8  6ED9               	movwf	fsr2l,c
 12253  003FAA  6ADA               	clrf	fsr2h,c
 12254  003FAC  0E01               	movlw	high _uart1RxStatusBuffer
 12255  003FAE  22DA               	addwfc	fsr2h,f,c
 12256  003FB0  0E00               	movlw	0
 12257  003FB2  6EDF               	movwf	indf2,c
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
 12261  003FB4  013D               	movlb	61	; () banked
 12262  003FB6  A7F9               	btfss	249,3,b	;volatile
 12263  003FB8  D014               	goto	i2u469_49
 12264                           
 12265                           ; BSR set to: 61
 12266                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 12267  003FBA  0E4A               	movlw	low _uart1RxStatusBuffer
 12268  003FBC  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12269  003FBE  6ED9               	movwf	fsr2l,c
 12270  003FC0  6ADA               	clrf	fsr2h,c
 12271  003FC2  0E01               	movlw	high _uart1RxStatusBuffer
 12272  003FC4  22DA               	addwfc	fsr2h,f,c
 12273  003FC6  0101               	movlb	1	; () banked
 12274  003FC8  82DF               	bsf	indf2,1,c
 12275                           
 12276                           ; BSR set to: 1
 12277                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
 12278  003FCA  D801               	call	i2u469_48
 12279  003FCC  D00A               	goto	i2u469_49
 12280  003FCE                     i2u469_48:
 12281  003FCE  0005               	push	
 12282  003FD0  6EFA               	movwf	pclath,c
 12283  003FD2  517B               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 12284  003FD4  6EFD               	movwf	tosl,c
 12285  003FD6  517C               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 12286  003FD8  6EFE               	movwf	tosh,c
 12287  003FDA  517D               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 12288  003FDC  6EFF               	movwf	tosu,c
 12289  003FDE  50FA               	movf	pclath,w,c
 12290  003FE0  0012               	return		;indir
 12291  003FE2                     i2u469_49:
 12292                           
 12293                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
 12294  003FE2  013D               	movlb	61	; () banked
 12295  003FE4  A3F9               	btfss	249,1,b	;volatile
 12296  003FE6  D014               	goto	i2u471_49
 12297                           
 12298                           ; BSR set to: 61
 12299                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 12300  003FE8  0E4A               	movlw	low _uart1RxStatusBuffer
 12301  003FEA  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12302  003FEC  6ED9               	movwf	fsr2l,c
 12303  003FEE  6ADA               	clrf	fsr2h,c
 12304  003FF0  0E01               	movlw	high _uart1RxStatusBuffer
 12305  003FF2  22DA               	addwfc	fsr2h,f,c
 12306  003FF4  0101               	movlb	1	; () banked
 12307  003FF6  84DF               	bsf	indf2,2,c
 12308                           
 12309                           ; BSR set to: 1
 12310                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
 12311  003FF8  D801               	call	i2u471_48
 12312  003FFA  D00A               	goto	i2u471_49
 12313  003FFC                     i2u471_48:
 12314  003FFC  0005               	push	
 12315  003FFE  6EFA               	movwf	pclath,c
 12316  004000  5178               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 12317  004002  6EFD               	movwf	tosl,c
 12318  004004  5179               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 12319  004006  6EFE               	movwf	tosh,c
 12320  004008  517A               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 12321  00400A  6EFF               	movwf	tosu,c
 12322  00400C  50FA               	movf	pclath,w,c
 12323  00400E  0012               	return		;indir
 12324  004010                     i2u471_49:
 12325                           
 12326                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
 12327  004010  0E4A               	movlw	low _uart1RxStatusBuffer
 12328  004012  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12329  004014  6ED9               	movwf	fsr2l,c
 12330  004016  6ADA               	clrf	fsr2h,c
 12331  004018  0E01               	movlw	high _uart1RxStatusBuffer
 12332  00401A  22DA               	addwfc	fsr2h,f,c
 12333  00401C  50DF               	movf	indf2,w,c
 12334  00401E  B4D8               	btfsc	status,2,c
 12335  004020  D00D               	goto	i2l5798
 12336                           
 12337                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
 12338  004022  D801               	call	i2u473_48
 12339  004024  0012               	return	
 12340  004026                     i2u473_48:
 12341  004026  0005               	push	
 12342  004028  6EFA               	movwf	pclath,c
 12343  00402A  0101               	movlb	1	; () banked
 12344  00402C  5175               	movf	_UART1_ErrorHandler& (0+255),w,b
 12345  00402E  6EFD               	movwf	tosl,c
 12346  004030  5176               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 12347  004032  6EFE               	movwf	tosh,c
 12348  004034  5177               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 12349  004036  6EFF               	movwf	tosu,c
 12350  004038  50FA               	movf	pclath,w,c
 12351  00403A  0012               	return		;indir
 12352  00403C                     i2l5798:
 12353                           
 12354                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
 12355  00403C  ECDC  F025         	call	_UART1_RxDataHandler	;wreg free
 12356  004040  0012               	return		;funcret
 12357  004042                     __end_of_UART1_Receive_ISR:
 12358                           	callstack 0
 12359                           
 12360 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 12361 ;; Defined at:
 12362 ;;		line 299 in file "mcc_generated_files/uart1.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		None
 12371 ;; Tracked objects:
 12372 ;;		On entry : 3F/1
 12373 ;;		On exit  : 3F/1
 12374 ;;		Unchanged: 3F/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_UART1_Initialize
 12386 ;;		_UART1_Receive_ISR
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text90
 12391  004F3E                     __ptext90:
 12392                           	callstack 0
 12393  004F3E                     _UART1_DefaultOverrunErrorHandler:
 12394                           	callstack 18
 12395                           
 12396                           ; BSR set to: 1
 12397                           
 12398                           ;incstack = 0
 12399  004F3E  0012               	return		;funcret
 12400  004F40                     __end_of_UART1_DefaultOverrunErrorHandler:
 12401                           	callstack 0
 12402                           
 12403 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 12404 ;; Defined at:
 12405 ;;		line 297 in file "mcc_generated_files/uart1.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;		None
 12408 ;; Auto vars:     Size  Location     Type
 12409 ;;		None
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  1    wreg      void 
 12412 ;; Registers used:
 12413 ;;		None
 12414 ;; Tracked objects:
 12415 ;;		On entry : 3F/1
 12416 ;;		On exit  : 3F/1
 12417 ;;		Unchanged: 3F/0
 12418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12423 ;;Total ram usage:        0 bytes
 12424 ;; Hardware stack levels used:    1
 12425 ;; This function calls:
 12426 ;;		Nothing
 12427 ;; This function is called by:
 12428 ;;		_UART1_Initialize
 12429 ;;		_UART1_Receive_ISR
 12430 ;; This function uses a non-reentrant model
 12431 ;;
 12432                           
 12433                           	psect	text91
 12434  004F40                     __ptext91:
 12435                           	callstack 0
 12436  004F40                     _UART1_DefaultFramingErrorHandler:
 12437                           	callstack 18
 12438                           
 12439                           ; BSR set to: 1
 12440                           
 12441                           ; BSR set to: 1
 12442                           ;incstack = 0
 12443  004F40  0012               	return		;funcret
 12444  004F42                     __end_of_UART1_DefaultFramingErrorHandler:
 12445                           	callstack 0
 12446                           
 12447 ;; *************** function _UART1_DefaultErrorHandler *****************
 12448 ;; Defined at:
 12449 ;;		line 301 in file "mcc_generated_files/uart1.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;		None
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;		None
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  1    wreg      void 
 12456 ;; Registers used:
 12457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12458 ;; Tracked objects:
 12459 ;;		On entry : 3F/1
 12460 ;;		On exit  : 3F/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12467 ;;Total ram usage:        0 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; Hardware stack levels required when called:    1
 12470 ;; This function calls:
 12471 ;;		_UART1_RxDataHandler
 12472 ;; This function is called by:
 12473 ;;		_UART1_Initialize
 12474 ;;		_UART1_Receive_ISR
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           	psect	text92
 12479  004F2A                     __ptext92:
 12480                           	callstack 0
 12481  004F2A                     _UART1_DefaultErrorHandler:
 12482                           	callstack 17
 12483                           
 12484                           ; BSR set to: 1
 12485                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
 12486                           
 12487                           ; BSR set to: 1
 12488                           ;incstack = 0
 12489  004F2A  ECDC  F025         	call	_UART1_RxDataHandler	;wreg free
 12490                           
 12491                           ; BSR set to: 0
 12492  004F2E  0012               	return		;funcret
 12493  004F30                     __end_of_UART1_DefaultErrorHandler:
 12494                           	callstack 0
 12495                           
 12496 ;; *************** function _UART1_RxDataHandler *****************
 12497 ;; Defined at:
 12498 ;;		line 287 in file "mcc_generated_files/uart1.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;		None
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;		None
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  1    wreg      void 
 12505 ;; Registers used:
 12506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/3D
 12509 ;;		On exit  : 3F/0
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12516 ;;Total ram usage:        0 bytes
 12517 ;; Hardware stack levels used:    1
 12518 ;; This function calls:
 12519 ;;		Nothing
 12520 ;; This function is called by:
 12521 ;;		_UART1_Receive_ISR
 12522 ;;		_UART1_DefaultErrorHandler
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text93
 12527  004BB8                     __ptext93:
 12528                           	callstack 0
 12529  004BB8                     _UART1_RxDataHandler:
 12530                           	callstack 18
 12531                           
 12532                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;incstack = 0
 12536  004BB8  0E52               	movlw	low _uart1RxBuffer
 12537  004BBA  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12538  004BBC  6ED9               	movwf	fsr2l,c
 12539  004BBE  6ADA               	clrf	fsr2h,c
 12540  004BC0  0E01               	movlw	high _uart1RxBuffer
 12541  004BC2  22DA               	addwfc	fsr2h,f,c
 12542  004BC4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 12543  004BCA  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
 12544                           
 12545                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 12546  004BCC  0E07               	movlw	7
 12547  004BCE  645A               	cpfsgt	_uart1RxHead^0,c
 12548  004BD0  D002               	goto	i2l5246
 12549                           
 12550                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
 12551  004BD2  0E00               	movlw	0
 12552  004BD4  6E5A               	movwf	_uart1RxHead^0,c	;volatile
 12553  004BD6                     i2l5246:
 12554                           
 12555                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
 12556  004BD6  0100               	movlb	0	; () banked
 12557  004BD8  2BA7               	incf	_uart1RxCount& (0+255),f,b	;volatile
 12558                           
 12559                           ; BSR set to: 0
 12560  004BDA  0012               	return		;funcret
 12561  004BDC                     __end_of_UART1_RxDataHandler:
 12562                           	callstack 0
 12563                           
 12564 ;; *************** function _UART2_tx_vect_isr *****************
 12565 ;; Defined at:
 12566 ;;		line 226 in file "mcc_generated_files/uart2.c"
 12567 ;; Parameters:    Size  Location     Type
 12568 ;;		None
 12569 ;; Auto vars:     Size  Location     Type
 12570 ;;		None
 12571 ;; Return value:  Size  Location     Type
 12572 ;;                  1    wreg      void 
 12573 ;; Registers used:
 12574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12575 ;; Tracked objects:
 12576 ;;		On entry : 0/0
 12577 ;;		On exit  : 0/0
 12578 ;;		Unchanged: 0/0
 12579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12584 ;;Total ram usage:        0 bytes
 12585 ;; Hardware stack levels used:    1
 12586 ;; Hardware stack levels required when called:    1
 12587 ;; This function calls:
 12588 ;;		Absolute function
 12589 ;;		_UART2_Transmit_ISR
 12590 ;; This function is called by:
 12591 ;;		Interrupt level 2
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text94
 12596  004BDC                     __ptext94:
 12597                           	callstack 0
 12598  004BDC                     _UART2_tx_vect_isr:
 12599                           	callstack 19
 12600                           
 12601                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;incstack = 0
 12605  004BDC  0101               	movlb	1	; () banked
 12606  004BDE  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12607  004BE0  1185               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12608  004BE2  1186               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12609  004BE4  B4D8               	btfsc	status,2,c
 12610  004BE6  0011               	retfie		f
 12611                           
 12612                           ; BSR set to: 1
 12613                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
 12614  004BE8  D801               	call	i2u545_48
 12615  004BEA  0011               	retfie		f
 12616  004BEC                     i2u545_48:
 12617  004BEC  0005               	push	
 12618  004BEE  6EFA               	movwf	pclath,c
 12619  004BF0  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12620  004BF2  6EFD               	movwf	tosl,c
 12621  004BF4  5185               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12622  004BF6  6EFE               	movwf	tosh,c
 12623  004BF8  5186               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12624  004BFA  6EFF               	movwf	tosu,c
 12625  004BFC  50FA               	movf	pclath,w,c
 12626  004BFE  0012               	return		;indir
 12627  004C00                     __end_of_UART2_tx_vect_isr:
 12628                           	callstack 0
 12629                           
 12630 ;; *************** function _UART2_Transmit_ISR *****************
 12631 ;; Defined at:
 12632 ;;		line 244 in file "mcc_generated_files/uart2.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;		None
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;		None
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      void 
 12639 ;; Registers used:
 12640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12641 ;; Tracked objects:
 12642 ;;		On entry : 3F/1
 12643 ;;		On exit  : 6/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12650 ;;Total ram usage:        0 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; This function calls:
 12653 ;;		Nothing
 12654 ;; This function is called by:
 12655 ;;		_UART2_Initialize
 12656 ;;		_UART2_tx_vect_isr
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           	psect	text95
 12661  0049B4                     __ptext95:
 12662                           	callstack 0
 12663  0049B4                     _UART2_Transmit_ISR:
 12664                           	callstack 19
 12665                           
 12666                           ; BSR set to: 1
 12667                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 12668                           
 12669                           ;incstack = 0
 12670  0049B4  0E08               	movlw	8
 12671  0049B6  0100               	movlb	0	; () banked
 12672  0049B8  61A4               	cpfslt	_uart2TxBufferRemaining& (0+255),b
 12673  0049BA  D012               	goto	i2l518
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 12677  0049BC  0E42               	movlw	low _uart2TxBuffer
 12678  0049BE  25A5               	addwf	_uart2TxTail& (0+255),w,b	;volatile
 12679  0049C0  6ED9               	movwf	fsr2l,c
 12680  0049C2  6ADA               	clrf	fsr2h,c
 12681  0049C4  0E01               	movlw	high _uart2TxBuffer
 12682  0049C6  22DA               	addwfc	fsr2h,f,c
 12683  0049C8  50DF               	movf	indf2,w,c
 12684  0049CA  013D               	movlb	61	; () banked
 12685  0049CC  6FD2               	movwf	210,b	;volatile
 12686                           
 12687                           ; BSR set to: 61
 12688  0049CE  0100               	movlb	0	; () banked
 12689  0049D0  2BA5               	incf	_uart2TxTail& (0+255),f,b	;volatile
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 12693  0049D2  0E07               	movlw	7
 12694  0049D4  65A5               	cpfsgt	_uart2TxTail& (0+255),b
 12695  0049D6  D002               	goto	i2l5810
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
 12699  0049D8  0E00               	movlw	0
 12700  0049DA  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
 12701  0049DC                     i2l5810:
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
 12705  0049DC  2BA4               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
 12706                           
 12707                           ;mcc_generated_files/uart2.c: 255:     }
 12708  0049DE  0012               	return	
 12709  0049E0                     i2l518:
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
 12713  0049E0  0139               	movlb	57	; () banked
 12714  0049E2  9796               	bcf	150,3,b	;volatile
 12715  0049E4  0012               	return		;funcret
 12716  0049E6                     __end_of_UART2_Transmit_ISR:
 12717                           	callstack 0
 12718                           
 12719 ;; *************** function _UART2_rx_vect_isr *****************
 12720 ;; Defined at:
 12721 ;;		line 234 in file "mcc_generated_files/uart2.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;		None
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  1    wreg      void 
 12728 ;; Registers used:
 12729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;Total ram usage:        0 bytes
 12740 ;; Hardware stack levels used:    1
 12741 ;; Hardware stack levels required when called:    3
 12742 ;; This function calls:
 12743 ;;		Absolute function
 12744 ;;		_UART2_Receive_ISR
 12745 ;; This function is called by:
 12746 ;;		Interrupt level 2
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750                           	psect	text96
 12751  004C00                     __ptext96:
 12752                           	callstack 0
 12753  004C00                     _UART2_rx_vect_isr:
 12754                           	callstack 17
 12755                           
 12756                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
 12757                           
 12758                           ;incstack = 0
 12759  004C00  0101               	movlb	1	; () banked
 12760  004C02  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12761  004C04  1188               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12762  004C06  1189               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12763  004C08  B4D8               	btfsc	status,2,c
 12764  004C0A  0011               	retfie		f
 12765                           
 12766                           ; BSR set to: 1
 12767                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
 12768  004C0C  D801               	call	i2u547_48
 12769  004C0E  0011               	retfie		f
 12770  004C10                     i2u547_48:
 12771  004C10  0005               	push	
 12772  004C12  6EFA               	movwf	pclath,c
 12773  004C14  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12774  004C16  6EFD               	movwf	tosl,c
 12775  004C18  5188               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12776  004C1A  6EFE               	movwf	tosh,c
 12777  004C1C  5189               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12778  004C1E  6EFF               	movwf	tosu,c
 12779  004C20  50FA               	movf	pclath,w,c
 12780  004C22  0012               	return		;indir
 12781  004C24                     __end_of_UART2_rx_vect_isr:
 12782                           	callstack 0
 12783                           
 12784 ;; *************** function _UART2_Receive_ISR *****************
 12785 ;; Defined at:
 12786 ;;		line 264 in file "mcc_generated_files/uart2.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;		None
 12789 ;; Auto vars:     Size  Location     Type
 12790 ;;		None
 12791 ;; Return value:  Size  Location     Type
 12792 ;;                  1    wreg      void 
 12793 ;; Registers used:
 12794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12795 ;; Tracked objects:
 12796 ;;		On entry : 3F/1
 12797 ;;		On exit  : 0/0
 12798 ;;		Unchanged: 0/0
 12799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12804 ;;Total ram usage:        0 bytes
 12805 ;; Hardware stack levels used:    1
 12806 ;; Hardware stack levels required when called:    2
 12807 ;; This function calls:
 12808 ;;		Absolute function
 12809 ;;		_UART2_DefaultErrorHandler
 12810 ;;		_UART2_DefaultFramingErrorHandler
 12811 ;;		_UART2_DefaultOverrunErrorHandler
 12812 ;;		_UART2_RxDataHandler
 12813 ;; This function is called by:
 12814 ;;		_UART2_Initialize
 12815 ;;		_UART2_rx_vect_isr
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           	psect	text97
 12820  004042                     __ptext97:
 12821                           	callstack 0
 12822  004042                     _UART2_Receive_ISR:
 12823                           	callstack 17
 12824                           
 12825                           ; BSR set to: 1
 12826                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
 12827                           
 12828                           ;incstack = 0
 12829  004042  0E32               	movlw	low _uart2RxStatusBuffer
 12830  004044  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12831  004046  6ED9               	movwf	fsr2l,c
 12832  004048  6ADA               	clrf	fsr2h,c
 12833  00404A  0E01               	movlw	high _uart2RxStatusBuffer
 12834  00404C  22DA               	addwfc	fsr2h,f,c
 12835  00404E  0E00               	movlw	0
 12836  004050  6EDF               	movwf	indf2,c
 12837                           
 12838                           ; BSR set to: 1
 12839                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
 12840  004052  013D               	movlb	61	; () banked
 12841  004054  A7E1               	btfss	225,3,b	;volatile
 12842  004056  D014               	goto	i2u477_49
 12843                           
 12844                           ; BSR set to: 61
 12845                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
 12846  004058  0E32               	movlw	low _uart2RxStatusBuffer
 12847  00405A  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12848  00405C  6ED9               	movwf	fsr2l,c
 12849  00405E  6ADA               	clrf	fsr2h,c
 12850  004060  0E01               	movlw	high _uart2RxStatusBuffer
 12851  004062  22DA               	addwfc	fsr2h,f,c
 12852  004064  0101               	movlb	1	; () banked
 12853  004066  82DF               	bsf	indf2,1,c
 12854                           
 12855                           ; BSR set to: 1
 12856                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
 12857  004068  D801               	call	i2u477_48
 12858  00406A  D00A               	goto	i2u477_49
 12859  00406C                     i2u477_48:
 12860  00406C  0005               	push	
 12861  00406E  6EFA               	movwf	pclath,c
 12862  004070  5172               	movf	_UART2_FramingErrorHandler& (0+255),w,b
 12863  004072  6EFD               	movwf	tosl,c
 12864  004074  5173               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
 12865  004076  6EFE               	movwf	tosh,c
 12866  004078  5174               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
 12867  00407A  6EFF               	movwf	tosu,c
 12868  00407C  50FA               	movf	pclath,w,c
 12869  00407E  0012               	return		;indir
 12870  004080                     i2u477_49:
 12871                           
 12872                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
 12873  004080  013D               	movlb	61	; () banked
 12874  004082  A3E1               	btfss	225,1,b	;volatile
 12875  004084  D014               	goto	i2u479_49
 12876                           
 12877                           ; BSR set to: 61
 12878                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
 12879  004086  0E32               	movlw	low _uart2RxStatusBuffer
 12880  004088  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12881  00408A  6ED9               	movwf	fsr2l,c
 12882  00408C  6ADA               	clrf	fsr2h,c
 12883  00408E  0E01               	movlw	high _uart2RxStatusBuffer
 12884  004090  22DA               	addwfc	fsr2h,f,c
 12885  004092  0101               	movlb	1	; () banked
 12886  004094  84DF               	bsf	indf2,2,c
 12887                           
 12888                           ; BSR set to: 1
 12889                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
 12890  004096  D801               	call	i2u479_48
 12891  004098  D00A               	goto	i2u479_49
 12892  00409A                     i2u479_48:
 12893  00409A  0005               	push	
 12894  00409C  6EFA               	movwf	pclath,c
 12895  00409E  516F               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
 12896  0040A0  6EFD               	movwf	tosl,c
 12897  0040A2  5170               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
 12898  0040A4  6EFE               	movwf	tosh,c
 12899  0040A6  5171               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
 12900  0040A8  6EFF               	movwf	tosu,c
 12901  0040AA  50FA               	movf	pclath,w,c
 12902  0040AC  0012               	return		;indir
 12903  0040AE                     i2u479_49:
 12904                           
 12905                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
 12906  0040AE  0E32               	movlw	low _uart2RxStatusBuffer
 12907  0040B0  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12908  0040B2  6ED9               	movwf	fsr2l,c
 12909  0040B4  6ADA               	clrf	fsr2h,c
 12910  0040B6  0E01               	movlw	high _uart2RxStatusBuffer
 12911  0040B8  22DA               	addwfc	fsr2h,f,c
 12912  0040BA  50DF               	movf	indf2,w,c
 12913  0040BC  B4D8               	btfsc	status,2,c
 12914  0040BE  D00D               	goto	i2l5830
 12915                           
 12916                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
 12917  0040C0  D801               	call	i2u481_48
 12918  0040C2  0012               	return	
 12919  0040C4                     i2u481_48:
 12920  0040C4  0005               	push	
 12921  0040C6  6EFA               	movwf	pclath,c
 12922  0040C8  0101               	movlb	1	; () banked
 12923  0040CA  516C               	movf	_UART2_ErrorHandler& (0+255),w,b
 12924  0040CC  6EFD               	movwf	tosl,c
 12925  0040CE  516D               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
 12926  0040D0  6EFE               	movwf	tosh,c
 12927  0040D2  516E               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
 12928  0040D4  6EFF               	movwf	tosu,c
 12929  0040D6  50FA               	movf	pclath,w,c
 12930  0040D8  0012               	return		;indir
 12931  0040DA                     i2l5830:
 12932                           
 12933                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
 12934  0040DA  EC12  F026         	call	_UART2_RxDataHandler	;wreg free
 12935  0040DE  0012               	return		;funcret
 12936  0040E0                     __end_of_UART2_Receive_ISR:
 12937                           	callstack 0
 12938                           
 12939 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
 12940 ;; Defined at:
 12941 ;;		line 300 in file "mcc_generated_files/uart2.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;		None
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;		None
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      void 
 12948 ;; Registers used:
 12949 ;;		None
 12950 ;; Tracked objects:
 12951 ;;		On entry : 3F/1
 12952 ;;		On exit  : 3F/1
 12953 ;;		Unchanged: 3F/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12959 ;;Total ram usage:        0 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; This function calls:
 12962 ;;		Nothing
 12963 ;; This function is called by:
 12964 ;;		_UART2_Initialize
 12965 ;;		_UART2_Receive_ISR
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           	psect	text98
 12970  004F42                     __ptext98:
 12971                           	callstack 0
 12972  004F42                     _UART2_DefaultOverrunErrorHandler:
 12973                           	callstack 18
 12974                           
 12975                           ; BSR set to: 1
 12976                           
 12977                           ;incstack = 0
 12978  004F42  0012               	return		;funcret
 12979  004F44                     __end_of_UART2_DefaultOverrunErrorHandler:
 12980                           	callstack 0
 12981                           
 12982 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
 12983 ;; Defined at:
 12984 ;;		line 298 in file "mcc_generated_files/uart2.c"
 12985 ;; Parameters:    Size  Location     Type
 12986 ;;		None
 12987 ;; Auto vars:     Size  Location     Type
 12988 ;;		None
 12989 ;; Return value:  Size  Location     Type
 12990 ;;                  1    wreg      void 
 12991 ;; Registers used:
 12992 ;;		None
 12993 ;; Tracked objects:
 12994 ;;		On entry : 3F/1
 12995 ;;		On exit  : 3F/1
 12996 ;;		Unchanged: 3F/0
 12997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13002 ;;Total ram usage:        0 bytes
 13003 ;; Hardware stack levels used:    1
 13004 ;; This function calls:
 13005 ;;		Nothing
 13006 ;; This function is called by:
 13007 ;;		_UART2_Initialize
 13008 ;;		_UART2_Receive_ISR
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012                           	psect	text99
 13013  004F44                     __ptext99:
 13014                           	callstack 0
 13015  004F44                     _UART2_DefaultFramingErrorHandler:
 13016                           	callstack 18
 13017                           
 13018                           ; BSR set to: 1
 13019                           
 13020                           ; BSR set to: 1
 13021                           ;incstack = 0
 13022  004F44  0012               	return		;funcret
 13023  004F46                     __end_of_UART2_DefaultFramingErrorHandler:
 13024                           	callstack 0
 13025                           
 13026 ;; *************** function _UART2_DefaultErrorHandler *****************
 13027 ;; Defined at:
 13028 ;;		line 302 in file "mcc_generated_files/uart2.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;		None
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13037 ;; Tracked objects:
 13038 ;;		On entry : 3F/1
 13039 ;;		On exit  : 3F/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13046 ;;Total ram usage:        0 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; Hardware stack levels required when called:    1
 13049 ;; This function calls:
 13050 ;;		_UART2_RxDataHandler
 13051 ;; This function is called by:
 13052 ;;		_UART2_Initialize
 13053 ;;		_UART2_Receive_ISR
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           	psect	text100
 13058  004F30                     __ptext100:
 13059                           	callstack 0
 13060  004F30                     _UART2_DefaultErrorHandler:
 13061                           	callstack 17
 13062                           
 13063                           ; BSR set to: 1
 13064                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
 13065                           
 13066                           ; BSR set to: 1
 13067                           ;incstack = 0
 13068  004F30  EC12  F026         	call	_UART2_RxDataHandler	;wreg free
 13069                           
 13070                           ; BSR set to: 0
 13071  004F34  0012               	return		;funcret
 13072  004F36                     __end_of_UART2_DefaultErrorHandler:
 13073                           	callstack 0
 13074                           
 13075 ;; *************** function _UART2_RxDataHandler *****************
 13076 ;; Defined at:
 13077 ;;		line 288 in file "mcc_generated_files/uart2.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;		None
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;		None
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  1    wreg      void 
 13084 ;; Registers used:
 13085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/3D
 13088 ;;		On exit  : 3F/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13095 ;;Total ram usage:        0 bytes
 13096 ;; Hardware stack levels used:    1
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_UART2_Receive_ISR
 13101 ;;		_UART2_DefaultErrorHandler
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105                           	psect	text101
 13106  004C24                     __ptext101:
 13107                           	callstack 0
 13108  004C24                     _UART2_RxDataHandler:
 13109                           	callstack 18
 13110                           
 13111                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;incstack = 0
 13115  004C24  0E3A               	movlw	low _uart2RxBuffer
 13116  004C26  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 13117  004C28  6ED9               	movwf	fsr2l,c
 13118  004C2A  6ADA               	clrf	fsr2h,c
 13119  004C2C  0E01               	movlw	high _uart2RxBuffer
 13120  004C2E  22DA               	addwfc	fsr2h,f,c
 13121  004C30  006F F743 FFDF     	movff	15824,indf2	;volatile
 13122  004C36  2A59               	incf	_uart2RxHead^0,f,c	;volatile
 13123                           
 13124                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 13125  004C38  0E07               	movlw	7
 13126  004C3A  6459               	cpfsgt	_uart2RxHead^0,c
 13127  004C3C  D002               	goto	i2l5266
 13128                           
 13129                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
 13130  004C3E  0E00               	movlw	0
 13131  004C40  6E59               	movwf	_uart2RxHead^0,c	;volatile
 13132  004C42                     i2l5266:
 13133                           
 13134                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
 13135  004C42  0100               	movlb	0	; () banked
 13136  004C44  2BA3               	incf	_uart2RxCount& (0+255),f,b	;volatile
 13137                           
 13138                           ; BSR set to: 0
 13139  004C46  0012               	return		;funcret
 13140  004C48                     __end_of_UART2_RxDataHandler:
 13141                           	callstack 0
 13142                           
 13143 ;; *************** function _TMR6_ISR *****************
 13144 ;; Defined at:
 13145 ;;		line 168 in file "mcc_generated_files/tmr6.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;		None
 13148 ;; Auto vars:     Size  Location     Type
 13149 ;;		None
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  1    wreg      void 
 13152 ;; Registers used:
 13153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13163 ;;Total ram usage:        0 bytes
 13164 ;; Hardware stack levels used:    1
 13165 ;; Hardware stack levels required when called:    1
 13166 ;; This function calls:
 13167 ;;		Absolute function
 13168 ;;		_TMR6_DefaultInterruptHandler
 13169 ;; This function is called by:
 13170 ;;		Interrupt level 2
 13171 ;; This function uses a non-reentrant model
 13172 ;;
 13173                           
 13174                           	psect	text102
 13175  004B24                     __ptext102:
 13176                           	callstack 0
 13177  004B24                     _TMR6_ISR:
 13178                           	callstack 19
 13179                           
 13180                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;incstack = 0
 13184  004B24  0139               	movlb	57	; () banked
 13185  004B26  91A9               	bcf	169,0,b	;volatile
 13186                           
 13187                           ; BSR set to: 57
 13188                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
 13189  004B28  0101               	movlb	1	; () banked
 13190  004B2A  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13191  004B2C  116A               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13192  004B2E  116B               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13193  004B30  B4D8               	btfsc	status,2,c
 13194  004B32  0011               	retfie		f
 13195                           
 13196                           ; BSR set to: 1
 13197                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
 13198  004B34  D801               	call	i2u549_48
 13199  004B36  0011               	retfie		f
 13200  004B38                     i2u549_48:
 13201  004B38  0005               	push	
 13202  004B3A  6EFA               	movwf	pclath,c
 13203  004B3C  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13204  004B3E  6EFD               	movwf	tosl,c
 13205  004B40  516A               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13206  004B42  6EFE               	movwf	tosh,c
 13207  004B44  516B               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13208  004B46  6EFF               	movwf	tosu,c
 13209  004B48  50FA               	movf	pclath,w,c
 13210  004B4A  0012               	return		;indir
 13211  004B4C                     __end_of_TMR6_ISR:
 13212                           	callstack 0
 13213                           
 13214 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13215 ;; Defined at:
 13216 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;		None
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;  i               1    2[COMRAM] unsigned char 
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1    wreg      void 
 13223 ;; Registers used:
 13224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13225 ;; Tracked objects:
 13226 ;;		On entry : 3F/1
 13227 ;;		On exit  : 3F/1
 13228 ;;		Unchanged: 3F/0
 13229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13234 ;;Total ram usage:        3 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; This function calls:
 13237 ;;		Nothing
 13238 ;; This function is called by:
 13239 ;;		_TMR6_Initialize
 13240 ;;		_TMR6_ISR
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text103
 13245  0047CA                     __ptext103:
 13246                           	callstack 0
 13247  0047CA                     _TMR6_DefaultInterruptHandler:
 13248                           	callstack 19
 13249                           
 13250                           ; BSR set to: 1
 13251                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 13252                           
 13253                           ;incstack = 0
 13254  0047CA  0E00               	movlw	0
 13255  0047CC  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
 13256  0047CE                     i2l5838:
 13257                           
 13258                           ; BSR set to: 1
 13259                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
 13260  0047CE  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13261  0047D0  0D02               	mullw	2
 13262  0047D2  0E20               	movlw	low _tickCount
 13263  0047D4  24F3               	addwf	243,w,c
 13264  0047D6  6ED9               	movwf	fsr2l,c
 13265  0047D8  0E01               	movlw	high _tickCount
 13266  0047DA  20F4               	addwfc	prodh,w,c
 13267  0047DC  6EDA               	movwf	fsr2h,c
 13268  0047DE  50DE               	movf	postinc2,w,c
 13269  0047E0  10DE               	iorwf	postinc2,w,c
 13270  0047E2  B4D8               	btfsc	status,2,c
 13271  0047E4  D00B               	goto	i2l5842
 13272                           
 13273                           ; BSR set to: 1
 13274                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
 13275  0047E6  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13276  0047E8  0D02               	mullw	2
 13277  0047EA  0E20               	movlw	low _tickCount
 13278  0047EC  24F3               	addwf	243,w,c
 13279  0047EE  6ED9               	movwf	fsr2l,c
 13280  0047F0  0E01               	movlw	high _tickCount
 13281  0047F2  20F4               	addwfc	prodh,w,c
 13282  0047F4  6EDA               	movwf	fsr2h,c
 13283  0047F6  06DE               	decf	postinc2,f,c
 13284  0047F8  0E00               	movlw	0
 13285  0047FA  5ADD               	subwfb	postdec2,f,c
 13286  0047FC                     i2l5842:
 13287                           
 13288                           ; BSR set to: 1
 13289                           ;mcc_generated_files/tmr6.c: 194:  }
 13290  0047FC  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
 13291                           
 13292                           ; BSR set to: 1
 13293  0047FE  0E08               	movlw	8
 13294  004800  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
 13295  004802  D7E5               	goto	i2l5838
 13296  004804  0012               	return	
 13297  004806                     __end_of_TMR6_DefaultInterruptHandler:
 13298                           	callstack 0
 13299                           
 13300 ;; *************** function _TMR5_ISR *****************
 13301 ;; Defined at:
 13302 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 3F/1
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13320 ;;Total ram usage:        0 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:    2
 13323 ;; This function calls:
 13324 ;;		_TMR5_CallBack
 13325 ;;		_TMR5_WriteTimer
 13326 ;; This function is called by:
 13327 ;;		Interrupt level 2
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text104
 13332  0049E8                     __ptext104:
 13333                           	callstack 0
 13334  0049E8                     _TMR5_ISR:
 13335                           	callstack 18
 13336                           
 13337                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
 13338                           
 13339                           ; BSR set to: 1
 13340                           ;incstack = 0
 13341  0049E8  0139               	movlb	57	; () banked
 13342  0049EA  9DA8               	bcf	168,6,b	;volatile
 13343                           
 13344                           ; BSR set to: 57
 13345                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
 13346  0049EC  C192  F004         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 13347  0049F0  C193  F005         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 13348  0049F4  EC24  F026         	call	_TMR5_WriteTimer	;wreg free
 13349                           
 13350                           ; BSR set to: 57
 13351                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
 13352  0049F8  0101               	movlb	1	; () banked
 13353  0049FA  4B90               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 13354  0049FC  2B91               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 13355  0049FE  5191               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 13356  004A00  E104               	bnz	i2u550_40
 13357  004A02  0E32               	movlw	50
 13358  004A04  5D90               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 13359  004A06  A0D8               	btfss	status,0,c
 13360  004A08  0011               	retfie		f
 13361  004A0A                     i2u550_40:
 13362                           
 13363                           ; BSR set to: 1
 13364                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
 13365  004A0A  EC47  F026         	call	_TMR5_CallBack	;wreg free
 13366                           
 13367                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
 13368  004A0E  0E00               	movlw	0
 13369  004A10  0101               	movlb	1	; () banked
 13370  004A12  6F91               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 13371  004A14  0E00               	movlw	0
 13372  004A16  6F90               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 13373                           
 13374                           ; BSR set to: 1
 13375  004A18  0011               	retfie		f
 13376  004A1A                     __end_of_TMR5_ISR:
 13377                           	callstack 0
 13378                           
 13379 ;; *************** function _TMR5_WriteTimer *****************
 13380 ;; Defined at:
 13381 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;  timerVal        2    3[COMRAM] unsigned short 
 13384 ;; Auto vars:     Size  Location     Type
 13385 ;;		None
 13386 ;; Return value:  Size  Location     Type
 13387 ;;                  1    wreg      void 
 13388 ;; Registers used:
 13389 ;;		None
 13390 ;; Tracked objects:
 13391 ;;		On entry : 3F/39
 13392 ;;		On exit  : 3F/39
 13393 ;;		Unchanged: 3E/0
 13394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13399 ;;Total ram usage:        2 bytes
 13400 ;; Hardware stack levels used:    1
 13401 ;; This function calls:
 13402 ;;		Nothing
 13403 ;; This function is called by:
 13404 ;;		_TMR5_ISR
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text105
 13409  004C48                     __ptext105:
 13410                           	callstack 0
 13411  004C48                     _TMR5_WriteTimer:
 13412                           	callstack 19
 13413                           
 13414                           ; BSR set to: 57
 13415                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
 13416                           
 13417                           ; BSR set to: 1
 13418                           ;incstack = 0
 13419  004C48  A49A               	btfss	154,2,c	;volatile
 13420  004C4A  D009               	goto	i2l776
 13421                           
 13422                           ; BSR set to: 57
 13423                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
 13424  004C4C  909A               	bcf	154,0,c	;volatile
 13425                           
 13426                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
 13427  004C4E  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13428                           
 13429                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
 13430  004C54  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13431                           
 13432                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
 13433  004C5A  809A               	bsf	154,0,c	;volatile
 13434                           
 13435                           ;mcc_generated_files/tmr5.c: 142:     }
 13436  004C5C  0012               	return	
 13437  004C5E                     i2l776:
 13438                           
 13439                           ; BSR set to: 57
 13440                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
 13441  004C5E  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13442                           
 13443                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
 13444  004C64  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13445                           
 13446                           ; BSR set to: 57
 13447  004C6A  0012               	return		;funcret
 13448  004C6C                     __end_of_TMR5_WriteTimer:
 13449                           	callstack 0
 13450                           
 13451 ;; *************** function _TMR5_CallBack *****************
 13452 ;; Defined at:
 13453 ;;		line 185 in file "mcc_generated_files/tmr5.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13462 ;; Tracked objects:
 13463 ;;		On entry : 3F/1
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13471 ;;Total ram usage:        0 bytes
 13472 ;; Hardware stack levels used:    1
 13473 ;; Hardware stack levels required when called:    1
 13474 ;; This function calls:
 13475 ;;		Absolute function
 13476 ;;		_TMR5_DefaultInterruptHandler
 13477 ;; This function is called by:
 13478 ;;		_TMR5_ISR
 13479 ;; This function uses a non-reentrant model
 13480 ;;
 13481                           
 13482                           	psect	text106
 13483  004C8E                     __ptext106:
 13484                           	callstack 0
 13485  004C8E                     _TMR5_CallBack:
 13486                           	callstack 18
 13487                           
 13488                           ; BSR set to: 1
 13489                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
 13490                           
 13491                           ; BSR set to: 57
 13492                           ;incstack = 0
 13493  004C8E  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13494  004C90  1167               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13495  004C92  1168               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13496  004C94  B4D8               	btfsc	status,2,c
 13497  004C96  0012               	return	
 13498                           
 13499                           ; BSR set to: 1
 13500                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
 13501  004C98  D801               	call	i2u486_48
 13502  004C9A  0012               	return	
 13503  004C9C                     i2u486_48:
 13504  004C9C  0005               	push	
 13505  004C9E  6EFA               	movwf	pclath,c
 13506  004CA0  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13507  004CA2  6EFD               	movwf	tosl,c
 13508  004CA4  5167               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13509  004CA6  6EFE               	movwf	tosh,c
 13510  004CA8  5168               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13511  004CAA  6EFF               	movwf	tosu,c
 13512  004CAC  50FA               	movf	pclath,w,c
 13513  004CAE  0012               	return		;indir
 13514  004CB0                     __end_of_TMR5_CallBack:
 13515                           	callstack 0
 13516                           
 13517 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13518 ;; Defined at:
 13519 ;;		line 198 in file "mcc_generated_files/tmr5.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      void 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2, status,0
 13528 ;; Tracked objects:
 13529 ;;		On entry : 3F/1
 13530 ;;		On exit  : 3F/1
 13531 ;;		Unchanged: 3F/0
 13532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13537 ;;Total ram usage:        1 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; This function calls:
 13540 ;;		Nothing
 13541 ;; This function is called by:
 13542 ;;		_TMR5_Initialize
 13543 ;;		_TMR5_CallBack
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           	psect	text107
 13548  004DAC                     __ptext107:
 13549                           	callstack 0
 13550  004DAC                     _TMR5_DefaultInterruptHandler:
 13551                           	callstack 18
 13552                           
 13553                           ; BSR set to: 1
 13554                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 13555                           
 13556                           ;incstack = 0
 13557  004DAC  A0BE               	btfss	190,0,c	;volatile
 13558  004DAE  D002               	goto	i2u452_40
 13559  004DB0  0E01               	movlw	1
 13560  004DB2  D001               	goto	i2u452_46
 13561  004DB4                     i2u452_40:
 13562  004DB4  0E00               	movlw	0
 13563  004DB6                     i2u452_46:
 13564  004DB6  0AFF               	xorlw	255
 13565  004DB8  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
 13566  004DBA  50BE               	movf	190,w,c	;volatile
 13567  004DBC  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13568  004DBE  0BFE               	andlw	-2
 13569  004DC0  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13570  004DC2  6EBE               	movwf	190,c	;volatile
 13571                           
 13572                           ; BSR set to: 1
 13573  004DC4  0012               	return		;funcret
 13574  004DC6                     __end_of_TMR5_DefaultInterruptHandler:
 13575                           	callstack 0
 13576                           
 13577                           ;
 13578                           ; Interrupt Vector Table @ 0x8
 13579                           ;
 13580                           
 13581                           	psect	ivt0x8
 13582  000008                     __pivt0x8:
 13583                           	callstack 0
 13584  000008                     ivt0x8_base:
 13585                           	callstack 0
 13586                           
 13587                           ; Vector 0 : SWINT
 13588  000008  13CF               	dw	_Default_ISR shr (0+2)
 13589                           
 13590                           ; Vector 1 : HLVD
 13591  00000A  13CF               	dw	_Default_ISR shr (0+2)
 13592                           
 13593                           ; Vector 2 : OSF
 13594  00000C  13CF               	dw	_Default_ISR shr (0+2)
 13595                           
 13596                           ; Vector 3 : CSW
 13597  00000E  13CF               	dw	_Default_ISR shr (0+2)
 13598                           
 13599                           ; Vector 4 : NVM
 13600  000010  13CF               	dw	_Default_ISR shr (0+2)
 13601                           
 13602                           ; Vector 5 : SCAN
 13603  000012  13CF               	dw	_Default_ISR shr (0+2)
 13604                           
 13605                           ; Vector 6 : CRC
 13606  000014  13CF               	dw	_Default_ISR shr (0+2)
 13607                           
 13608                           ; Vector 7 : IOC
 13609  000016  13CF               	dw	_Default_ISR shr (0+2)
 13610                           
 13611                           ; Vector 8 : INT0
 13612  000018  13CF               	dw	_Default_ISR shr (0+2)
 13613                           
 13614                           ; Vector 9 : ZCD
 13615  00001A  13CF               	dw	_Default_ISR shr (0+2)
 13616                           
 13617                           ; Vector 10 : AD
 13618  00001C  13CF               	dw	_Default_ISR shr (0+2)
 13619                           
 13620                           ; Vector 11 : ADT
 13621  00001E  13CF               	dw	_Default_ISR shr (0+2)
 13622                           
 13623                           ; Vector 12 : CMP1
 13624  000020  13CF               	dw	_Default_ISR shr (0+2)
 13625                           
 13626                           ; Vector 13 : SMT1
 13627  000022  13CF               	dw	_Default_ISR shr (0+2)
 13628                           
 13629                           ; Vector 14 : SMT1PRA
 13630  000024  13CF               	dw	_Default_ISR shr (0+2)
 13631                           
 13632                           ; Vector 15 : SMT1PRW
 13633  000026  13CF               	dw	_Default_ISR shr (0+2)
 13634                           
 13635                           ; Vector 16 : DMA1SCNT
 13636  000028  13CF               	dw	_Default_ISR shr (0+2)
 13637                           
 13638                           ; Vector 17 : DMA1DCNT
 13639  00002A  13CF               	dw	_Default_ISR shr (0+2)
 13640                           
 13641                           ; Vector 18 : DMA1OR
 13642  00002C  13CF               	dw	_Default_ISR shr (0+2)
 13643                           
 13644                           ; Vector 19 : DMA1A
 13645  00002E  13CF               	dw	_Default_ISR shr (0+2)
 13646                           
 13647                           ; Vector 20 : SPI1RX
 13648  000030  13CF               	dw	_Default_ISR shr (0+2)
 13649                           
 13650                           ; Vector 21 : SPI1TX
 13651  000032  13CF               	dw	_Default_ISR shr (0+2)
 13652                           
 13653                           ; Vector 22 : SPI1
 13654  000034  13CF               	dw	_Default_ISR shr (0+2)
 13655                           
 13656                           ; Vector 23 : I2C1RX
 13657  000036  13CF               	dw	_Default_ISR shr (0+2)
 13658                           
 13659                           ; Vector 24 : I2C1TX
 13660  000038  13CF               	dw	_Default_ISR shr (0+2)
 13661                           
 13662                           ; Vector 25 : I2C1
 13663  00003A  13CF               	dw	_Default_ISR shr (0+2)
 13664                           
 13665                           ; Vector 26 : I2C1E
 13666  00003C  13CF               	dw	_Default_ISR shr (0+2)
 13667                           
 13668                           ; Vector 27 : U1RX
 13669  00003E  12E5               	dw	_UART1_rx_vect_isr shr (0+2)
 13670                           
 13671                           ; Vector 28 : U1TX
 13672  000040  12DC               	dw	_UART1_tx_vect_isr shr (0+2)
 13673                           
 13674                           ; Vector 29 : U1E
 13675  000042  13CF               	dw	_Default_ISR shr (0+2)
 13676                           
 13677                           ; Vector 30 : U1
 13678  000044  13CF               	dw	_Default_ISR shr (0+2)
 13679                           
 13680                           ; Vector 31 : TMR0
 13681  000046  13CF               	dw	_Default_ISR shr (0+2)
 13682                           
 13683                           ; Vector 32 : TMR1
 13684  000048  13CF               	dw	_Default_ISR shr (0+2)
 13685                           
 13686                           ; Vector 33 : TMR1G
 13687  00004A  13CF               	dw	_Default_ISR shr (0+2)
 13688                           
 13689                           ; Vector 34 : TMR2
 13690  00004C  13CF               	dw	_Default_ISR shr (0+2)
 13691                           
 13692                           ; Vector 35 : CCP1
 13693  00004E  13CF               	dw	_Default_ISR shr (0+2)
 13694                           
 13695                           ; Vector 36 : Undefined
 13696  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13697                           
 13698                           ; Vector 37 : NCO1
 13699  000052  13CF               	dw	_Default_ISR shr (0+2)
 13700                           
 13701                           ; Vector 38 : CWG1
 13702  000054  13CF               	dw	_Default_ISR shr (0+2)
 13703                           
 13704                           ; Vector 39 : CLC1
 13705  000056  13CF               	dw	_Default_ISR shr (0+2)
 13706                           
 13707                           ; Vector 40 : INT1
 13708  000058  13CF               	dw	_Default_ISR shr (0+2)
 13709                           
 13710                           ; Vector 41 : CMP2
 13711  00005A  13CF               	dw	_Default_ISR shr (0+2)
 13712                           
 13713                           ; Vector 42 : DMA2SCNT
 13714  00005C  13CF               	dw	_Default_ISR shr (0+2)
 13715                           
 13716                           ; Vector 43 : DMA2DCNT
 13717  00005E  13CF               	dw	_Default_ISR shr (0+2)
 13718                           
 13719                           ; Vector 44 : DMA2OR
 13720  000060  13CF               	dw	_Default_ISR shr (0+2)
 13721                           
 13722                           ; Vector 45 : DMA2A
 13723  000062  13CF               	dw	_Default_ISR shr (0+2)
 13724                           
 13725                           ; Vector 46 : I2C2RX
 13726  000064  13CF               	dw	_Default_ISR shr (0+2)
 13727                           
 13728                           ; Vector 47 : I2C2TX
 13729  000066  13CF               	dw	_Default_ISR shr (0+2)
 13730                           
 13731                           ; Vector 48 : I2C2
 13732  000068  13CF               	dw	_Default_ISR shr (0+2)
 13733                           
 13734                           ; Vector 49 : I2C2E
 13735  00006A  13CF               	dw	_Default_ISR shr (0+2)
 13736                           
 13737                           ; Vector 50 : U2RX
 13738  00006C  1300               	dw	_UART2_rx_vect_isr shr (0+2)
 13739                           
 13740                           ; Vector 51 : U2TX
 13741  00006E  12F7               	dw	_UART2_tx_vect_isr shr (0+2)
 13742                           
 13743                           ; Vector 52 : U2E
 13744  000070  13CF               	dw	_Default_ISR shr (0+2)
 13745                           
 13746                           ; Vector 53 : U2
 13747  000072  13CF               	dw	_Default_ISR shr (0+2)
 13748                           
 13749                           ; Vector 54 : TMR3
 13750  000074  13CF               	dw	_Default_ISR shr (0+2)
 13751                           
 13752                           ; Vector 55 : TMR3G
 13753  000076  13CF               	dw	_Default_ISR shr (0+2)
 13754                           
 13755                           ; Vector 56 : TMR4
 13756  000078  13CF               	dw	_Default_ISR shr (0+2)
 13757                           
 13758                           ; Vector 57 : CCP2
 13759  00007A  13CF               	dw	_Default_ISR shr (0+2)
 13760                           
 13761                           ; Vector 58 : Undefined
 13762  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13763                           
 13764                           ; Vector 59 : CWG2
 13765  00007E  13CF               	dw	_Default_ISR shr (0+2)
 13766                           
 13767                           ; Vector 60 : CLC2
 13768  000080  13CF               	dw	_Default_ISR shr (0+2)
 13769                           
 13770                           ; Vector 61 : INT2
 13771  000082  13CF               	dw	_Default_ISR shr (0+2)
 13772                           
 13773                           ; Vector 62 : Undefined
 13774  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13775                           
 13776                           ; Vector 63 : Undefined
 13777  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13778                           
 13779                           ; Vector 64 : Undefined
 13780  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13781                           
 13782                           ; Vector 65 : Undefined
 13783  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13784                           
 13785                           ; Vector 66 : Undefined
 13786  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13787                           
 13788                           ; Vector 67 : Undefined
 13789  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13790                           
 13791                           ; Vector 68 : Undefined
 13792  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13793                           
 13794                           ; Vector 69 : Undefined
 13795  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13796                           
 13797                           ; Vector 70 : TMR5
 13798  000094  127A               	dw	_TMR5_ISR shr (0+2)
 13799                           
 13800                           ; Vector 71 : TMR5G
 13801  000096  13CF               	dw	_Default_ISR shr (0+2)
 13802                           
 13803                           ; Vector 72 : TMR6
 13804  000098  12C9               	dw	_TMR6_ISR shr (0+2)
 13805                           
 13806                           ; Vector 73 : CCP3
 13807  00009A  13CF               	dw	_Default_ISR shr (0+2)
 13808                           
 13809                           ; Vector 74 : CWG3
 13810  00009C  13CF               	dw	_Default_ISR shr (0+2)
 13811                           
 13812                           ; Vector 75 : CLC3
 13813  00009E  13CF               	dw	_Default_ISR shr (0+2)
 13814                           
 13815                           ; Vector 76 : Undefined
 13816  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13817                           
 13818                           ; Vector 77 : Undefined
 13819  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13820                           
 13821                           ; Vector 78 : Undefined
 13822  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13823                           
 13824                           ; Vector 79 : Undefined
 13825  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13826                           
 13827                           ; Vector 80 : CCP4
 13828  0000A8  13CF               	dw	_Default_ISR shr (0+2)
 13829                           
 13830                           ; Vector 81 : CLC4
 13831  0000AA  13CF               	dw	_Default_ISR shr (0+2)
 13832  0000AC                     ivt0x8_undefint:
 13833                           	callstack 0
 13834  0000AC  00FF               	reset	
 13835                           
 13836                           	psect	text108
 13837  000000                     __ptext108:
 13838                           	callstack 0
 13839                           
 13840                           	psect	rparam
 13841  0000                     
 13842                           	psect	idloc
 13843                           
 13844                           ;Config register IDLOC0 @ 0x200000
 13845                           ;	unspecified, using default values
 13846  200000                     	org	2097152
 13847  200000  0FFF               	dw	4095
 13848                           
 13849                           ;Config register IDLOC1 @ 0x200002
 13850                           ;	unspecified, using default values
 13851  200002                     	org	2097154
 13852  200002  0FFF               	dw	4095
 13853                           
 13854                           ;Config register IDLOC2 @ 0x200004
 13855                           ;	unspecified, using default values
 13856  200004                     	org	2097156
 13857  200004  0FFF               	dw	4095
 13858                           
 13859                           ;Config register IDLOC3 @ 0x200006
 13860                           ;	unspecified, using default values
 13861  200006                     	org	2097158
 13862  200006  0FFF               	dw	4095
 13863                           
 13864                           ;Config register IDLOC4 @ 0x200008
 13865                           ;	unspecified, using default values
 13866  200008                     	org	2097160
 13867  200008  0FFF               	dw	4095
 13868                           
 13869                           ;Config register IDLOC5 @ 0x20000A
 13870                           ;	unspecified, using default values
 13871  20000A                     	org	2097162
 13872  20000A  0FFF               	dw	4095
 13873                           
 13874                           ;Config register IDLOC6 @ 0x20000C
 13875                           ;	unspecified, using default values
 13876  20000C                     	org	2097164
 13877  20000C  0FFF               	dw	4095
 13878                           
 13879                           ;Config register IDLOC7 @ 0x20000E
 13880                           ;	unspecified, using default values
 13881  20000E                     	org	2097166
 13882  20000E  0FFF               	dw	4095
 13883                           
 13884                           	psect	config
 13885                           
 13886                           ;Config register CONFIG1L @ 0x300000
 13887                           ;	External Oscillator Selection
 13888                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 13889                           ;	Reset Oscillator Selection
 13890                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13891  300000                     	org	3145728
 13892  300000  AF                 	db	175
 13893                           
 13894                           ;Config register CONFIG1H @ 0x300001
 13895                           ;	Clock out Enable bit
 13896                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13897                           ;	PRLOCKED One-Way Set Enable bit
 13898                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 13899                           ;	Clock Switch Enable bit
 13900                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13901                           ;	Fail-Safe Clock Monitor Enable bit
 13902                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13903  300001                     	org	3145729
 13904  300001  FF                 	db	255
 13905                           
 13906                           ;Config register CONFIG2L @ 0x300002
 13907                           ;	MCLR Enable bit
 13908                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 13909                           ;	Power-up timer selection bits
 13910                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 13911                           ;	Multi-vector enable bit
 13912                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 13913                           ;	IVTLOCK bit One-way set enable bit
 13914                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 13915                           ;	Low Power BOR Enable bit
 13916                           ;	LPBOREN = OFF, ULPBOR disabled
 13917                           ;	Brown-out Reset Enable bits
 13918                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 13919  300002                     	org	3145730
 13920  300002  FF                 	db	255
 13921                           
 13922                           ;Config register CONFIG2H @ 0x300003
 13923                           ;	Brown-out Reset Voltage Selection bits
 13924                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 13925                           ;	ZCD Disable bit
 13926                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13927                           ;	PPSLOCK bit One-Way Set Enable bit
 13928                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 13929                           ;	Stack Full/Underflow Reset Enable bit
 13930                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13931                           ;	Debugger Enable bit
 13932                           ;	DEBUG = OFF, Background debugger disabled
 13933                           ;	Extended Instruction Set Enable bit
 13934                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13935  300003                     	org	3145731
 13936  300003  FF                 	db	255
 13937                           
 13938                           ;Config register CONFIG3L @ 0x300004
 13939                           ;	WDT Period selection bits
 13940                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13941                           ;	WDT operating mode
 13942                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 13943  300004                     	org	3145732
 13944  300004  9F                 	db	159
 13945                           
 13946                           ;Config register CONFIG3H @ 0x300005
 13947                           ;	WDT Window Select bits
 13948                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13949                           ;	WDT input clock selector
 13950                           ;	WDTCCS = SC, Software Control
 13951  300005                     	org	3145733
 13952  300005  FF                 	db	255
 13953                           
 13954                           ;Config register CONFIG4L @ 0x300006
 13955                           ;	Boot Block Size selection bits
 13956                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 13957                           ;	Boot Block enable bit
 13958                           ;	BBEN = OFF, Boot block disabled
 13959                           ;	Storage Area Flash enable bit
 13960                           ;	SAFEN = OFF, SAF disabled
 13961                           ;	Application Block write protection bit
 13962                           ;	WRTAPP = OFF, Application Block not write protected
 13963  300006                     	org	3145734
 13964  300006  FF                 	db	255
 13965                           
 13966                           ;Config register CONFIG4H @ 0x300007
 13967                           ;	Configuration Register Write Protection bit
 13968                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 13969                           ;	Boot Block Write Protection bit
 13970                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 13971                           ;	Data EEPROM Write Protection bit
 13972                           ;	WRTD = OFF, Data EEPROM not write-protected
 13973                           ;	SAF Write protection bit
 13974                           ;	WRTSAF = OFF, SAF not Write Protected
 13975                           ;	Low Voltage Programming Enable bit
 13976                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13977  300007                     	org	3145735
 13978  300007  FF                 	db	255
 13979                           
 13980                           ;Config register CONFIG5L @ 0x300008
 13981                           ;	PFM and Data EEPROM Code Protection bit
 13982                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 13983  300008                     	org	3145736
 13984  300008  FF                 	db	255
 13985                           
 13986                           ;Config register CONFIG5H @ 0x300009
 13987                           ;	unspecified, using default values
 13988  300009                     	org	3145737
 13989  300009  FF                 	db	255
 13990                           tosu	equ	0x3FFF
 13991                           tosh	equ	0x3FFE
 13992                           tosl	equ	0x3FFD
 13993                           stkptr	equ	0x3FFC
 13994                           pclatu	equ	0x3FFB
 13995                           pclath	equ	0x3FFA
 13996                           pcl	equ	0x3FF9
 13997                           tblptru	equ	0x3FF8
 13998                           tblptrh	equ	0x3FF7
 13999                           tblptrl	equ	0x3FF6
 14000                           tablat	equ	0x3FF5
 14001                           prodh	equ	0x3FF4
 14002                           prodl	equ	0x3FF3
 14003                           indf0	equ	0x3FEF
 14004                           postinc0	equ	0x3FEE
 14005                           postdec0	equ	0x3FED
 14006                           preinc0	equ	0x3FEC
 14007                           plusw0	equ	0x3FEB
 14008                           fsr0h	equ	0x3FEA
 14009                           fsr0l	equ	0x3FE9
 14010                           wreg	equ	0x3FE8
 14011                           indf1	equ	0x3FE7
 14012                           postinc1	equ	0x3FE6
 14013                           postdec1	equ	0x3FE5
 14014                           preinc1	equ	0x3FE4
 14015                           plusw1	equ	0x3FE3
 14016                           fsr1h	equ	0x3FE2
 14017                           fsr1l	equ	0x3FE1
 14018                           bsr	equ	0x3FE0
 14019                           indf2	equ	0x3FDF
 14020                           postinc2	equ	0x3FDE
 14021                           postdec2	equ	0x3FDD
 14022                           preinc2	equ	0x3FDC
 14023                           plusw2	equ	0x3FDB
 14024                           fsr2h	equ	0x3FDA
 14025                           fsr2l	equ	0x3FD9
 14026                           status	equ	0x3FD8

Data Sizes:
    Strings     78
    Constant    0
    Data        68
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160     60      78
    BANK1           256      0     224
    BANK2           256    128     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ?_sprintf(BANK0[2]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ?_sprintf(BANK0[2]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), 
		 -> STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[5]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S3219_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    once@once_flag	PTR _Bool  size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    switches	PTR struct IN_data size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _send_lcd_cmd->_wdtdelay
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _rand->___omul
    _led_lightshow->___awdiv
    _lcd_init->_lcd_clear_area_xy
    _lcd_clear_area_xy->_lcd_clear_area
    _lcd_clear_area->_lcd_move_xy
    _lcd_move_xy->_lcd_moveto_xy
    _lcd_moveto_xy->_lcd_inc_column
    _lcd_command->_SPI1_Exchange8bit
    _lcd_data->_lcd_inc_column
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod
    _calc_pot->___fltol
    _lp_filter->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___fldiv->___flsub
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_Digital232_RW
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_calc_pot
    _printf->_vfprintf
    _calc_pot->___fltol
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_work_sw

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0  100705
                                             34 BANK0     26    26      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                            ___awdiv
                            ___fldiv
                           ___xxtofl
            _eaDogM_WriteStringAtPos
                       _init_display
                        _lcd_command
                           _lcd_data
                      _led_lightshow
                               _once
                               _rand
                            _sprintf
                              _srand
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                            128   128      0   18328
                                              0 BANK2    128   128      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16     9      7   14221
                                              4 BANK0     16     9      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    2569
                                             13 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     624
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   4     2      2    1312
                                              9 COMRAM     4     2      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2     211
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     456
                                             29 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              24     8     16     456
                                              5 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _once                                                 2     0      2     332
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    2403
                                             13 COMRAM     5     3      2
                         _StartTimer
                          _TimerDone
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    3793
                           _lcd_init
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     562
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0    3231
                  _lcd_clear_area_xy
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_clear_area_xy                                    5     1      4    3169
                                             25 COMRAM     5     1      4
                     _lcd_clear_area
                      _lcd_moveto_xy
 ---------------------------------------------------------------------------------
 (4) _lcd_clear_area                                      11     9      2    2187
                                             14 COMRAM    11     9      2
                           _lcd_data
      _lcd_get_position_column$F2718
        _lcd_get_position_page$F2716
                        _lcd_move_xy
 ---------------------------------------------------------------------------------
 (5) _lcd_move_xy                                          3     1      2    1230
                                             11 COMRAM     3     1      2
                     _lcd_inc_column
                       _lcd_inc_page
                      _lcd_moveto_xy
 ---------------------------------------------------------------------------------
 (4) _lcd_moveto_xy                                        2     1      1     467
                                              9 COMRAM     2     1      1
                        _lcd_command
                     _lcd_inc_column (ARG)
                       _lcd_inc_page (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_command                                          1     1      0      62
                                              6 COMRAM     1     1      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _lcd_inc_page                                         2     2      0     102
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _lcd_get_position_page$F2716                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_get_position_column$F2718                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             1     1      0     341
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                     _lcd_inc_column
 ---------------------------------------------------------------------------------
 (2) _lcd_inc_column                                       4     2      2     279
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1486
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     605
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     121
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   17220
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1834
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   34104
                                             30 BANK0      4     4      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                           _calc_pot
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   13996
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   13369
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   12617
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2922
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7129
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4863
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     400
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1670
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _calc_pot                                             4     2      2   18030
                                             26 BANK0      4     2      2
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _lp_filter
 ---------------------------------------------------------------------------------
 (3) _lp_filter                                           22    14      8   13376
                                             79 COMRAM     2     2      0
                                              0 BANK0     20    12      8
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3827
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3442
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3236
                                             21 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2183
                                             54 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     746
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                             81 COMRAM     4     4      0
                                             20 BANK0      6     2      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                          _lp_filter (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2    1322
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     332
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _calc_pot
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _lp_filter (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _lp_filter
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   ___awdiv
   ___fldiv
     ___fladd (ARG)
     ___flmul (ARG)
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _lcd_init
       _lcd_clear_area_xy
         _lcd_clear_area
           _lcd_data
             _SPI1_Exchange8bit
             _lcd_inc_column
           _lcd_get_position_column$F2718
           _lcd_get_position_page$F2716
           _lcd_move_xy
             _lcd_inc_column
             _lcd_inc_page
             _lcd_moveto_xy
               _lcd_command
                 _SPI1_Exchange8bit
               _lcd_inc_column (ARG)
               _lcd_inc_page (ARG)
         _lcd_moveto_xy
           _lcd_command
             _SPI1_Exchange8bit
           _lcd_inc_column (ARG)
           _lcd_inc_page (ARG)
       _lcd_command
         _SPI1_Exchange8bit
     _wdtdelay
   _lcd_command
     _SPI1_Exchange8bit
   _lcd_data
     _SPI1_Exchange8bit
     _lcd_inc_column
   _led_lightshow
     _StartTimer
     _TimerDone
     ___awdiv
   _once
   _rand
     ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
         _fputc
           _putch
             _UART2_Write
         _stoa
           _fputc
             _putch
               _UART2_Write
           _strlen
   _srand
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     80      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      4E       5       48.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     228      58        0.0%
DATA                 0      0     228       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jul 21 10:04:20 2020

                           _SPI1_Exchange8bit 4D78                                  ?_lcd_move_xy 000C  
                                ___fldiv@aexp 004F                                  ___fldiv@bexp 004E  
            __end_of_TMR5_SetInterruptHandler 4EFE                                  lcd_data@data 000A  
                   __end_of_UART2_is_rx_ready 4F2A                                  ___fldiv@sign 0047  
                          ?_SPI1_Exchange8bit 0001                                            l68 4D72  
                                          _IO 01A9                                  ___awdiv@sign 000B  
                      __end_of_FVR_Initialize 4F1E                             ??_TMR5_WriteTimer 0006  
                               work_sw@buffer 0200                                           l494 47A0  
                                         _GIE 01FE97                                           l989 4D86  
                              ?_lcd_moveto_xy 000A                                           _abs 491E  
                         ??_SPI1_Exchange8bit 0006                                           _pad 417A  
                           lcd_moveto_xy@page 000B                       __size_of_PMD_Initialize 0022  
               eaDogM_WriteStringAtPos@strPtr 000F                               _TMR2_Initialize 4CCE  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                                  ___flmul@aexp 0023  
                                ___flmul@bexp 0024                               send_lcd_cmd@cmd 000A  
                          _UART1_Transmit_ISR 4982                                 calc_pot@value 007A  
                                ___flmul@sign 0022                                  ___flmul@temp 002D  
                                ___flmul@prod 0029                                  ___fltol@exp1 0079  
                                        ?_abs 0018                                          l1221 2788  
                                        l2009 25B4                                          l2018 261A  
                                        l2019 2616                                          l2060 2B32  
                                        l1181 3124                                          l2126 37BE  
                                        l2119 3740                                          l2048 2AC8  
                                        l2209 34D8                                          l1257 4B0A  
                                        l2242 4946                                          l1186 31EE  
                                        l2059 2B36                                          l2180 2EA0  
                                        l2078 20D0                                          l2182 2EA8  
                                        l2095 236C                                          l2087 22E6  
                                        l2088 22E2                                          l1288 4818  
                                        l2169 41A8                          _ADCC_StartConversion 4E46  
                                        l7012 2A28                                          l7004 2A10  
                                        l7030 2AA0                                          l7022 2A78  
                                        ?_pad 0018                                          l7200 232A  
                                        l7104 207C                                          l1993 24E2  
                                        l7042 2ADE                                          l7122 20BC  
                                        l7106 2080                                          l1994 24C0  
                                        l8010 274A                                          l7036 2AC6  
                                        l7204 2348                                          l7132 20EE  
                                        l7124 20C0                                          l7108 2090  
                                        l6412 47C2                                          l8020 2792  
                                        l6414 47C4                                          l8102 293C  
                                        l8006 2726                                          l7400 3C92  
                                        l7072 2B9E                                          l7048 2AFC  
                                        l7216 238A                                          l6504 3634  
                                        l6520 36BA                                          l8032 27DC  
                                        l8016 276C                                          l7314 4B6C  
                                        l7410 3CAA                                          l7082 2BD4  
                                        l6506 3648                                          l6442 45A6  
                                        l8050 2840                                          l8026 27B4  
                                        l7412 3CB6                                          l7404 3CA2  
                                        l7084 2BD6                                          l7076 2BC8  
                                        l7068 2B7A                                          l7180 22AC  
                                        l7324 2C02                                          l6524 36E0  
                                        l6516 36A4                                          l6540 3892  
                                        l6428 3E62                                          l6452 48BA  
                                        l6444 45AA                                          l8116 4ACC  
                                        l7174 228E                                          l6622 23D0  
                                        l7342 2E1C                                          l8070 289A  
                                        l8054 284A                                          l8038 2804  
                                        l7440 37A6                                          l6720 2528  
                                        l6712 2506                                          l7328 2C1A  
                                        l6560 3944                                          l6552 3908  
                                        l6544 38AC                                          l6536 386E  
                                        l6456 48D0                                          l7264 3424  
                                        l7248 338A                                          l8144 4864  
                                        l7418 3CD2                                          l7434 376E  
                                        l6722 252C                                          l6730 253E  
                                        l6642 2414                                          l6618 23CC  
                                        l6546 38C0                                          l7258 33EA  
                                        l7274 3440                                          l8090 28EC  
                                        l8074 28A4                                          l7436 3774  
                                        l7428 3750                                          l6740 25A4  
                                        l6492 35E6                                          l6556 391E  
                                        l6572 41A0                                          l7268 342E  
                                        l8068 288C                                          l7446 37E4  
                                        l7438 3780                                          l6654 2438  
                                        l6646 2418                                          l6398 478A  
                                        l6582 41F6                                          l6574 41B2  
                                        l6814 2E84                                          l6910 359C  
                                        l6902 356A                                          l8086 28E4  
                                        l7374 4480                                          l7384 3C48  
                                        l7464 3830                                          l7448 37F0  
                                        l6568 4192                                          l6832 2ED2  
                                        l7472 455C                                          l8096 2914  
                                        l7368 4458                                          l7714 3982  
                                        l6498 360E                                          l6578 41CA  
                                        l6842 2FCA                                          l6906 3584  
                                        l7474 457A                                          l7730 421C  
                                        l6748 25D8                                          l6764 25F8  
                                        l6684 2474                                          l6828 2EC2  
                                        l7708 4B14                                          l6940 4132  
                                        l6924 40F0                                          l6758 25EE  
                                        l6862 302E                                          l6950 4160  
                                        l6926 40F6                                          l7734 4240  
                                        l6792 2686                                          l6784 2660  
                                        l6696 24CE                                          l7920 31F2  
                                        l6944 413A                                          l7760 4364  
                                        l7752 4346                                          l7658 46F4  
                                        l6970 2986                                          l6698 24D2  
                                        l6866 3048                                          l7906 31CA  
                                        l6938 412C                                          l7770 4384  
                                        l7746 4336                                          l6796 268E  
                                        l6892 3506                                          l7932 323A  
                                        l6990 29C6                                          l6966 2982  
                                        l6798 2690                                          l6878 349C  
                                        l7926 3210                                          l7862 30BA  
                                        l7758 435C                                          l7774 438E  
                                        l6896 3524                                          l6888 34EE  
                                        l7952 3274                                          l6986 29C2  
                                        l7882 310C                                          l7874 30F4  
                                        l7858 308E                                          l7778 439C  
                                        l7892 312C                                          l7980 26BA  
                                        l6998 29FA                                          l7886 3118  
                                        l7878 3100                                          l7894 3134  
                                        l7896 3168                                          l7992 26E2  
                                        l7988 26DC                                          STR_1 2001  
                                        STR_2 2012                                          STR_3 2023  
                                        STR_4 202F                                          STR_5 204C  
                                        STR_6 2048                                          STR_7 204C  
                                        STR_8 2038                                          STR_9 204C  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        u6200 2E58                                          _T6PR 003F93  
                                        u7020 3C36                                          u6300 300C  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        u7030 3C66                                          u6150 266C  
                                        u6070 25FC                                          u6230 2E96  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        u6320 3018                                          u6400 354E  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        u6090 2610                                          u6250 2EBC  
                                        _PMD6 0039C6                                          u7035 3C5C  
                                        _PMD7 0039C7                                          u6260 2FD8  
                                        u6341 347C                                          u7205 4668  
                                        u7070 3CBC                                          u7150 37FA  
                                        u6190 2E56                                          u6430 35B0  
                                        u7206 466A                                          u6407 3540  
                                        u5720 38C4                                          u5560 3E5A  
                                        u6280 2FFA                                          u5641 3614  
                                        u6281 2FF8                                          u7250 4F08  
                                        u6290 3008                                          u6700 2B88  
                                        u5900 24A6                                          u5660 364C  
                                        u5580 3EA2                                          u7245 4974  
                                        u6710 2BAC                                          u5910 24A8  
                                        u5590 45D4                                          u6390 351A  
                                        u7350 4368                                          u6800 20DC  
                                        u7520 324E                                          u7291 4216  
                                        u6660 2B2C                                          u5940 24EA  
                                        u7540 3262                                          u5597 45C6  
                                        u5790 492C                                          u7710 27EC  
                                        u6840 22DC                                          u5890 2496  
                                        u6930 331E                                          u7810 28B4  
                                        u7730 2814                                          u7650 2760  
                                        u7820 28C4                                          u7660 277C  
                                        u7900 3C1A                                          u6880 2338  
                                        u7840 28FC                                          u7760 285A  
                                        u7905 3C08                                          u6890 2356  
                                        u6970 2BF0                                          u7850 290C  
                                        u7770 286A                                          u7690 27C4  
                                        u7860 2924                                          u7870 2934  
                                        u7880 294C                                          _PLLR 01CEE0  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                      led_lightshow@alive_led 009E                                ??_lcd_inc_page 0006  
                                        abs@a 0018                                          _dbuf 0280  
                                        _main 4840                                          _dtoa 2E2E  
                                        _rand 3B4E                                          _seed 0196  
                                        _once 4AA6                                          _prec 009C  
                                        _nout 018A                                          pad@i 001F  
                       __end_of_Digital232_RW 32A4                                          pad@p 001C  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0021  
                                        fsr2l 003FD9                                          _stoa 3472  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0192  
                              ?_led_lightshow 000E                     __end_of_SPI1_Exchange8bit 4D92  
                             ___fldiv@new_exp 0048                 ??_UART1_SetTxInterruptHandler 0009  
               ??_UART2_SetRxInterruptHandler 0009                             _UART1_rx_vect_isr 4B94  
                                ___param_bank 000000                                   ?_UART2_Read 0001  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 001A  
                                       ??_pad 001E                               ?_FVR_Initialize 0001  
              __size_of_OSCILLATOR_Initialize 001C                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 4D78                                 ___fltol@sign1 0078  
                             __end_of___aodiv 3702                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                               __end_of___fladd 26AC  
                                       ?_main 0001                                         ?_dtoa 0023  
                                       _ADCLK 003EFF                               __end_of___aomod 3966  
                                       _ADPCH 003EF1                               __end_of___fldiv 2BDE  
                                       ?_rand 001E                                         _ADREF 003EFD  
                             __end_of___awdiv 43A6                                         ?_once 0006  
                                       STR_10 203C                                         STR_11 204C  
                                       STR_12 2040                                         STR_13 204C  
                                       STR_14 2044                                         STR_15 204C  
                                       STR_16 2034                                         _ADRPT 003EEC  
                             __end_of___flmul 23A0                               __end_of___flsub 46C0  
                             __end_of___fltol 3CE4                                         ?_stoa 0011  
                             ___awdiv@divisor 0008                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                      eaDogM_WriteStringAtPos@c 000E  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                    eaDogM_WriteStringAtPos@r 0011                                         _T5CLK 003F9D  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                         _T6HLT 003F95  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       _U2UIR 003DE0                                         _U1TXB 003DEA  
                                       _U2RXB 003DD0                                         _U2TXB 003DD2  
                                       i2l344 49AE                                         _T6TMR 003F92  
                                       i2l518 49E0                                         _T6RST 003F97  
                         ??_UART1_rx_vect_isr 0001                                         i2l776 4C5E  
                             ___awdiv@counter 000A                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 0049                                         _TMR5H 003F99  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 4F3C                      eaDogM_WriteString@strPtr 000A  
                               lcd_inc_page@p 0007                                 lcd_inc_page@s 0006  
                     ??_ADCC_IsConversionDone 0006             __size_of_TMR6_SetInterruptHandler 000E  
                   ?_TMR6_SetInterruptHandler 0006                             _UART1_tx_vect_isr 4B70  
                            __end_of_TMR5_ISR 4A1A                              __end_of_TMR6_ISR 4B4C  
                                       _flags 0056                               _Digital232_init 3A66  
                       ?_ADCC_StartConversion 0001                                         _fputc 3E4A  
                                       _fputs 48B0                            ?_UART1_tx_vect_isr 0001  
                                       _srand 4A1A                                         pad@fp 0018  
                                       _width 018C                                         _putch 4F0C  
                                       dtoa@d 0025                                         dtoa@i 0045  
                                       main@y 009B                                         dtoa@n 003D  
                                       dtoa@p 0037                                         dtoa@s 003B  
                         lcd_moveto_xy@column 000A                                         dtoa@w 0039  
                            led_lightshow@seq 0012                                         pclath 003FFA  
                                       tablat 003FF5                     ??_eaDogM_WriteStringAtPos 0011  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 001D                                         stoa@l 0025  
                                       stoa@p 0023                                         stoa@s 0013  
                                       stoa@w 001F                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 4EB8                   _UART1_SetRxInterruptHandler 4EAA  
                             __end_of_sprintf 4788                               __end_of_work_sw 4322  
    __end_of_UART1_DefaultFramingErrorHandler 4F42     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 4F40                           ??_UART1_tx_vect_isr 0001  
                   __end_of_UART1_rx_vect_isr 4BB8                      __size_of_SPI1_Initialize 0018  
              ??_TMR6_DefaultInterruptHandler 0001                               _TMR5_Initialize 45E8  
              ??_UART2_SetOverrunErrorHandler 0009                               __initialization 43A6  
                           _UART2_rx_vect_isr 4C00                eaDogM_WriteString@bytesWritten 000D  
                                __end_of_main 4878                                  __end_of_dtoa 3072  
                                __end_of_rand 3C28                                  __end_of_once 4AD0  
                                __end_of_stoa 35BA                    __size_of_UART2_is_rx_ready 0006  
                 ??_UART1_DefaultErrorHandler 0001                            ?_UART2_rx_vect_isr 0001  
                     __end_of_TMR2_Initialize 4CEC                  ?_lcd_get_position_page$F2716 0001  
                             ??_lcd_moveto_xy 000B                                  ?_UART2_Write 0001  
                                      ??_main 0056                                        ??_dtoa 002D  
                                      ??_rand 0020                                        ??_once 0008  
                            ??_lcd_clear_area 0011                      _TMR5_SetInterruptHandler 4EF0  
                                      ??_stoa 0015                                 __activetblptr 000003  
        __size_of_UART1_SetTxInterruptHandler 000E                           ??_UART2_rx_vect_isr 0001  
                         eaDogM_WriteString@i 000C                     __end_of_UART1_tx_vect_isr 4B94  
        __size_of_UART2_SetRxInterruptHandler 000E                                lcd_command@cmd 0007  
                             _TMR6_Initialize 4A4A                               _PWM8_Initialize 4DDE  
                 __end_of_UART2_RxDataHandler 4C48                              _UART1_Initialize 3CE4  
                           _UART2_tx_vect_isr 4BDC                            _UART2_Transmit_ISR 49B4  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 0008  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0011                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0006  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 4950  
                                      ?_srand 0006                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                            ?_UART2_tx_vect_isr 0001  
                              TimerDone@timer 0008                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U2CON0 003DDA                                        _U2CON1 003DDB  
                                      _U1BRGL 003DF5                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _T5GATE 003F9C  
                         __size_of_UART2_Read 0044                                        _T5GCON 003F9B  
                                      _RC3PPS 003A13                                        _RD1PPS 003A19  
                                      _RB6PPS 003A0E                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC6PPS 003A16  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i2l5246 4BD6                                        i2l5266 4C42  
                                      i2l5810 49DC                                        i2l5830 40DA  
                                      i2l5842 47FC                                        i2l5838 47CE  
                                      _FVRCON 003EC1                                        i2l5778 49AA  
                                      i2l5798 403C                                 ?_init_display 0001  
                                      _IVTADH 00389E                                        _IVTADL 00389D  
                                      _IVTADU 00389F                               lcd_clear_area@i 0016  
                             lcd_clear_area@j 0017                                        _OSCFRQ 0039DF  
                            __end_of_calc_pot 3A66                           ?_UART2_Transmit_ISR 0001  
                             ??_led_lightshow 0010                         _UART1_SetErrorHandler 4ED4  
                            __end_of___xxtofl 3842                    ??_ADCC_GetConversionResult 0008  
                       SPI1_Exchange8bit@data 0006                           ?_PWM8_LoadDutyValue 0006  
                         ??_UART2_tx_vect_isr 0001                     __end_of_UART2_rx_vect_isr 4C24  
                  __size_of_SPI1_Exchange8bit 001A                              _UART2_Initialize 3D9C  
                                      _WaitMs 4AFA                              __end_of_lcd_data 4D5C  
                                _CCPTMRS1bits 003F5F                     _UART2_OverrunErrorHandler 016F  
                                vfprintf@cfmt 0055                              __end_of_lcd_init 44F0  
                        __size_of_lcd_command 0010                           _uart2RxStatusBuffer 0132  
          __size_of_UART2_DefaultErrorHandler 0006                                        ___omul 4210  
                            ??_lcd_inc_column 0008                                     ??___aodiv 0016  
                                   ??___fladd 000E                                     ??___aomod 0016  
                                   ??___fldiv 003F                                     ??___awdiv 000A  
                                   ??___flmul 001E                                     ??___flsub 0037  
                                   ??___fltol 0052                    ?_UART2_DefaultErrorHandler 0001  
                           _lcd_clear_area_xy 4D08                          __size_of_lcd_move_xy 001C  
                                      clear_0 43EA                                        clear_1 43F6  
                                      clear_2 4402                           UART2_Read@readValue 0006  
                            ___awdiv@quotient 000C                            ?_lcd_clear_area_xy 001A  
                        ??_UART2_Transmit_ISR 0001                                        _printf 4D92  
                                      pad@buf 001A                            _eaDogM_WriteString 4424  
                                      _sounds 01A5                                        dtoa@fp 0023  
                                      _strlen 459C                          __end_of_lcd_inc_page 4E0C  
               ??_lcd_get_position_page$F2716 0006                            __size_of_TimerDone 0024  
                     __end_of_Digital232_init 3B4E                          ??_PWM8_LoadDutyValue 0008  
                             _ADCC_Initialize 44F0                                        fputc@c 0008  
                              _PMD_Initialize 4C6C                                        fputs@c 0015  
                                      fputs@i 0016                                        fputs@s 0011  
                   __end_of_UART2_tx_vect_isr 4C00                                  __mediumconst 0000  
                         ??_lcd_clear_area_xy 001E                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                                      srand@s 0006                        ??_ADCC_StartConversion 0006  
                         ?_eaDogM_WriteString 000A                              __end_of_wdtdelay 4840  
                                      stoa@cp 0021                                        stoa@fp 0011  
                            __end_of_vfprintf 459C                                   lp_filter@bn 0064  
                               wdtdelay@delay 0006                                    _StartTimer 4A78  
    TMR5_SetInterruptHandler@InterruptHandler 0006      TMR6_SetInterruptHandler@InterruptHandler 0006  
 UART2_SetTxInterruptHandler@InterruptHandler 0006   UART2_SetRxInterruptHandler@InterruptHandler 0006  
 UART1_SetTxInterruptHandler@InterruptHandler 0006   UART1_SetRxInterruptHandler@InterruptHandler 0006  
        __end_of_UART1_SetOverrunErrorHandler 4EC6         __size_of_UART1_SetOverrunErrorHandler 000E  
                _UART1_SetOverrunErrorHandler 4EB8                     _UART1_DefaultErrorHandler 4F2A  
                                   ??_sprintf 0056                                     ??_work_sw 0056  
               __size_of_INTERRUPT_Initialize 0048                                ??_init_display 001F  
                __size_of_UART1_RxDataHandler 0024                       __end_of_TMR5_Initialize 4632  
                                ___xxtofl@arg 0010                                  ___xxtofl@exp 000F  
                           _SYSTEM_Initialize 48E8                                  ___xxtofl@val 0006  
                                  __accesstop 0060                       __end_of__initialization 441E  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 0024                                    ___fltol@f1 0074  
                             _TMR5_WriteTimer 4C48                          ??_eaDogM_WriteString 000C  
                   __end_of_lcd_clear_area_xy 4D24                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler 4E8E                                  __pidataBANK0 4F3A  
                                __pidataBANK1 4704                           ??_SYSTEM_Initialize 000B  
                                   ?_TMR5_ISR 0001                                     ?_TMR6_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 3EF8  
                               __end_of_fputs 48E8                             ??_SPI1_Initialize 0006  
           __end_of_UART2_DefaultErrorHandler 4F36                                 __end_of_srand 4A4A  
                       __end_of_TMR5_CallBack 4CB0                                 __end_of_putch 4F16  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 4DF6  
                     __end_of_TMR6_Initialize 4A78                        __end_of_PMD_Initialize 4C8E  
                           lp_filter@lp_speed 006C                    __size_of_UART1_tx_vect_isr 0024  
                   _UART1_FramingErrorHandler 017B                   ADCC_StartConversion@channel 0006  
                    _UART2_RxInterruptHandler 0187                                       ??_fputc 000C  
                   __end_of_SYSTEM_Initialize 491E                                       ??_fputs 0015  
                                     ??_srand 0008                                       ??_putch 0007  
                                  __pbssBANK0 009C                                    __pbssBANK1 0100  
                                  __pbssBANK2 0280                 ?_UART1_SetOverrunErrorHandler 0006  
                      ?_UART1_SetErrorHandler 0006          __size_of_lcd_get_position_page$F2716 0006  
                           __end_of_TimerDone 4B70                  ?_UART2_SetTxInterruptHandler 0006  
                  __size_of_UART2_rx_vect_isr 0024                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                          __size_of_lp_filter 0250                              ??_FVR_Initialize 0006  
                                     ?_WaitMs 000B                                       ?___omul 0006  
                                ??_UART2_Read 0006              __end_of_TMR6_SetInterruptHandler 4EF0  
        __end_of_UART2_SetFramingErrorHandler 4E8E         __size_of_UART2_SetFramingErrorHandler 000E  
                _UART2_SetFramingErrorHandler 4E80                       __end_of_ADCC_Initialize 454C  
                               ?_send_lcd_cmd 0001                                    ??_TMR5_ISR 0006  
                                  ??_TMR6_ISR 0004                           ___omul@multiplicand 000E  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 0064                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 3FA4                                       ?_strlen 0006  
                             StartTimer@count 0006                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                                       _U2ERRIE 003DE2  
                                     _U2ERRIR 003DE1                                     ?_calc_pot 007A  
                             StartTimer@timer 000A                              ?_Digital232_init 0001  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                  __size_of_UART2_tx_vect_isr 0024                          __size_of_UART2_Write 0042  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0006  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 01CE                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _PWM8DCH 003F61  
                                     _PWM8DCL 003F60                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                __size_of_ADCC_IsConversionDone 000E  
                                 ?_StartTimer 0006                 __end_of_ADCC_IsConversionDone 4F0C  
                                   ?_lcd_data 0001                                     ?_lcd_init 0001  
                         ??_UART1_Receive_ISR 0001                       __end_of_TMR5_WriteTimer 4C6C  
                          __end_of_UART2_Read 4704                              ?_TMR5_Initialize 0001  
                             lcd_inc_column@c 0008                               lcd_inc_column@s 0006  
                   INTERRUPT_Initialize@state 0006                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0006                                       __Lparam 0000  
                    __end_of_UART1_Initialize 3D9C                 ??_UART2_SetTxInterruptHandler 0009  
                  __size_of_lcd_clear_area_xy 001C                    ??_TMR5_SetInterruptHandler 0009  
                             __size_of_WaitMs 0028                                ??_send_lcd_cmd 000A  
                                     ___aodiv 35BA                                       ___fladd 23A0  
                                     ___aomod 3842                                       ___fldiv 2956  
                                     ___awdiv 4322                               __size_of___omul 008A  
                                     ___flmul 2050                         __size_of_lcd_inc_page 0016  
                                     ___flsub 467A                                       ___fltol 3C28  
                                   ?_wdtdelay 0006                     __end_of_UART1_Receive_ISR 4042  
                                   ?_vfprintf 0060                                  __psmallconst 2000  
               ?_UART2_SetFramingErrorHandler 0006                          __end_of_init_display 4D08  
                                     __pcinit 43A6                              ?_PWM8_Initialize 0001  
                            ?_TMR6_Initialize 0001                                       __ramtop 2000  
                 __size_of_UART1_Transmit_ISR 0032                                       __ptext0 4840  
                                     __ptext1 429A                                       __ptext2 4746  
                                     __ptext3 4CB0                                       __ptext4 4878  
                                     __ptext5 4424                                       __ptext6 4A1A  
                                     __ptext7 3B4E                                       __ptext8 4210  
                                     __ptext9 4AA6                             _UART2_Receive_ISR 4042  
                             __size_of_printf 001A                               __size_of_strlen 004C  
                                  ??_calc_pot 007C      __end_of_UART2_DefaultOverrunErrorHandler 4F44  
   __size_of_UART2_DefaultOverrunErrorHandler 0002            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler 4F42  
                       _OSCILLATOR_Initialize 4D5C                                  __size_of_abs 0032  
                      __size_of_Digital232_RW 0232                                  __size_of_pad 0096  
                          ?_UART2_Receive_ISR 0001                                    ??___xxtofl 000A  
                           __end_of_lp_filter 2E2E                      ??_PIN_MANAGER_Initialize 0006  
                                   _T5CONbits 003F9A                      __end_of_UART2_Initialize 3E4A  
                            _lcd_current_page 00A2                                       _otto_b1 01D2  
                                  ??_lcd_data 000A                    __size_of_SYSTEM_Initialize 0036  
                                     _sprintf 4746                                    ??_lcd_init 001F  
                          led_lightshow@cylon 00AD                          end_of_initialization 441E  
                                     _work_sw 429A                              lcd_move_xy@pages 000E  
                         ??_UART2_Receive_ISR 0001                            led_lightshow@speed 000E  
                              ___omul@product 0016                                       fputc@fp 000A  
         __end_of_UART1_SetTxInterruptHandler 4EAA                   _UART1_SetTxInterruptHandler 4E9C  
                                     fputs@fp 0013           __end_of_UART2_SetRxInterruptHandler 4E72  
                 _UART2_SetRxInterruptHandler 4E64                                  _lcd_inc_page 4DF6  
              ??_UART1_SetOverrunErrorHandler 0009                      lcd_clear_area_xy@columns 001A  
                           __end_of_vfpfcnvrt 3472                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_wdtdelay 000A  
                            ?_ADCC_Initialize 0001                   ??_UART2_DefaultErrorHandler 0001  
                         __size_of_StartTimer 002E                                    ??_vfprintf 0055  
                                lp_filter@new 0060                     __end_of_UART2_Receive_ISR 40E0  
                              wdtdelay@dcount 0162                           _UART1_RxDataHandler 4BB8  
                                     strlen@a 0008                                       strlen@s 0006  
                    _TMR6_SetInterruptHandler 4EE2                         __end_of_lcd_moveto_xy 4AFA  
                       _TMR5_InterruptHandler 0166                                   ___fladd@grs 0015  
        __size_of_UART2_SetTxInterruptHandler 000E                         WaitMs@numMilliseconds 000B  
                               ___xxtofl@sign 000E                      ?_eaDogM_WriteStringAtPos 000E  
                                 ___fldiv@grs 004A                                   ___fldiv@rem 0043  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0004  
                     TMR5_WriteTimer@timerVal 0004                  __size_of_UART2_RxDataHandler 0024  
                                 ___flmul@grs 0025                                    main@buffer 0082  
                             _SPI1_Initialize 4DC6                                 ??_lcd_command 0007  
                               _Digital232_RW 3072                         __end_of_led_lightshow 2956  
                              led_lightshow@j 018E                                 ??_lcd_move_xy 000E  
                              __end_of_WaitMs 4B22                  __end_of_INTERRUPT_Initialize 467A  
       __end_of_lcd_get_position_column$F2718 4F3A        __size_of_lcd_get_position_column$F2718 0004  
               _lcd_get_position_column$F2718 4F36                    __size_of_UART1_Receive_ISR 009E  
                              __end_of___omul 429A                                   vfpfcnvrt@ap 004A  
                                 vfpfcnvrt@cp 0053                                   vfpfcnvrt@fp 0047  
                                 vfpfcnvrt@ll 004B                             __size_of_TMR5_ISR 0032  
                           __size_of_TMR6_ISR 0028                   __size_of_UART2_Transmit_ISR 0032  
                      ?_OSCILLATOR_Initialize 0001             __size_of_ADCC_GetConversionResult 0014  
                   ?_ADCC_GetConversionResult 0006                                __end_of_printf 4DAC  
                 __size_of_PWM8_LoadDutyValue 0032                                __end_of_strlen 45E8  
              ??_UART2_SetFramingErrorHandler 0009                           start_initialization 43A6  
        __end_of_TMR5_DefaultInterruptHandler 4DC6         __size_of_TMR5_DefaultInterruptHandler 001A  
                _TMR5_DefaultInterruptHandler 4DAC               __size_of_PIN_MANAGER_Initialize 00AC  
                                 __end_of_abs 4950                                   __end_of_pad 4210  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0009  
                   _UART2_DefaultErrorHandler 4F30                          __end_of_send_lcd_cmd 48B0  
                       ??_UART1_RxDataHandler 0001                 __size_of_ADCC_StartConversion 0010  
                                 putch@txData 0007                                    ivt0x8_base 0008  
                     __size_of_lcd_clear_area 009A                                 _uart1RxBuffer 0152  
                           ___omul@multiplier 0006                                 _uart1TxBuffer 015A  
                               _uart2RxBuffer 013A                                ?_Digital232_RW 0001  
                               _uart2TxBuffer 0142                                      ??_WaitMs 000D  
                       __size_of_init_display 001C                                   vfprintf@fmt 0062  
                 __size_of_eaDogM_WriteString 0066                              ??_PMD_Initialize 0006  
                                   _TimerDone 4B4C                                      ??___omul 0016  
                         __end_of_lcd_command 4E46                                   __pdataBANK0 00AC  
                                 __pdataBANK1 019E           __end_of_lcd_get_position_page$F2716 4F24  
                 _lcd_get_position_page$F2716 4F1E                    __size_of_UART2_Receive_ISR 009E  
                           UART2_Write@txData 0006                        lcd_clear_area_xy@pages 001E  
                                    ??_printf 0056                        lcd_clear_area_xy@style 001B  
                                    ??_strlen 0008                           __end_of_lcd_move_xy 4D40  
             __end_of_eaDogM_WriteStringAtPos 4CCE                                     ___fladd@a 000A  
                                   ___fladd@b 0006                                     ___fldiv@a 003B  
                                   ___fldiv@b 0037                                     ___flmul@a 001A  
                                   ___flmul@b 0016                                   __pbssCOMRAM 0056  
                                   ___flsub@a 0033                                     ___flsub@b 002F  
                     __size_of_lcd_inc_column 0016                            _UART1_ErrorHandler 0175  
                   _UART2_FramingErrorHandler 0172                                 __pcstackBANK0 0060  
                               __pcstackBANK2 0200                              ___aodiv@dividend 0006  
                           __size_of_calc_pot 0100                      __size_of_TMR2_Initialize 001E  
                                ??_StartTimer 0008                             __size_of___xxtofl 0140  
                     __end_of_SPI1_Initialize 4DDE                      _UART1_RxInterruptHandler 0181  
                    _UART2_TxInterruptHandler 0184                 ?_TMR5_DefaultInterruptHandler 0001  
                              Digital232_RW@i 0080                                Digital232_RW@j 0081  
                              Digital232_RW@x 00A0                             __size_of_lcd_data 001C  
                                _init_display 4CEC                             __size_of_lcd_init 0066  
                      __size_of_TMR5_CallBack 0022                   PWM8_LoadDutyValue@dutyValue 0006  
                     ??_UART2_SetErrorHandler 0009                  ?_UART1_SetRxInterruptHandler 0006  
                       _TMR6_InterruptHandler 0169                                _lp_filter$3840 0068  
                      _PIN_MANAGER_Initialize 3EF8                                     _dtoa$3288 0035  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 4ED4  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler 4EC6  
                                  ?_TimerDone 0001                                      ?___aodiv 0006  
                                    ?___fladd 0006                                      ?___aomod 0006  
                                    ?___fldiv 0037                                      ?___awdiv 0006  
                                   __ptext100 4F30                                     __ptext101 4C24  
                                   __ptext102 4B24                              ___aodiv@quotient 0018  
                                   __ptext103 47CA                                     __ptext104 49E8  
                                   __ptext105 4C48                                     __ptext106 4C8E  
                                   __ptext107 4DAC                                     __ptext108 0000  
                                    ?___flmul 0016                                      ?___flsub 002F  
                                    ?___fltol 0074                            ??_UART1_Initialize 0009  
                          __end_of_StartTimer 4AA6                              _uart1RxLastError 0195  
                               ??_UART2_Write 0006                             __size_of_wdtdelay 003A  
                           __size_of_vfprintf 0050                ?_lcd_get_position_column$F2718 0001  
                                 __smallconst 2000      __end_of_UART1_DefaultOverrunErrorHandler 4F40  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 4F3E  
                           ?_UART2_Initialize 0001                                      ?_sprintf 0064  
                              __size_of_fputc 00AE                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0038                                     _lp_filter 2BDE  
                                 _U1ERRIRbits 003DF9                                      ?_work_sw 0001  
                              __size_of_srand 0030                            ??_UART2_Initialize 0009  
                              __size_of_putch 000A                      __size_of_Digital232_init 00E8  
                        _INTERRUPT_Initialize 4632                                      _T6CLKCON 003F96  
                             ??_Digital232_RW 007E                              _uart2RxLastError 0194  
                       _ADCC_IsConversionDone 4EFE                                   _U2ERRIRbits 003DE1  
       UART2_SetErrorHandler@interruptHandler 0006         UART1_SetErrorHandler@interruptHandler 0006  
                                    _LATCbits 003FBC                                      _LATEbits 003FBE  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                   _tickCount 0120                                      _IPR6bits 003986  
                                 _lcd_command 4E36                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                       lcd_clear_area@columns 000F                 ??_UART1_SetRxInterruptHandler 0009  
                          _lcd_current_column 00A1                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      i2u452_40 4DB4  
                                    i2u452_46 4DB6                                      i2u550_40 4A0A  
                                    i2u541_48 4B80                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u471_48 3FFC  
                                    i2u543_48 4BA4                                      i2u471_49 4010  
                           lcd_clear_area@max 0018                                      i2u481_48 40C4  
                                    i2u545_48 4BEC                                      i2u473_48 4026  
                           lcd_clear_area@inv 0013                                      i2u547_48 4C10  
                                    i2u549_48 4B38                                      i2u477_48 406C  
                                    i2u469_48 3FCE                                      i2u477_49 4080  
                                    i2u469_49 3FE2                                      i2u486_48 4C9C  
                                    _PIR8bits 0039A8                                      i2u479_48 409A  
                                    i2u479_49 40AE                                      _PIR9bits 0039A9  
                  ??_TMR6_SetInterruptHandler 0009                      __size_of_TMR5_Initialize 004A  
                                 _lcd_move_xy 4D24                    __end_of_UART1_Transmit_ISR 49B4  
                                    _TMR5_ISR 49E8                                      _TMR6_ISR 4B24  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 32A4  
                               _TMR5_CallBack 4C8E                           _UART2_RxDataHandler 4C24  
                                  _ADCON0bits 003EF8                       __size_of_FVR_Initialize 0008  
                       __size_of_send_lcd_cmd 0038             __size_of_TMR5_SetInterruptHandler 000E  
                   ?_TMR5_SetInterruptHandler 0006                            _UART2_ErrorHandler 016C  
                         __end_of_UART2_Write 47CA                      __size_of_PWM8_Initialize 0018  
                    __size_of_TMR6_Initialize 002E                            lcd_move_xy@columns 000C  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                                   copy_data0 43BA                                    ?_lp_filter 0060  
                       ?_INTERRUPT_Initialize 0001                                _lcd_clear_area 40E0  
                        ?_UART2_RxDataHandler 0001                        _uart1TxBufferRemaining 00A9  
                           ??_TMR2_Initialize 0006                ??_TMR5_DefaultInterruptHandler 0004  
         __end_of_UART2_SetTxInterruptHandler 4E64                   _UART2_SetTxInterruptHandler 4E56  
                                _uart1RxCount 00A7                                  _uart2RxCount 00A3  
                                    __Hrparam 0000              __size_of_eaDogM_WriteStringAtPos 001E  
            __end_of_ADCC_GetConversionResult 4E36                                    vfprintf@ap 0063  
                                    __Lrparam 0000                                    vfprintf@fp 0060  
                         _lcd_clear_area$2772 0014                                   ??_TimerDone 0006  
                       lcd_clear_area_xy@page 001C                       ??_OSCILLATOR_Initialize 0006  
                                _send_lcd_cmd 4878                              __size_of___aodiv 0148  
                            __size_of___fladd 030C                              __size_of___aomod 0124  
                            __size_of___fldiv 0288                              __size_of___awdiv 0084  
                            __size_of___flmul 0350                              __size_of___flsub 0046  
                            __size_of___fltol 00BC                                ?_TMR5_CallBack 0001  
                                  ?_vfpfcnvrt 0047                               ___aodiv@divisor 000E  
                             ___aodiv@counter 0016          __size_of_UART1_SetRxInterruptHandler 000E  
                                    _calc_pot 3966                                    sprintf@fmt 0066  
                              _lcd_inc_column 4E0C                               lp_filter@smooth 0100  
                                    ___xxtofl 3702                      __size_of_ADCC_Initialize 005C  
                                    __pivt0x8 0008                        __end_of_lcd_clear_area 417A  
                                    __ptext10 26AC                                      __ptext11 4322  
                                    __ptext20 4DF6                                      __ptext12 4CEC  
                                    __ptext21 4F1E                                      __ptext13 4806  
                                    __ptext30 4E72                                      __ptext22 4F36  
                                    __ptext14 448A                                      __ptext31 4E80  
                                    __ptext23 4D40                                      __ptext15 4D08  
                                    __ptext40 4EE2                                      __ptext32 4E8E  
                                    __ptext24 4E0C                                      __ptext16 40E0  
                                    __ptext41 45E8                                      __ptext33 3CE4  
                                    __ptext25 4D78                                      __ptext17 4D24  
                                    __ptext50 4F16                                      __ptext42 4EF0  
                                    __ptext34 4E9C                                      __ptext26 48E8  
                                    __ptext18 4AD0                                      __ptext51 44F0  
                                    __ptext43 4CCE                                      __ptext35 4EAA  
                                    __ptext27 3D9C                                      __ptext19 4E36  
                                    __ptext60 417A                                      __ptext52 3A66  
                                    __ptext44 4DC6                                      __ptext36 4EB8  
                                    __ptext28 4E56                                      __ptext61 459C  
                                    __ptext53 4AFA                                      __ptext45 4DDE  
                                    __ptext37 4EC6                                      __ptext29 4E64  
                                    __ptext70 2BDE                                      __ptext62 48B0  
                                    __ptext54 3072                                      __ptext46 4C6C  
                                    __ptext38 4ED4                                      __ptext71 467A  
                                    __ptext63 3E4A                                      __ptext55 4D92  
                                    __ptext47 3EF8                                      __ptext39 4A4A  
                                    __ptext80 4A78                                      __ptext72 23A0  
                                    __ptext64 4F0C                                      __ptext56 454C  
                                    __ptext48 4D5C                                      __ptext81 4950  
                                    __ptext73 2050                                      __ptext65 4788  
                                    __ptext57 32A4                                      __ptext49 4632  
                                    __ptext90 4F3E                                      __ptext82 4E46  
                                    __ptext74 2956                                      __ptext66 491E  
                                    __ptext58 3472                                      __ptext91 4F40  
                                    __ptext83 4EFE                                      __ptext75 3702  
                                    __ptext67 3842                                      __ptext59 2E2E  
                                    __ptext92 4F2A                                      __ptext84 4E22  
                                    __ptext76 3C28                                      __ptext68 35BA  
                                    __ptext93 4BB8                                      __ptext85 4F3C  
                                    __ptext77 4F24                                      __ptext69 3966  
                                    __ptext94 4BDC                                      __ptext86 4B70  
                                    __ptext78 46C0                                      __ptext95 49B4  
                                    __ptext87 4982                                      __ptext79 4B4C  
                                    __ptext96 4C00                                      __ptext88 4B94  
                                    __ptext97 4042                                      __ptext89 3FA4  
                                    __ptext98 4F42                                      __ptext99 4F44  
                                    _lcd_data 4D40                                      _lcd_init 448A  
                      ?_ADCC_IsConversionDone 0001                __size_of_UART1_SetErrorHandler 000E  
               TMR6_DefaultInterruptHandler@i 0003                 __end_of_UART1_SetErrorHandler 4EE2  
                            __size_of_sprintf 0042                         ??_UART2_RxDataHandler 0001  
                            __size_of_work_sw 0088                           led_lightshow@LED_UP 00AC  
                               __size_of_main 0038                                 __size_of_dtoa 0244  
                               __size_of_rand 00DA                                 __size_of_once 002A  
                               __size_of_stoa 0148      __end_of_UART2_DefaultFramingErrorHandler 4F46  
   __size_of_UART2_DefaultFramingErrorHandler 0002            ??_UART2_DefaultFramingErrorHandler 0001  
           ?_UART2_DefaultFramingErrorHandler 0001              _UART2_DefaultFramingErrorHandler 4F44  
                      __size_of_lcd_moveto_xy 002A                                   _IVTLOCKbits 003FD4  
                           ??_Digital232_init 0056                      __size_of_TMR5_WriteTimer 0024  
                   _UART1_OverrunErrorHandler 0178                                     stoa@F1139 019E  
UART2_SetOverrunErrorHandler@interruptHandler 0006  UART1_SetOverrunErrorHandler@interruptHandler 0006  
          __size_of_UART1_DefaultErrorHandler 0006                  __end_of_ADCC_StartConversion 4E56  
                  ?_UART1_DefaultErrorHandler 0001                                      _wdtdelay 4806  
                  __end_of_UART2_Transmit_ISR 49E6                                      _vfprintf 454C  
                                   printf@fmt 0064                    __end_of_PWM8_LoadDutyValue 4982  
                                    _switches 01A7                                   _UART2_Write 4788  
                      __end_of_lcd_inc_column 4E22                             ??_TMR5_Initialize 0009  
                            ___aomod@dividend 0006                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0009                   __end_of_UART1_RxDataHandler 4BDC  
                                 _uart1RxHead 005A                                   _uart1TxHead 00AB  
                                 _uart2RxHead 0059                                   _uart1RxTail 00A8  
                                 _uart2TxHead 00A6                                   _uart1TxTail 00AA  
                                 _uart2RxTail 0058                        __size_of_led_lightshow 02AA  
                                 _uart2TxTail 00A5                               ?_lcd_clear_area 000F  
                      ??_INTERRUPT_Initialize 0006                          lcd_clear_area_xy@col 001D  
        __end_of_TMR6_DefaultInterruptHandler 4806         __size_of_TMR6_DefaultInterruptHandler 003C  
                _TMR6_DefaultInterruptHandler 47CA                                   ??_lp_filter 0050  
        __end_of_UART2_SetOverrunErrorHandler 4E80         __size_of_UART2_SetOverrunErrorHandler 000E  
                _UART2_SetOverrunErrorHandler 4E72                                      intlevel2 0000  
                                   sprintf@ap 006D                       ?_PIN_MANAGER_Initialize 0001  
                           ??_TMR6_Initialize 0009                             ??_PWM8_Initialize 0006  
                  __end_of_eaDogM_WriteString 448A                __size_of_UART2_SetErrorHandler 000E  
               __end_of_UART2_SetErrorHandler 4E9C                           _uart1RxStatusBuffer 014A  
                         lcd_clear_area@pages 0019                           lcd_clear_area@style 0010  
                                  _SPI1SCKPPS 003ADE                                    _SPI1SDIPPS 003ADF  
                             ??_TMR5_CallBack 0005                                      printf@ap 0069  
                                  _UART2_Read 46C0  UART2_SetFramingErrorHandler@interruptHandler 0006  
UART1_SetFramingErrorHandler@interruptHandler 0006                      _ADCC_GetConversionResult 4E22  
           __end_of_UART1_DefaultErrorHandler 4F30                               ___aomod@divisor 000E  
                                 ??_vfpfcnvrt 004B                                      stoa@nuls 0016  
                             ___aomod@counter 0016                             _UART2_is_rx_ready 4F24  
                      _uart2TxBufferRemaining 00A4                               ?_lcd_inc_column 0006  
                              _FVR_Initialize 4F16                                 lp_filter@lp_x 0070  
                                    sprintf@f 006E                                      sprintf@s 0064  
                               lp_filter@slow 0066                            ?_UART2_is_rx_ready 0001  
                               _lcd_moveto_xy 4AD0                         TMR5_ISR@CountCallBack 0190  
                   __size_of_UART1_Initialize 00B8                      _UART1_TxInterruptHandler 017E  
                         ??_UART2_is_rx_ready 0006                                 ___fladd@signs 0012  
                         __end_of_Default_ISR 4F3E                                  ___aodiv@sign 0017  
              __end_of_PIN_MANAGER_Initialize 3FA4                             ??_ADCC_Initialize 0006  
               ?_TMR6_DefaultInterruptHandler 0001                 ?_UART2_SetOverrunErrorHandler 0006  
                                ___fladd@aexp 0013                                  ___fladd@bexp 0014  
             ??_lcd_get_position_column$F2718 0006                                 ?_lcd_inc_page 0001  
                ?_UART1_SetTxInterruptHandler 0006                       _eaDogM_WriteStringAtPos 4CB0  
                ?_UART2_SetRxInterruptHandler 0006                                  ?_lcd_command 0001  
                                ___aomod@sign 0017                                 once@once_flag 0006  
                               _led_lightshow 26AC                     __size_of_UART2_Initialize 00AE  
