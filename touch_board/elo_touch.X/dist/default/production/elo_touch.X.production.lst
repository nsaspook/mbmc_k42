

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 13 17:24:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=4,class=CODE,delta=1
    95                           	psect	text77,global,reloc=4,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=4,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=4,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=4,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=4,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=4,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121  0000                     
   122                           ; Version 2.10
   123                           ; Generated 31/07/2019 GMT
   124                           ; 
   125                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   126                           ; All rights reserved.
   127                           ; 
   128                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   129                           ; 
   130                           ; Redistribution and use in source and binary forms, with or without modification, are
   131                           ; permitted provided that the following conditions are met:
   132                           ; 
   133                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   134                           ;        conditions and the following disclaimer.
   135                           ; 
   136                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   137                           ;        of conditions and the following disclaimer in the documentation and/or other
   138                           ;        materials provided with the distribution.
   139                           ; 
   140                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   141                           ;        software without specific prior written permission.
   142                           ; 
   143                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   144                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   145                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   146                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   147                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   148                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   149                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   150                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   151                           ; 
   152                           ; 
   153                           ; Code-generator required, PIC18F47K42 Definitions
   154                           ; 
   155                           ; SFR Addresses
   156  0000                     
   157                           	psect	idataBANK0
   158  0054F8                     __pidataBANK0:
   159                           	opt callstack 0
   160                           
   161                           ;initializer for led_lightshow@LED_UP
   162  0054F8  01                 	db	1
   163                           
   164                           ;initializer for led_lightshow@cylon
   165  0054F9  FF                 	db	255
   166                           
   167                           	psect	idataBANK1
   168  004D7A                     __pidataBANK1:
   169                           	opt callstack 0
   170                           
   171                           ;initializer for stoa@F1139
   172  004D7A  28                 	db	40
   173  004D7B  6E                 	db	110
   174  004D7C  75                 	db	117
   175  004D7D  6C                 	db	108
   176  004D7E  6C                 	db	108
   177  004D7F  29                 	db	41
   178  004D80  00                 	db	0
   179                           
   180                           ;initializer for _sounds
   181  004D81  AF                 	db	low (_IO+6)
   182  004D82  01                 	db	high (_IO+6)
   183                           
   184                           ;initializer for _switches
   185  004D83  A9                 	db	low _IO
   186  004D84  01                 	db	high _IO
   187                           
   188                           ;initializer for _IO
   189  004D85  00                 	db	0
   190  004D86  00                 	db	0
   191  004D87  00                 	db	0
   192  004D88  00                 	db	0
   193  004D89  00                 	db	0
   194  004D8A  00                 	db	0
   195  004D8B  00                 	db	0
   196  004D8C  00                 	db	0
   197  004D8D  00                 	db	0
   198  004D8E  00                 	db	0
   199  004D8F  00                 	db	0
   200  004D90  00                 	db	0
   201  004D91  00                 	db	0
   202  004D92  00                 	db	0
   203  004D93  00                 	db	0
   204  004D94  02                 	db	2
   205  004D95  00                 	db	0
   206  004D96  00                 	db	0
   207  004D97  00                 	db	0
   208  004D98  00                 	db	0
   209  004D99  32                 	db	50
   210  004D9A  00                 	db	0
   211  004D9B  00                 	db	0
   212  004D9C  0000               	dw	0
   213  004D9E  0000               	dw	0
   214  004DA0  000A               	dw	10
   215  004DA2  0000               	dw	0
   216  004DA4  0000               	dw	0
   217  004DA6  01                 	db	1
   218  004DA7  00                 	db	0
   219  004DA8  00                 	db	0
   220  004DA9  01                 	db	1
   221  004DAA  01                 	db	1
   222  004DAB  01                 	db	1
   223  004DAC  00                 	db	0
   224  004DAD  00                 	db	0
   225                           
   226                           ;initializer for _otto_b1
   227  004DAE  0190               	dw	400
   228  004DB0  0E74               	dw	3700
   229  004DB2  0000               	dw	0
   230  004DB4  0000               	dw	0
   231  004DB6  0000               	dw	0
   232  004DB8  0000               	dw	0
   233  004DBA  FF00               	dw	65280
   234  0000                     _IVTADL	set	14493
   235  0000                     _IVTADH	set	14494
   236  0000                     _IVTADU	set	14495
   237  0000                     _PIR2bits	set	14754
   238  0000                     _PIE8bits	set	14744
   239  0000                     _PIR8bits	set	14760
   240  0000                     _PIE9bits	set	14745
   241  0000                     _PIR9bits	set	14761
   242  0000                     _PIR4bits	set	14756
   243  0000                     _PIE6bits	set	14742
   244  0000                     _PIE3bits	set	14739
   245  0000                     _IPR8bits	set	14728
   246  0000                     _IPR9bits	set	14729
   247  0000                     _IPR3bits	set	14723
   248  0000                     _IPR6bits	set	14726
   249  0000                     _PMD7	set	14791
   250  0000                     _PMD6	set	14790
   251  0000                     _PMD5	set	14789
   252  0000                     _PMD4	set	14788
   253  0000                     _PMD3	set	14787
   254  0000                     _PMD2	set	14786
   255  0000                     _PMD1	set	14785
   256  0000                     _PMD0	set	14784
   257  0000                     _OSCTUNE	set	14814
   258  0000                     _OSCFRQ	set	14815
   259  0000                     _OSCEN	set	14813
   260  0000                     _OSCCON3	set	14811
   261  0000                     _OSCCON1	set	14809
   262  0000                     _PLLR	set	118496
   263  0000                     _SPI1SDIPPS	set	15071
   264  0000                     _U1RXPPS	set	15077
   265  0000                     _RC6PPS	set	14870
   266  0000                     _RC5PPS	set	14869
   267  0000                     _RD1PPS	set	14873
   268  0000                     _RC3PPS	set	14867
   269  0000                     _RB6PPS	set	14862
   270  0000                     _SPI1SCKPPS	set	15070
   271  0000                     _U2RXPPS	set	15080
   272  0000                     _SLRCONE	set	14979
   273  0000                     _SLRCOND	set	14963
   274  0000                     _SLRCONC	set	14947
   275  0000                     _SLRCONB	set	14931
   276  0000                     _SLRCONA	set	14915
   277  0000                     _ODCOND	set	14962
   278  0000                     _ODCONC	set	14946
   279  0000                     _ODCONB	set	14930
   280  0000                     _ODCONA	set	14914
   281  0000                     _ODCONE	set	14978
   282  0000                     _RD1I2C	set	14971
   283  0000                     _RD0I2C	set	14970
   284  0000                     _RC4I2C	set	14955
   285  0000                     _RC3I2C	set	14954
   286  0000                     _RB2I2C	set	14939
   287  0000                     _RB1I2C	set	14938
   288  0000                     _WPUC	set	14945
   289  0000                     _WPUA	set	14913
   290  0000                     _WPUB	set	14929
   291  0000                     _WPUE	set	14977
   292  0000                     _WPUD	set	14961
   293  0000                     _ANSELA	set	14912
   294  0000                     _ANSELE	set	14976
   295  0000                     _ANSELB	set	14928
   296  0000                     _ANSELC	set	14944
   297  0000                     _ANSELD	set	14960
   298  0000                     _SPI1RXB	set	15632
   299  0000                     _SPI1TXB	set	15633
   300  0000                     _SPI1TCNTL	set	15634
   301  0000                     _SPI1CON0	set	15636
   302  0000                     _SPI1CLK	set	15644
   303  0000                     _SPI1BAUD	set	15641
   304  0000                     _SPI1CON2	set	15638
   305  0000                     _SPI1CON1	set	15637
   306  0000                     _U2RXB	set	15824
   307  0000                     _U2TXB	set	15826
   308  0000                     _U2ERRIRbits	set	15841
   309  0000                     _U2ERRIE	set	15842
   310  0000                     _U2ERRIR	set	15841
   311  0000                     _U2UIR	set	15840
   312  0000                     _U2FIFO	set	15839
   313  0000                     _U2BRGH	set	15838
   314  0000                     _U2BRGL	set	15837
   315  0000                     _U2CON2	set	15836
   316  0000                     _U2CON1	set	15835
   317  0000                     _U2CON0	set	15834
   318  0000                     _U2P3L	set	15832
   319  0000                     _U2P2L	set	15830
   320  0000                     _U2P1L	set	15828
   321  0000                     _U1RXB	set	15848
   322  0000                     _U1TXB	set	15850
   323  0000                     _U1ERRIRbits	set	15865
   324  0000                     _U1ERRIE	set	15866
   325  0000                     _U1ERRIR	set	15865
   326  0000                     _U1UIR	set	15864
   327  0000                     _U1FIFO	set	15863
   328  0000                     _U1BRGH	set	15862
   329  0000                     _U1BRGL	set	15861
   330  0000                     _U1CON2	set	15860
   331  0000                     _U1CON1	set	15859
   332  0000                     _U1CON0	set	15858
   333  0000                     _U1P3H	set	15857
   334  0000                     _U1P3L	set	15856
   335  0000                     _U1P2H	set	15855
   336  0000                     _U1P2L	set	15854
   337  0000                     _U1P1H	set	15853
   338  0000                     _U1P1L	set	15852
   339  0000                     _FVRCON	set	16065
   340  0000                     _ADRESL	set	16111
   341  0000                     _ADRESH	set	16112
   342  0000                     _ADCON0bits	set	16120
   343  0000                     _ADCON0	set	16120
   344  0000                     _ADCLK	set	16127
   345  0000                     _ADACT	set	16126
   346  0000                     _ADREF	set	16125
   347  0000                     _ADSTAT	set	16124
   348  0000                     _ADCON3	set	16123
   349  0000                     _ADCON2	set	16122
   350  0000                     _ADCON1	set	16121
   351  0000                     _ADPREH	set	16119
   352  0000                     _ADPREL	set	16118
   353  0000                     _ADCAP	set	16117
   354  0000                     _ADACQH	set	16116
   355  0000                     _ADACQL	set	16115
   356  0000                     _ADPCH	set	16113
   357  0000                     _ADRPT	set	16108
   358  0000                     _ADACCU	set	16106
   359  0000                     _ADSTPTH	set	16101
   360  0000                     _ADSTPTL	set	16100
   361  0000                     _ADUTHH	set	16097
   362  0000                     _ADUTHL	set	16096
   363  0000                     _ADLTHH	set	16095
   364  0000                     _ADLTHL	set	16094
   365  0000                     _CCPTMRS1bits	set	16223
   366  0000                     _LATCbits	set	16316
   367  0000                     _LATEbits	set	16318
   368  0000                     _T5CONbits	set	16282
   369  0000                     _T5CON	set	16282
   370  0000                     _TMR5L	set	16280
   371  0000                     _TMR5H	set	16281
   372  0000                     _T5CLK	set	16285
   373  0000                     _T5GATE	set	16284
   374  0000                     _T5GCON	set	16283
   375  0000                     _T6CON	set	16276
   376  0000                     _T6TMR	set	16274
   377  0000                     _T6PR	set	16275
   378  0000                     _T6RST	set	16279
   379  0000                     _T6HLT	set	16277
   380  0000                     _T6CLKCON	set	16278
   381  0000                     _PWM8DCL	set	16224
   382  0000                     _PWM8DCH	set	16225
   383  0000                     _PWM8CON	set	16226
   384  0000                     _T2CON	set	16300
   385  0000                     _T2TMR	set	16298
   386  0000                     _T2PR	set	16299
   387  0000                     _T2RST	set	16303
   388  0000                     _T2HLT	set	16301
   389  0000                     _T2CLKCON	set	16302
   390  0000                     _IVTLOCKbits	set	16340
   391  0000                     _IVTLOCK	set	16340
   392  0000                     _INTCON0bits	set	16338
   393  0000                     _TRISD	set	16325
   394  0000                     _TRISC	set	16324
   395  0000                     _TRISB	set	16323
   396  0000                     _TRISA	set	16322
   397  0000                     _TRISE	set	16326
   398  0000                     _LATC	set	16316
   399  0000                     _LATB	set	16315
   400  0000                     _LATA	set	16314
   401  0000                     _LATD	set	16317
   402  0000                     _LATE	set	16318
   403  0000                     _GIE	set	130711
   404                           
   405                           	psect	smallconst
   406  002000                     __psmallconst:
   407                           	opt callstack 0
   408  002000  00                 	db	0
   409  002001                     STR_1:
   410                           
   411                           ; BSR set to: 1
   412  002001  20                 	db	32
   413  002002  48                 	db	72	;'H'
   414  002003  20                 	db	32
   415  002004  25                 	db	37
   416  002005  69                 	db	105	;'i'
   417  002006  2C                 	db	44
   418  002007  20                 	db	32
   419  002008  4D                 	db	77	;'M'
   420  002009  20                 	db	32
   421  00200A  25                 	db	37
   422  00200B  69                 	db	105	;'i'
   423  00200C  20                 	db	32
   424  00200D  20                 	db	32
   425  00200E  20                 	db	32
   426  00200F  20                 	db	32
   427  002010  20                 	db	32
   428  002011  00                 	db	0
   429  002012                     STR_2:
   430                           
   431                           ; BSR set to: 1
   432  002012  20                 	db	32
   433  002013  53                 	db	83	;'S'
   434  002014  63                 	db	99	;'c'
   435  002015  6F                 	db	111	;'o'
   436  002016  72                 	db	114	;'r'
   437  002017  65                 	db	101	;'e'
   438  002018  20                 	db	32
   439  002019  25                 	db	37
   440  00201A  69                 	db	105	;'i'
   441  00201B  20                 	db	32
   442  00201C  25                 	db	37
   443  00201D  69                 	db	105	;'i'
   444  00201E  20                 	db	32
   445  00201F  20                 	db	32
   446  002020  20                 	db	32
   447  002021  20                 	db	32
   448  002022  00                 	db	0
   449  002023                     STR_3:
   450                           
   451                           ; BSR set to: 1
   452  002023  53                 	db	83	;'S'
   453  002024  57                 	db	87	;'W'
   454  002025  20                 	db	32
   455  002026  25                 	db	37
   456  002027  73                 	db	115	;'s'
   457  002028  20                 	db	32
   458  002029  50                 	db	80	;'P'
   459  00202A  6C                 	db	108	;'l'
   460  00202B  61                 	db	97	;'a'
   461  00202C  79                 	db	121	;'y'
   462  00202D  21                 	db	33
   463  00202E  00                 	db	0
   464  00202F                     STR_4:
   465                           
   466                           ; BSR set to: 1
   467  00202F  31                 	db	49	;'1'
   468  002030  2E                 	db	46
   469  002031  30                 	db	48	;'0'
   470  002032  37                 	db	55	;'7'
   471  002033  00                 	db	0
   472  002034                     STR_16:
   473                           
   474                           ; BSR set to: 1
   475  002034  52                 	db	82	;'R'
   476  002035  30                 	db	48	;'0'
   477  002036  0D                 	db	13
   478  002037  00                 	db	0
   479  002038                     STR_8:
   480                           
   481                           ; BSR set to: 1
   482  002038  54                 	db	84	;'T'
   483  002039  32                 	db	50	;'2'
   484  00203A  0D                 	db	13
   485  00203B  00                 	db	0
   486  00203C                     STR_10:
   487                           
   488                           ; BSR set to: 1
   489  00203C  43                 	db	67	;'C'
   490  00203D  34                 	db	52	;'4'
   491  00203E  0D                 	db	13
   492  00203F  00                 	db	0
   493  002040                     STR_12:
   494                           
   495                           ; BSR set to: 1
   496  002040  46                 	db	70	;'F'
   497  002041  34                 	db	52	;'4'
   498  002042  0D                 	db	13
   499  002043  00                 	db	0
   500  002044                     STR_14:
   501                           
   502                           ; BSR set to: 1
   503  002044  4D                 	db	77	;'M'
   504  002045  34                 	db	52	;'4'
   505  002046  0D                 	db	13
   506  002047  00                 	db	0
   507  002048                     STR_6:
   508                           
   509                           ; BSR set to: 1
   510  002048  58                 	db	88	;'X'
   511  002049  51                 	db	81	;'Q'
   512  00204A  0D                 	db	13
   513  00204B  00                 	db	0
   514  00204C                     STR_5:
   515                           
   516                           ; BSR set to: 1
   517  00204C  25                 	db	37
   518  00204D  73                 	db	115	;'s'
   519  00204E  00                 	db	0
   520  0000                     
   521                           ; #config settings
   522  00204F  00                 	db	0	; dummy byte at the end
   523  0000                     
   524                           	psect	cinit
   525  0049A8                     __pcinit:
   526                           	opt callstack 0
   527  0049A8                     start_initialization:
   528                           	opt callstack 0
   529  0049A8                     __initialization:
   530                           	opt callstack 0
   531                           
   532                           ; Initialize objects allocated to BANK1 (66 bytes)
   533                           ; load TBLPTR registers with __pidataBANK1
   534  0049A8  0E7A               	movlw	low __pidataBANK1
   535  0049AA  6EF6               	movwf	tblptrl,c
   536  0049AC  0E4D               	movlw	high __pidataBANK1
   537  0049AE  6EF7               	movwf	tblptrh,c
   538  0049B0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   539  0049B2  6EF8               	movwf	tblptru,c
   540  0049B4  EE00  F19E         	lfsr	0,__pdataBANK1
   541  0049B8  EE10 F042          	lfsr	1,66
   542  0049BC                     copy_data0:
   543  0049BC  0009               	tblrd		*+
   544  0049BE  006F FFD7 FFEE     	movff	tablat,postinc0
   545  0049C4  50E5               	movf	postdec1,w,c
   546  0049C6  50E1               	movf	fsr1l,w,c
   547  0049C8  E1F9               	bnz	copy_data0
   548                           
   549                           ; Initialize objects allocated to BANK0 (2 bytes)
   550                           ; load TBLPTR registers with __pidataBANK0
   551  0049CA  0EF8               	movlw	low __pidataBANK0
   552  0049CC  6EF6               	movwf	tblptrl,c
   553  0049CE  0E54               	movlw	high __pidataBANK0
   554  0049D0  6EF7               	movwf	tblptrh,c
   555  0049D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   556  0049D4  6EF8               	movwf	tblptru,c
   557  0049D6  0009               	tblrd		*+	;fetch initializer
   558  0049D8  006F FFD4  F0AC    	movff	tablat,__pdataBANK0
   559  0049DE  0009               	tblrd		*+	;fetch initializer
   560  0049E0  006F FFD4  F0AD    	movff	tablat,__pdataBANK0+1
   561                           
   562                           ; Clear objects allocated to BANK2 (32 bytes)
   563  0049E6  EE00  F280         	lfsr	0,__pbssBANK2
   564  0049EA  0E20               	movlw	32
   565  0049EC                     clear_0:
   566  0049EC  6AEE               	clrf	postinc0,c
   567  0049EE  06E8               	decf	wreg,f,c
   568  0049F0  E1FD               	bnz	clear_0
   569                           
   570                           ; Clear objects allocated to BANK1 (158 bytes)
   571  0049F2  EE00  F100         	lfsr	0,__pbssBANK1
   572  0049F6  0E9E               	movlw	158
   573  0049F8                     clear_1:
   574  0049F8  6AEE               	clrf	postinc0,c
   575  0049FA  06E8               	decf	wreg,f,c
   576  0049FC  E1FD               	bnz	clear_1
   577                           
   578                           ; Clear objects allocated to BANK0 (14 bytes)
   579  0049FE  EE00  F09E         	lfsr	0,__pbssBANK0
   580  004A02  0E0E               	movlw	14
   581  004A04                     clear_2:
   582  004A04  6AEE               	clrf	postinc0,c
   583  004A06  06E8               	decf	wreg,f,c
   584  004A08  E1FD               	bnz	clear_2
   585                           
   586                           ; Clear objects allocated to COMRAM (5 bytes)
   587  004A0A  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   588  004A0C  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   589  004A0E  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   590  004A10  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   591  004A12  6A56               	clrf	__pbssCOMRAM& (0+255),c
   592                           
   593                           ;
   594                           ; Setup IVTBASE
   595                           ;
   596  004A14  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   597  004A16  6ED5               	movwf	213,c
   598  004A18  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   599  004A1A  6ED6               	movwf	214,c
   600  004A1C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   601  004A1E  6ED7               	movwf	215,c
   602  004A20                     end_of_initialization:
   603                           	opt callstack 0
   604  004A20                     __end_of__initialization:
   605                           	opt callstack 0
   606  004A20  0100               	movlb	0
   607  004A22  EF28  F010         	goto	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMRAM
   610  000056                     __pbssCOMRAM:
   611                           	opt callstack 0
   612  000056                     _flags:
   613                           	opt callstack 0
   614  000056                     	ds	2
   615  000058                     _uart2RxTail:
   616                           	opt callstack 0
   617  000058                     	ds	1
   618  000059                     _uart2RxHead:
   619                           	opt callstack 0
   620  000059                     	ds	1
   621  00005A                     _uart1RxHead:
   622                           	opt callstack 0
   623  00005A                     	ds	1
   624                           
   625                           	psect	bssBANK0
   626  00009E                     __pbssBANK0:
   627                           	opt callstack 0
   628  00009E                     _prec:
   629                           	opt callstack 0
   630  00009E                     	ds	2
   631  0000A0                     led_lightshow@alive_led:
   632                           	opt callstack 0
   633  0000A0                     	ds	2
   634  0000A2                     Digital232_RW@x:
   635                           	opt callstack 0
   636  0000A2                     	ds	1
   637  0000A3                     _uart2RxCount:
   638                           	opt callstack 0
   639  0000A3                     	ds	1
   640  0000A4                     _uart2TxBufferRemaining:
   641                           	opt callstack 0
   642  0000A4                     	ds	1
   643  0000A5                     _uart2TxTail:
   644                           	opt callstack 0
   645  0000A5                     	ds	1
   646  0000A6                     _uart2TxHead:
   647                           	opt callstack 0
   648  0000A6                     	ds	1
   649  0000A7                     _uart1RxCount:
   650                           	opt callstack 0
   651  0000A7                     	ds	1
   652  0000A8                     _uart1RxTail:
   653                           	opt callstack 0
   654  0000A8                     	ds	1
   655  0000A9                     _uart1TxBufferRemaining:
   656                           	opt callstack 0
   657  0000A9                     	ds	1
   658  0000AA                     _uart1TxTail:
   659                           	opt callstack 0
   660  0000AA                     	ds	1
   661  0000AB                     _uart1TxHead:
   662                           	opt callstack 0
   663  0000AB                     	ds	1
   664                           
   665                           	psect	dataBANK0
   666  0000AC                     __pdataBANK0:
   667                           	opt callstack 0
   668  0000AC                     led_lightshow@LED_UP:
   669                           	opt callstack 0
   670  0000AC                     	ds	1
   671  0000AD                     led_lightshow@cylon:
   672                           	opt callstack 0
   673  0000AD                     	ds	1
   674                           
   675                           	psect	bssBANK1
   676  000100                     __pbssBANK1:
   677                           	opt callstack 0
   678  000100                     lp_filter@smooth:
   679                           	opt callstack 0
   680  000100                     	ds	32
   681  000120                     _tickCount:
   682                           	opt callstack 0
   683  000120                     	ds	18
   684  000132                     _uart2RxStatusBuffer:
   685                           	opt callstack 0
   686  000132                     	ds	8
   687  00013A                     _uart2RxBuffer:
   688                           	opt callstack 0
   689  00013A                     	ds	8
   690  000142                     _uart2TxBuffer:
   691                           	opt callstack 0
   692  000142                     	ds	8
   693  00014A                     _uart1RxStatusBuffer:
   694                           	opt callstack 0
   695  00014A                     	ds	8
   696  000152                     _uart1RxBuffer:
   697                           	opt callstack 0
   698  000152                     	ds	8
   699  00015A                     _uart1TxBuffer:
   700                           	opt callstack 0
   701  00015A                     	ds	8
   702  000162                     wdtdelay@dcount:
   703                           	opt callstack 0
   704  000162                     	ds	4
   705  000166                     _TMR5_InterruptHandler:
   706                           	opt callstack 0
   707  000166                     	ds	3
   708  000169                     _TMR6_InterruptHandler:
   709                           	opt callstack 0
   710  000169                     	ds	3
   711  00016C                     _UART2_ErrorHandler:
   712                           	opt callstack 0
   713  00016C                     	ds	3
   714  00016F                     _UART2_OverrunErrorHandler:
   715                           	opt callstack 0
   716  00016F                     	ds	3
   717  000172                     _UART2_FramingErrorHandler:
   718                           	opt callstack 0
   719  000172                     	ds	3
   720  000175                     _UART1_ErrorHandler:
   721                           	opt callstack 0
   722  000175                     	ds	3
   723  000178                     _UART1_OverrunErrorHandler:
   724                           	opt callstack 0
   725  000178                     	ds	3
   726  00017B                     _UART1_FramingErrorHandler:
   727                           	opt callstack 0
   728  00017B                     	ds	3
   729  00017E                     _UART1_TxInterruptHandler:
   730                           	opt callstack 0
   731  00017E                     	ds	3
   732  000181                     _UART1_RxInterruptHandler:
   733                           	opt callstack 0
   734  000181                     	ds	3
   735  000184                     _UART2_TxInterruptHandler:
   736                           	opt callstack 0
   737  000184                     	ds	3
   738  000187                     _UART2_RxInterruptHandler:
   739                           	opt callstack 0
   740  000187                     	ds	3
   741  00018A                     _nout:
   742                           	opt callstack 0
   743  00018A                     	ds	2
   744  00018C                     _width:
   745                           	opt callstack 0
   746  00018C                     	ds	2
   747  00018E                     led_lightshow@j:
   748                           	opt callstack 0
   749  00018E                     	ds	2
   750  000190                     TMR5_ISR@CountCallBack:
   751                           	opt callstack 0
   752  000190                     	ds	2
   753  000192                     _timer5ReloadVal:
   754                           	opt callstack 0
   755  000192                     	ds	2
   756  000194                     _uart2RxLastError:
   757                           	opt callstack 0
   758  000194                     	ds	1
   759  000195                     _uart1RxLastError:
   760                           	opt callstack 0
   761  000195                     	ds	1
   762  000196                     _seed:
   763                           	opt callstack 0
   764  000196                     	ds	8
   765                           
   766                           	psect	dataBANK1
   767  00019E                     __pdataBANK1:
   768                           	opt callstack 0
   769  00019E                     stoa@F1139:
   770                           	opt callstack 0
   771  00019E                     	ds	7
   772  0001A5                     _sounds:
   773                           	opt callstack 0
   774  0001A5                     	ds	2
   775  0001A7                     _switches:
   776                           	opt callstack 0
   777  0001A7                     	ds	2
   778  0001A9                     _IO:
   779                           	opt callstack 0
   780  0001A9                     	ds	41
   781  0001D2                     _otto_b1:
   782                           	opt callstack 0
   783  0001D2                     	ds	14
   784                           
   785                           	psect	bssBANK2
   786  000280                     __pbssBANK2:
   787                           	opt callstack 0
   788  000280                     _dbuf:
   789                           	opt callstack 0
   790  000280                     	ds	32
   791                           
   792                           	psect	cstackBANK2
   793  000200                     __pcstackBANK2:
   794                           	opt callstack 0
   795  000200                     work_sw@buffer:
   796                           	opt callstack 0
   797                           
   798                           ; 128 bytes @ 0x0
   799  000200                     	ds	128
   800                           
   801                           	psect	cstackBANK0
   802  000060                     __pcstackBANK0:
   803                           	opt callstack 0
   804  000060                     ?_vfprintf:
   805                           	opt callstack 0
   806  000060                     ?_lp_filter:
   807                           	opt callstack 0
   808  000060                     vfprintf@fp:
   809                           	opt callstack 0
   810  000060                     lp_filter@new:
   811                           	opt callstack 0
   812                           
   813                           ; 4 bytes @ 0x0
   814  000060                     	ds	2
   815  000062                     vfprintf@fmt:
   816                           	opt callstack 0
   817                           
   818                           ; 1 bytes @ 0x2
   819  000062                     	ds	1
   820  000063                     vfprintf@ap:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0x3
   824  000063                     	ds	1
   825  000064                     ?_sprintf:
   826                           	opt callstack 0
   827  000064                     ?_printf:
   828                           	opt callstack 0
   829  000064                     printf@fmt:
   830                           	opt callstack 0
   831  000064                     lp_filter@bn:
   832                           	opt callstack 0
   833  000064                     sprintf@s:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x4
   837  000064                     	ds	2
   838  000066                     sprintf@fmt:
   839                           	opt callstack 0
   840  000066                     lp_filter@slow:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x6
   844  000066                     	ds	2
   845  000068                     _lp_filter$3690:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0x8
   849  000068                     	ds	1
   850  000069                     printf@ap:
   851                           	opt callstack 0
   852                           
   853                           ; 1 bytes @ 0x9
   854  000069                     	ds	3
   855  00006C                     lp_filter@lp_speed:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0xC
   859  00006C                     	ds	1
   860  00006D                     sprintf@ap:
   861                           	opt callstack 0
   862                           
   863                           ; 1 bytes @ 0xD
   864  00006D                     	ds	1
   865  00006E                     sprintf@f:
   866                           	opt callstack 0
   867                           
   868                           ; 6 bytes @ 0xE
   869  00006E                     	ds	2
   870  000070                     lp_filter@lp_x:
   871                           	opt callstack 0
   872                           
   873                           ; 4 bytes @ 0x10
   874  000070                     	ds	4
   875  000074                     ?___fltol:
   876                           	opt callstack 0
   877  000074                     ___fltol@f1:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x14
   881  000074                     	ds	4
   882  000078                     ___fltol@sign1:
   883                           	opt callstack 0
   884                           
   885                           ; 1 bytes @ 0x18
   886  000078                     	ds	1
   887  000079                     ___fltol@exp1:
   888                           	opt callstack 0
   889                           
   890                           ; 1 bytes @ 0x19
   891  000079                     	ds	1
   892  00007A                     calc_pot@value:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x1A
   896  00007A                     	ds	2
   897  00007C                     ??_calc_pot:
   898                           
   899                           ; 1 bytes @ 0x1C
   900  00007C                     	ds	2
   901  00007E                     ??_Digital232_RW:
   902                           
   903                           ; 1 bytes @ 0x1E
   904  00007E                     	ds	2
   905  000080                     Digital232_RW@i:
   906                           	opt callstack 0
   907                           
   908                           ; 1 bytes @ 0x20
   909  000080                     	ds	1
   910  000081                     Digital232_RW@j:
   911                           	opt callstack 0
   912                           
   913                           ; 1 bytes @ 0x21
   914  000081                     	ds	1
   915  000082                     ??_main:
   916                           
   917                           ; 1 bytes @ 0x22
   918  000082                     	ds	2
   919  000084                     main@buffer:
   920                           	opt callstack 0
   921                           
   922                           ; 24 bytes @ 0x24
   923  000084                     	ds	25
   924  00009D                     main@y:
   925                           	opt callstack 0
   926                           
   927                           ; 1 bytes @ 0x3D
   928  00009D                     	ds	1
   929                           
   930                           	psect	cstackCOMRAM
   931  000001                     __pcstackCOMRAM:
   932                           	opt callstack 0
   933  000001                     
   934                           ; 1 bytes @ 0x0
   935  000001                     	ds	2
   936  000003                     TMR6_DefaultInterruptHandler@i:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x2
   940  000003                     	ds	1
   941  000004                     ??_TMR5_DefaultInterruptHandler:
   942  000004                     TMR5_WriteTimer@timerVal:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x3
   946  000004                     	ds	1
   947  000005                     
   948                           ; 1 bytes @ 0x4
   949  000005                     	ds	1
   950  000006                     ?_strlen:
   951                           	opt callstack 0
   952  000006                     ?_ADCC_GetConversionResult:
   953                           	opt callstack 0
   954  000006                     ?___awdiv:
   955                           	opt callstack 0
   956  000006                     ?___fladd:
   957                           	opt callstack 0
   958  000006                     ?___xxtofl:
   959                           	opt callstack 0
   960  000006                     ?___omul:
   961                           	opt callstack 0
   962  000006                     ?___aodiv:
   963                           	opt callstack 0
   964  000006                     ?___aomod:
   965                           	opt callstack 0
   966  000006                     INTERRUPT_Initialize@state:
   967                           	opt callstack 0
   968  000006                     UART2_Read@readValue:
   969                           	opt callstack 0
   970  000006                     UART2_Write@txData:
   971                           	opt callstack 0
   972  000006                     ADCC_StartConversion@channel:
   973                           	opt callstack 0
   974  000006                     SPI1_Exchange8bit@data:
   975                           	opt callstack 0
   976  000006                     PWM8_LoadDutyValue@dutyValue:
   977                           	opt callstack 0
   978  000006                     once@once_flag:
   979                           	opt callstack 0
   980  000006                     StartTimer@count:
   981                           	opt callstack 0
   982  000006                     ___awdiv@dividend:
   983                           	opt callstack 0
   984  000006                     srand@s:
   985                           	opt callstack 0
   986  000006                     strlen@s:
   987                           	opt callstack 0
   988  000006                     UART1_SetFramingErrorHandler@interruptHandler:
   989                           	opt callstack 0
   990  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
   991                           	opt callstack 0
   992  000006                     UART1_SetErrorHandler@interruptHandler:
   993                           	opt callstack 0
   994  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
   995                           	opt callstack 0
   996  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
   997                           	opt callstack 0
   998  000006                     UART2_SetFramingErrorHandler@interruptHandler:
   999                           	opt callstack 0
  1000  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
  1001                           	opt callstack 0
  1002  000006                     UART2_SetErrorHandler@interruptHandler:
  1003                           	opt callstack 0
  1004  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
  1005                           	opt callstack 0
  1006  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
  1007                           	opt callstack 0
  1008  000006                     TMR6_SetInterruptHandler@InterruptHandler:
  1009                           	opt callstack 0
  1010  000006                     TMR5_SetInterruptHandler@InterruptHandler:
  1011                           	opt callstack 0
  1012  000006                     wdtdelay@delay:
  1013                           	opt callstack 0
  1014  000006                     ___fladd@b:
  1015                           	opt callstack 0
  1016  000006                     ___xxtofl@val:
  1017                           	opt callstack 0
  1018  000006                     ___omul@multiplier:
  1019                           	opt callstack 0
  1020  000006                     ___aodiv@dividend:
  1021                           	opt callstack 0
  1022  000006                     ___aomod@dividend:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 8 bytes @ 0x5
  1026  000006                     	ds	1
  1027  000007                     putch@txData:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x6
  1031  000007                     	ds	1
  1032  000008                     ??_StartTimer:
  1033  000008                     ??_srand:
  1034  000008                     ??_PWM8_LoadDutyValue:
  1035  000008                     ??_ADCC_GetConversionResult:
  1036  000008                     TimerDone@timer:
  1037                           	opt callstack 0
  1038  000008                     ___awdiv@divisor:
  1039                           	opt callstack 0
  1040  000008                     fputc@c:
  1041                           	opt callstack 0
  1042  000008                     strlen@a:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x7
  1046  000008                     	ds	1
  1047  000009                     ??_TMR5_Initialize:
  1048  000009                     
  1049                           ; 1 bytes @ 0x8
  1050  000009                     	ds	1
  1051  00000A                     ??___xxtofl:
  1052  00000A                     StartTimer@timer:
  1053                           	opt callstack 0
  1054  00000A                     send_lcd_cmd@cmd:
  1055                           	opt callstack 0
  1056  00000A                     send_lcd_cmd_long@cmd:
  1057                           	opt callstack 0
  1058  00000A                     ___awdiv@counter:
  1059                           	opt callstack 0
  1060  00000A                     eaDogM_WriteString@strPtr:
  1061                           	opt callstack 0
  1062  00000A                     fputc@fp:
  1063                           	opt callstack 0
  1064  00000A                     ___fladd@a:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x9
  1068  00000A                     	ds	1
  1069  00000B                     eaDogM_WriteCommand@cmd:
  1070                           	opt callstack 0
  1071  00000B                     ___awdiv@sign:
  1072                           	opt callstack 0
  1073  00000B                     WaitMs@numMilliseconds:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0xA
  1077  00000B                     	ds	1
  1078  00000C                     ??_fputc:
  1079  00000C                     eaDogM_WriteString@i:
  1080                           	opt callstack 0
  1081  00000C                     ___awdiv@quotient:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0xB
  1085  00000C                     	ds	1
  1086  00000D                     eaDogM_WriteString@bytesWritten:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 1 bytes @ 0xC
  1090  00000D                     	ds	1
  1091  00000E                     ??___fladd:
  1092  00000E                     eaDogM_WriteStringAtPos@c:
  1093                           	opt callstack 0
  1094  00000E                     ___xxtofl@sign:
  1095                           	opt callstack 0
  1096  00000E                     led_lightshow@speed:
  1097                           	opt callstack 0
  1098  00000E                     ___omul@multiplicand:
  1099                           	opt callstack 0
  1100  00000E                     ___aodiv@divisor:
  1101                           	opt callstack 0
  1102  00000E                     ___aomod@divisor:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 8 bytes @ 0xD
  1106  00000E                     	ds	1
  1107  00000F                     ___xxtofl@exp:
  1108                           	opt callstack 0
  1109  00000F                     eaDogM_WriteStringAtPos@strPtr:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0xE
  1113  00000F                     	ds	1
  1114  000010                     ??_led_lightshow:
  1115  000010                     ___xxtofl@arg:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 4 bytes @ 0xF
  1119  000010                     	ds	1
  1120  000011                     ?_stoa:
  1121                           	opt callstack 0
  1122  000011                     eaDogM_WriteStringAtPos@r:
  1123                           	opt callstack 0
  1124  000011                     stoa@fp:
  1125                           	opt callstack 0
  1126  000011                     fputs@s:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x10
  1130  000011                     	ds	1
  1131  000012                     led_lightshow@seq:
  1132                           	opt callstack 0
  1133  000012                     ___fladd@signs:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x11
  1137  000012                     	ds	1
  1138  000013                     ___fladd@aexp:
  1139                           	opt callstack 0
  1140  000013                     stoa@s:
  1141                           	opt callstack 0
  1142  000013                     fputs@fp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x12
  1146  000013                     	ds	1
  1147  000014                     ___fladd@bexp:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x13
  1151  000014                     	ds	1
  1152  000015                     ??_stoa:
  1153  000015                     ___fladd@grs:
  1154                           	opt callstack 0
  1155  000015                     fputs@c:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x14
  1159  000015                     	ds	1
  1160  000016                     ?___flmul:
  1161                           	opt callstack 0
  1162  000016                     ___aodiv@counter:
  1163                           	opt callstack 0
  1164  000016                     ___aomod@counter:
  1165                           	opt callstack 0
  1166  000016                     fputs@i:
  1167                           	opt callstack 0
  1168  000016                     ___flmul@b:
  1169                           	opt callstack 0
  1170  000016                     stoa@nuls:
  1171                           	opt callstack 0
  1172  000016                     ___omul@product:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 8 bytes @ 0x15
  1176  000016                     	ds	1
  1177  000017                     ___aodiv@sign:
  1178                           	opt callstack 0
  1179  000017                     ___aomod@sign:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x16
  1183  000017                     	ds	1
  1184  000018                     ?_abs:
  1185                           	opt callstack 0
  1186  000018                     ?_pad:
  1187                           	opt callstack 0
  1188  000018                     pad@fp:
  1189                           	opt callstack 0
  1190  000018                     abs@a:
  1191                           	opt callstack 0
  1192  000018                     ___aodiv@quotient:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 8 bytes @ 0x17
  1196  000018                     	ds	2
  1197  00001A                     ??_abs:
  1198  00001A                     pad@buf:
  1199                           	opt callstack 0
  1200  00001A                     ___flmul@a:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x19
  1204  00001A                     	ds	2
  1205  00001C                     pad@p:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x1B
  1209  00001C                     	ds	1
  1210  00001D                     stoa@i:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x1C
  1214  00001D                     	ds	1
  1215  00001E                     ??___flmul:
  1216  00001E                     ??_pad:
  1217  00001E                     ?_rand:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x1D
  1221  00001E                     	ds	1
  1222  00001F                     pad@i:
  1223                           	opt callstack 0
  1224  00001F                     stoa@w:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x1E
  1228  00001F                     	ds	1
  1229  000020                     ??_rand:
  1230                           
  1231                           ; 1 bytes @ 0x1F
  1232  000020                     	ds	1
  1233  000021                     pad@w:
  1234                           	opt callstack 0
  1235  000021                     stoa@cp:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x20
  1239  000021                     	ds	1
  1240  000022                     ___flmul@sign:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 1 bytes @ 0x21
  1244  000022                     	ds	1
  1245  000023                     ?_dtoa:
  1246                           	opt callstack 0
  1247  000023                     ___flmul@aexp:
  1248                           	opt callstack 0
  1249  000023                     dtoa@fp:
  1250                           	opt callstack 0
  1251  000023                     stoa@p:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x22
  1255  000023                     	ds	1
  1256  000024                     ___flmul@bexp:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x23
  1260  000024                     	ds	1
  1261  000025                     stoa@l:
  1262                           	opt callstack 0
  1263  000025                     ___flmul@grs:
  1264                           	opt callstack 0
  1265  000025                     dtoa@d:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 8 bytes @ 0x24
  1269  000025                     	ds	4
  1270  000029                     ___flmul@prod:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x28
  1274  000029                     	ds	4
  1275  00002D                     ??_dtoa:
  1276  00002D                     ___flmul@temp:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x2C
  1280  00002D                     	ds	2
  1281  00002F                     ?___flsub:
  1282                           	opt callstack 0
  1283  00002F                     ___flsub@b:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x2E
  1287  00002F                     	ds	4
  1288  000033                     ___flsub@a:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x32
  1292  000033                     	ds	2
  1293  000035                     _dtoa$2719:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x34
  1297  000035                     	ds	2
  1298  000037                     ?___fldiv:
  1299                           	opt callstack 0
  1300  000037                     dtoa@p:
  1301                           	opt callstack 0
  1302  000037                     ___fldiv@b:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x36
  1306  000037                     	ds	2
  1307  000039                     dtoa@w:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x38
  1311  000039                     	ds	2
  1312  00003B                     dtoa@s:
  1313                           	opt callstack 0
  1314  00003B                     ___fldiv@a:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x3A
  1318  00003B                     	ds	2
  1319  00003D                     dtoa@n:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x3C
  1323  00003D                     	ds	2
  1324  00003F                     ??___fldiv:
  1325                           
  1326                           ; 1 bytes @ 0x3E
  1327  00003F                     	ds	4
  1328  000043                     ___fldiv@rem:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x42
  1332  000043                     	ds	2
  1333  000045                     dtoa@i:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x44
  1337  000045                     	ds	2
  1338  000047                     ?_vfpfcnvrt:
  1339                           	opt callstack 0
  1340  000047                     ___fldiv@sign:
  1341                           	opt callstack 0
  1342  000047                     vfpfcnvrt@fp:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x46
  1346  000047                     	ds	1
  1347  000048                     ___fldiv@new_exp:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x47
  1351  000048                     	ds	1
  1352  000049                     vfpfcnvrt@fmt:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x48
  1356  000049                     	ds	1
  1357  00004A                     vfpfcnvrt@ap:
  1358                           	opt callstack 0
  1359  00004A                     ___fldiv@grs:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x49
  1363  00004A                     	ds	1
  1364  00004B                     vfpfcnvrt@ll:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 8 bytes @ 0x4A
  1368  00004B                     	ds	3
  1369  00004E                     ___fldiv@bexp:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 1 bytes @ 0x4D
  1373  00004E                     	ds	1
  1374  00004F                     ___fldiv@aexp:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x4E
  1378  00004F                     	ds	1
  1379  000050                     ??_lp_filter:
  1380                           
  1381                           ; 1 bytes @ 0x4F
  1382  000050                     	ds	2
  1383  000052                     ??___fltol:
  1384                           
  1385                           ; 1 bytes @ 0x51
  1386  000052                     	ds	1
  1387  000053                     vfpfcnvrt@cp:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x52
  1391  000053                     	ds	2
  1392  000055                     vfprintf@cfmt:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 1 bytes @ 0x54
  1396  000055                     	ds	1
  1397  000056                     
  1398                           ; 1 bytes @ 0x55
  1399 ;;
  1400 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1401 ;;
  1402 ;; *************** function _main *****************
  1403 ;; Defined at:
  1404 ;;		line 102 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  buffer         24   36[BANK0 ] unsigned char [24]
  1409 ;;  y               1   61[BANK0 ] unsigned char 
  1410 ;;  x               1    0        unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 3F/1
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1421 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1423 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1424 ;;Total ram usage:       28 bytes
  1425 ;; Hardware stack levels required when called:   14
  1426 ;; This function calls:
  1427 ;;		_Digital232_RW
  1428 ;;		_Digital232_init
  1429 ;;		_SYSTEM_Initialize
  1430 ;;		_StartTimer
  1431 ;;		_TimerDone
  1432 ;;		___awdiv
  1433 ;;		___fldiv
  1434 ;;		___xxtofl
  1435 ;;		_eaDogM_WriteCommand
  1436 ;;		_eaDogM_WriteStringAtPos
  1437 ;;		_init_display
  1438 ;;		_led_lightshow
  1439 ;;		_once
  1440 ;;		_rand
  1441 ;;		_sprintf
  1442 ;;		_srand
  1443 ;;		_work_sw
  1444 ;; This function is called by:
  1445 ;;		Startup code after reset
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text0
  1450  002050                     __ptext0:
  1451                           	opt callstack 0
  1452  002050                     _main:
  1453                           	opt callstack 17
  1454                           
  1455                           ;incstack = 0
  1456  002050  0E00               	movlw	0
  1457  002052  0100               	movlb	0	; () banked
  1458  002054  6F9D               	movwf	main@y& (0+255),b
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 105:  char buffer[24];;main.c: 107:  SYSTEM_Initialize();
  1462  002056  ECCB  F027         	call	_SYSTEM_Initialize	;wreg free
  1463                           
  1464                           ; BSR set to: 61
  1465                           ;main.c: 114:  (INTCON0bits.GIEH = 1);
  1466  00205A  8ED2               	bsf	210,7,c	;volatile
  1467                           
  1468                           ; BSR set to: 61
  1469                           ;main.c: 117:  (INTCON0bits.GIEL = 1);
  1470  00205C  8CD2               	bsf	210,6,c	;volatile
  1471                           
  1472                           ; BSR set to: 61
  1473                           ;main.c: 125:  IO.input_ok = 0;
  1474  00205E  0E00               	movlw	0
  1475  002060  0101               	movlb	1	; () banked
  1476  002062  6FB3               	movwf	(_IO+10)& (0+255),b
  1477                           
  1478                           ; BSR set to: 1
  1479                           ;main.c: 126:  IO.output_ok = 0;
  1480  002064  0E00               	movlw	0
  1481  002066  6FB4               	movwf	(_IO+11)& (0+255),b
  1482                           
  1483                           ; BSR set to: 1
  1484                           ;main.c: 127:  IO.d232 = D232_IDLE;
  1485  002068  0E00               	movlw	0
  1486  00206A  6FB6               	movwf	(_IO+13)& (0+255),b
  1487                           
  1488                           ; BSR set to: 1
  1489                           ;main.c: 128:  IO.io = IO_IDLE;
  1490  00206C  0E00               	movlw	0
  1491  00206E  6FB5               	movwf	(_IO+12)& (0+255),b
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;main.c: 130:  init_display();
  1495  002070  EC13  F025         	call	_init_display	;wreg free
  1496                           
  1497                           ; BSR set to: 1
  1498                           ;main.c: 131:  eaDogM_WriteCommand(0b00001100);
  1499  002074  0E0C               	movlw	12
  1500  002076  EC65  F02A         	call	_eaDogM_WriteCommand
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;main.c: 132:  srand(99);
  1504  00207A  0E00               	movlw	0
  1505  00207C  6E07               	movwf	(srand@s+1)^0,c
  1506  00207E  0E63               	movlw	99
  1507  002080  6E06               	movwf	srand@s^0,c
  1508  002082  ECB0  F027         	call	_srand	;wreg free
  1509                           
  1510                           ; BSR set to: 1
  1511                           ;main.c: 134:  StartTimer(TMR_INIT, 1000);
  1512  002086  0E03               	movlw	3
  1513  002088  6E07               	movwf	(StartTimer@count+1)^0,c
  1514  00208A  0EE8               	movlw	232
  1515  00208C  6E06               	movwf	StartTimer@count^0,c
  1516  00208E  0E01               	movlw	1
  1517  002090  EC01  F028         	call	_StartTimer
  1518                           
  1519                           ;main.c: 135:  Digital232_init();
  1520  002094  ECCA  F020         	call	_Digital232_init	;wreg free
  1521                           
  1522                           ;main.c: 136:  sprintf(buffer, "SW %s Play!", "1.07");
  1523  002098  0E84               	movlw	low main@buffer
  1524  00209A  0100               	movlb	0	; () banked
  1525  00209C  6F64               	movwf	sprintf@s& (0+255),b
  1526  00209E  6B65               	clrf	(sprintf@s+1)& (0+255),b
  1527  0020A0  0E23               	movlw	low STR_3
  1528  0020A2  6F66               	movwf	sprintf@fmt& (0+255),b
  1529  0020A4  0E2F               	movlw	low STR_4
  1530  0020A6  6F67               	movwf	(?_sprintf+3)& (0+255),b
  1531  0020A8  5167               	movf	(?_sprintf+3)& (0+255),w,b
  1532  0020AA  A4D8               	btfss	status,2,c
  1533  0020AC  0E20               	movlw	high __smallconst
  1534  0020AE  6F68               	movwf	(?_sprintf+4)& (0+255),b
  1535  0020B0  EC53  F026         	call	_sprintf	;wreg free
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 137:  eaDogM_WriteStringAtPos(0, 0, buffer);
  1539  0020B4  0E00               	movlw	0
  1540  0020B6  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1541  0020B8  0E84               	movlw	low main@buffer
  1542  0020BA  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1543  0020BC  6A10               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1544  0020BE  0E00               	movlw	0
  1545  0020C0  EC44  F029         	call	_eaDogM_WriteStringAtPos
  1546                           
  1547                           ;main.c: 139:  otto_b1.range = otto_b1.span - otto_b1.offset;
  1548  0020C4  0101               	movlb	1	; () banked
  1549  0020C6  51D2               	movf	_otto_b1& (0+255),w,b
  1550  0020C8  5DD4               	subwf	(_otto_b1+2)& (0+255),w,b
  1551  0020CA  6FD6               	movwf	(_otto_b1+4)& (0+255),b
  1552  0020CC  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  1553  0020CE  59D5               	subwfb	(_otto_b1+3)& (0+255),w,b
  1554  0020D0  6FD7               	movwf	(_otto_b1+5)& (0+255),b
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;main.c: 140:  otto_b1.scalar = 255.0 / (float) otto_b1.range;
  1558  0020D2  0E00               	movlw	0
  1559  0020D4  6E37               	movwf	___fldiv@b^0,c
  1560  0020D6  0E00               	movlw	0
  1561  0020D8  6E38               	movwf	(___fldiv@b+1)^0,c
  1562  0020DA  0E7F               	movlw	127
  1563  0020DC  6E39               	movwf	(___fldiv@b+2)^0,c
  1564  0020DE  0E43               	movlw	67
  1565  0020E0  6E3A               	movwf	(___fldiv@b+3)^0,c
  1566  0020E2  EE20  F1D6         	lfsr	2,_otto_b1+4
  1567  0020E6  006F FF78  F006    	movff	postinc2,___xxtofl@val
  1568  0020EC  006F FF74  F007    	movff	postdec2,___xxtofl@val+1
  1569  0020F2  0E00               	movlw	0
  1570  0020F4  BE07               	btfsc	(___xxtofl@val+1)^0,7,c
  1571  0020F6  0EFF               	movlw	-1
  1572  0020F8  6E08               	movwf	(___xxtofl@val+2)^0,c
  1573  0020FA  6E09               	movwf	(___xxtofl@val+3)^0,c
  1574  0020FC  0E01               	movlw	1
  1575  0020FE  ECB1  F01D         	call	___xxtofl
  1576  002102  0060  F018  F03B   	movff	?___xxtofl,___fldiv@a
  1577  002108  0060  F01C  F03C   	movff	?___xxtofl+1,___fldiv@a+1
  1578  00210E  0060  F020  F03D   	movff	?___xxtofl+2,___fldiv@a+2
  1579  002114  0060  F024  F03E   	movff	?___xxtofl+3,___fldiv@a+3
  1580  00211A  EC82  F019         	call	___fldiv	;wreg free
  1581  00211E  0060  F0DC  F1D8   	movff	?___fldiv,_otto_b1+6
  1582  002124  0060  F0E0  F1D9   	movff	?___fldiv+1,_otto_b1+7
  1583  00212A  0060  F0E4  F1DA   	movff	?___fldiv+2,_otto_b1+8
  1584  002130  0060  F0E8  F1DB   	movff	?___fldiv+3,_otto_b1+9
  1585                           
  1586                           ;main.c: 141:  otto_b1.zero = (int16_t) (255.0 / 0.50);
  1587  002136  0E01               	movlw	1
  1588  002138  0101               	movlb	1	; () banked
  1589  00213A  6FDD               	movwf	(_otto_b1+11)& (0+255),b
  1590  00213C  0EFE               	movlw	254
  1591  00213E  6FDC               	movwf	(_otto_b1+10)& (0+255),b
  1592  002140                     l7764:
  1593                           
  1594                           ;main.c: 145:   work_sw();
  1595  002140  EC47  F024         	call	_work_sw	;wreg free
  1596                           
  1597                           ;main.c: 146:   if (Digital232_RW() && switches->detonator)
  1598  002144  ECD8  F01A         	call	_Digital232_RW	;wreg free
  1599  002148  0900               	iorlw	0
  1600  00214A  A4D8               	btfss	status,2,c
  1601                           
  1602                           ; BSR set to: 1
  1603  00214C  A3A9               	btfss	_IO& (0+255),1,b
  1604  00214E  D007               	goto	l7772
  1605                           
  1606                           ; BSR set to: 1
  1607                           ;main.c: 147:    led_lightshow(IO.seq_value, 1);
  1608  002150  0E00               	movlw	0
  1609  002152  6E0F               	movwf	(led_lightshow@speed+1)^0,c
  1610  002154  0E01               	movlw	1
  1611  002156  6E0E               	movwf	led_lightshow@speed^0,c
  1612  002158  51BA               	movf	(_IO+17)& (0+255),w,b
  1613  00215A  EC7A  F015         	call	_led_lightshow
  1614  00215E                     l7772:
  1615                           
  1616                           ;main.c: 149:   if (!switches->detonator) {
  1617  00215E  0101               	movlb	1	; () banked
  1618  002160  B3A9               	btfsc	_IO& (0+255),1,b
  1619  002162  D0C4               	goto	l7828
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 150:    IO.outbytes[1] = IO.outbytes[1] | 0x01;
  1623  002164  51AF               	movf	(_IO+6)& (0+255),w,b
  1624  002166  0901               	iorlw	1
  1625  002168  6FAF               	movwf	(_IO+6)& (0+255),b
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;main.c: 151:    if (IO.outbytes[2]&0b00000001) {
  1629  00216A  A1B0               	btfss	(_IO+7)& (0+255),0,b
  1630  00216C  D040               	goto	l7794
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 152:     if (TimerDone(TMR_EXTRA)) {
  1634  00216E  0E04               	movlw	4
  1635  002170  ECB4  F028         	call	_TimerDone
  1636  002174  0900               	iorlw	0
  1637  002176  B4D8               	btfsc	status,2,c
  1638  002178  D03A               	goto	l7794
  1639                           
  1640                           ;main.c: 153:      IO.outbytes[1] = IO.outbytes[1] | 0x04;
  1641  00217A  0101               	movlb	1	; () banked
  1642  00217C  51AF               	movf	(_IO+6)& (0+255),w,b
  1643  00217E  0904               	iorlw	4
  1644  002180  6FAF               	movwf	(_IO+6)& (0+255),b
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 154:      if (once(&IO.f1))
  1648  002182  0ECD               	movlw	low (_IO+36)
  1649  002184  6E06               	movwf	once@once_flag^0,c
  1650  002186  0E01               	movlw	high (_IO+36)
  1651  002188  6E07               	movwf	(once@once_flag+1)^0,c
  1652  00218A  EC79  F028         	call	_once	;wreg free
  1653  00218E  0900               	iorlw	0
  1654  002190  B4D8               	btfsc	status,2,c
  1655  002192  D002               	goto	l7786
  1656                           
  1657                           ;main.c: 155:       IO.hits++;
  1658  002194  0101               	movlb	1	; () banked
  1659  002196  2BBB               	incf	(_IO+18)& (0+255),f,b
  1660  002198                     l7786:
  1661                           
  1662                           ;main.c: 156:      if (IO.speed_update && IO.speed-- < 2) {
  1663  002198  0101               	movlb	1	; () banked
  1664  00219A  51CA               	movf	(_IO+33)& (0+255),w,b
  1665  00219C  B4D8               	btfsc	status,2,c
  1666  00219E  D024               	goto	l1078
  1667                           
  1668                           ; BSR set to: 1
  1669  0021A0  51C4               	movf	(_IO+27)& (0+255),w,b
  1670  0021A2  0100               	movlb	0	; () banked
  1671  0021A4  6F82               	movwf	??_main& (0+255),b
  1672  0021A6  0101               	movlb	1	; () banked
  1673  0021A8  51C5               	movf	(_IO+28)& (0+255),w,b
  1674  0021AA  0100               	movlb	0	; () banked
  1675  0021AC  6F83               	movwf	(??_main+1)& (0+255),b
  1676  0021AE  0E01               	movlw	1
  1677  0021B0  0101               	movlb	1	; () banked
  1678  0021B2  5FC4               	subwf	(_IO+27)& (0+255),f,b
  1679  0021B4  0E00               	movlw	0
  1680  0021B6  5BC5               	subwfb	(_IO+28)& (0+255),f,b
  1681  0021B8  0100               	movlb	0	; () banked
  1682  0021BA  5183               	movf	(??_main+1)& (0+255),w,b
  1683  0021BC  E115               	bnz	l1078
  1684  0021BE  0E02               	movlw	2
  1685  0021C0  5D82               	subwf	??_main& (0+255),w,b
  1686  0021C2  B0D8               	btfsc	status,0,c
  1687  0021C4  D011               	goto	l1078
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 157:       IO.speed = 10;
  1691  0021C6  0E00               	movlw	0
  1692  0021C8  0101               	movlb	1	; () banked
  1693  0021CA  6FC5               	movwf	(_IO+28)& (0+255),b
  1694  0021CC  0E0A               	movlw	10
  1695  0021CE  6FC4               	movwf	(_IO+27)& (0+255),b
  1696                           
  1697                           ;main.c: 158:       IO.sequence_done = 1;
  1698  0021D0  0E01               	movlw	1
  1699  0021D2  6FCB               	movwf	(_IO+34)& (0+255),b
  1700                           
  1701                           ;main.c: 159:       IO.seq_value = 2;
  1702  0021D4  0E02               	movlw	2
  1703  0021D6  6FBA               	movwf	(_IO+17)& (0+255),b
  1704                           
  1705                           ;main.c: 160:       IO.slower = 0;
  1706  0021D8  0E00               	movlw	0
  1707  0021DA  6FC7               	movwf	(_IO+30)& (0+255),b
  1708  0021DC  0E00               	movlw	0
  1709  0021DE  6FC6               	movwf	(_IO+29)& (0+255),b
  1710                           
  1711                           ; BSR set to: 1
  1712                           ;main.c: 161:       IO.stats = IO.score;
  1713  0021E0  C1BD  F1BE         	movff	_IO+20,_IO+21
  1714                           
  1715                           ;main.c: 162:       IO.win = 1;
  1716  0021E4  0E01               	movlw	1
  1717  0021E6  6FCC               	movwf	(_IO+35)& (0+255),b
  1718  0021E8                     l1078:
  1719                           
  1720                           ;main.c: 164:      IO.speed_update = 0;
  1721  0021E8  0E00               	movlw	0
  1722  0021EA  0101               	movlb	1	; () banked
  1723  0021EC  6FCA               	movwf	(_IO+33)& (0+255),b
  1724  0021EE                     l7794:
  1725                           
  1726                           ;main.c: 168:    if (IO.outbytes[2]&0b10000000) {
  1727  0021EE  0101               	movlb	1	; () banked
  1728  0021F0  AFB0               	btfss	(_IO+7)& (0+255),7,b
  1729  0021F2  D040               	goto	l7812
  1730                           
  1731                           ; BSR set to: 1
  1732                           ;main.c: 169:     if (TimerDone(TMR_EXTRA)) {
  1733  0021F4  0E04               	movlw	4
  1734  0021F6  ECB4  F028         	call	_TimerDone
  1735  0021FA  0900               	iorlw	0
  1736  0021FC  B4D8               	btfsc	status,2,c
  1737  0021FE  D03A               	goto	l7812
  1738                           
  1739                           ;main.c: 170:      IO.outbytes[1] = IO.outbytes[1] | 0x02;
  1740  002200  0101               	movlb	1	; () banked
  1741  002202  51AF               	movf	(_IO+6)& (0+255),w,b
  1742  002204  0902               	iorlw	2
  1743  002206  6FAF               	movwf	(_IO+6)& (0+255),b
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 171:      if (once(&IO.f2))
  1747  002208  0ECE               	movlw	low (_IO+37)
  1748  00220A  6E06               	movwf	once@once_flag^0,c
  1749  00220C  0E01               	movlw	high (_IO+37)
  1750  00220E  6E07               	movwf	(once@once_flag+1)^0,c
  1751  002210  EC79  F028         	call	_once	;wreg free
  1752  002214  0900               	iorlw	0
  1753  002216  B4D8               	btfsc	status,2,c
  1754  002218  D002               	goto	l7804
  1755                           
  1756                           ;main.c: 172:       IO.hits++;
  1757  00221A  0101               	movlb	1	; () banked
  1758  00221C  2BBB               	incf	(_IO+18)& (0+255),f,b
  1759  00221E                     l7804:
  1760                           
  1761                           ;main.c: 173:      if (IO.speed_update && IO.speed-- < 2) {
  1762  00221E  0101               	movlb	1	; () banked
  1763  002220  51CA               	movf	(_IO+33)& (0+255),w,b
  1764  002222  B4D8               	btfsc	status,2,c
  1765  002224  D024               	goto	l1082
  1766                           
  1767                           ; BSR set to: 1
  1768  002226  51C4               	movf	(_IO+27)& (0+255),w,b
  1769  002228  0100               	movlb	0	; () banked
  1770  00222A  6F82               	movwf	??_main& (0+255),b
  1771  00222C  0101               	movlb	1	; () banked
  1772  00222E  51C5               	movf	(_IO+28)& (0+255),w,b
  1773  002230  0100               	movlb	0	; () banked
  1774  002232  6F83               	movwf	(??_main+1)& (0+255),b
  1775  002234  0E01               	movlw	1
  1776  002236  0101               	movlb	1	; () banked
  1777  002238  5FC4               	subwf	(_IO+27)& (0+255),f,b
  1778  00223A  0E00               	movlw	0
  1779  00223C  5BC5               	subwfb	(_IO+28)& (0+255),f,b
  1780  00223E  0100               	movlb	0	; () banked
  1781  002240  5183               	movf	(??_main+1)& (0+255),w,b
  1782  002242  E115               	bnz	l1082
  1783  002244  0E02               	movlw	2
  1784  002246  5D82               	subwf	??_main& (0+255),w,b
  1785  002248  B0D8               	btfsc	status,0,c
  1786  00224A  D011               	goto	l1082
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 174:       IO.speed = 10;
  1790  00224C  0E00               	movlw	0
  1791  00224E  0101               	movlb	1	; () banked
  1792  002250  6FC5               	movwf	(_IO+28)& (0+255),b
  1793  002252  0E0A               	movlw	10
  1794  002254  6FC4               	movwf	(_IO+27)& (0+255),b
  1795                           
  1796                           ;main.c: 175:       IO.sequence_done = 1;
  1797  002256  0E01               	movlw	1
  1798  002258  6FCB               	movwf	(_IO+34)& (0+255),b
  1799                           
  1800                           ;main.c: 176:       IO.seq_value = 2;
  1801  00225A  0E02               	movlw	2
  1802  00225C  6FBA               	movwf	(_IO+17)& (0+255),b
  1803                           
  1804                           ;main.c: 177:       IO.slower = 0;
  1805  00225E  0E00               	movlw	0
  1806  002260  6FC7               	movwf	(_IO+30)& (0+255),b
  1807  002262  0E00               	movlw	0
  1808  002264  6FC6               	movwf	(_IO+29)& (0+255),b
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;main.c: 178:       IO.stats = IO.score;
  1812  002266  C1BD  F1BE         	movff	_IO+20,_IO+21
  1813                           
  1814                           ;main.c: 179:       IO.win = 1;
  1815  00226A  0E01               	movlw	1
  1816  00226C  6FCC               	movwf	(_IO+35)& (0+255),b
  1817  00226E                     l1082:
  1818                           
  1819                           ;main.c: 181:      IO.speed_update = 0;
  1820  00226E  0E00               	movlw	0
  1821  002270  0101               	movlb	1	; () banked
  1822  002272  6FCA               	movwf	(_IO+33)& (0+255),b
  1823  002274                     l7812:
  1824                           
  1825                           ;main.c: 185:    if (IO.outbytes[2]&0b01111110) {
  1826  002274  0060  F6C0  F082   	movff	_IO+7,??_main
  1827  00227A  0E7E               	movlw	126
  1828  00227C  0100               	movlb	0	; () banked
  1829  00227E  1782               	andwf	??_main& (0+255),f,b
  1830  002280  B4D8               	btfsc	status,2,c
  1831  002282  D75E               	goto	l7764
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;main.c: 186:     if (TimerDone(TMR_EXTRA_MISS)) {
  1835  002284  0E05               	movlw	5
  1836  002286  ECB4  F028         	call	_TimerDone
  1837  00228A  0900               	iorlw	0
  1838  00228C  B4D8               	btfsc	status,2,c
  1839  00228E  D758               	goto	l7764
  1840                           
  1841                           ;main.c: 187:      if (once(&IO.f3)) {
  1842  002290  0ECF               	movlw	low (_IO+38)
  1843  002292  6E06               	movwf	once@once_flag^0,c
  1844  002294  0E01               	movlw	high (_IO+38)
  1845  002296  6E07               	movwf	(once@once_flag+1)^0,c
  1846  002298  EC79  F028         	call	_once	;wreg free
  1847  00229C  0900               	iorlw	0
  1848  00229E  B4D8               	btfsc	status,2,c
  1849  0022A0  D74F               	goto	l7764
  1850                           
  1851                           ;main.c: 188:       IO.misses++;
  1852  0022A2  0101               	movlb	1	; () banked
  1853  0022A4  2BBC               	incf	(_IO+19)& (0+255),f,b
  1854                           
  1855                           ; BSR set to: 1
  1856                           ;main.c: 189:       if (IO.speed_update && (IO.misses++ > 26)) {
  1857  0022A6  51CA               	movf	(_IO+33)& (0+255),w,b
  1858  0022A8  B4D8               	btfsc	status,2,c
  1859  0022AA  D74A               	goto	l7764
  1860                           
  1861                           ; BSR set to: 1
  1862  0022AC  EE20  F1BC         	lfsr	2,_IO+19
  1863  0022B0  006F FF7C  F082    	movff	indf2,??_main
  1864  0022B6  0E01               	movlw	1
  1865  0022B8  26DF               	addwf	indf2,f,c
  1866  0022BA  0E1A               	movlw	26
  1867  0022BC  0100               	movlb	0	; () banked
  1868  0022BE  6582               	cpfsgt	??_main& (0+255),b
  1869  0022C0  D73F               	goto	l7764
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 190:        if (IO.score-- < 10)
  1873  0022C2  EE20  F1BD         	lfsr	2,_IO+20
  1874  0022C6  006F FF7C  F082    	movff	indf2,??_main
  1875  0022CC  0E01               	movlw	1
  1876  0022CE  5EDF               	subwf	indf2,f,c
  1877  0022D0  0E0A               	movlw	10
  1878  0022D2  6182               	cpfslt	??_main& (0+255),b
  1879  0022D4  D003               	goto	l1087
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 191:         IO.score = 10;
  1883  0022D6  0E0A               	movlw	10
  1884  0022D8  0101               	movlb	1	; () banked
  1885  0022DA  6FBD               	movwf	(_IO+20)& (0+255),b
  1886  0022DC                     l1087:
  1887                           
  1888                           ;main.c: 192:        IO.slower = 10;
  1889  0022DC  0E00               	movlw	0
  1890  0022DE  0101               	movlb	1	; () banked
  1891  0022E0  6FC7               	movwf	(_IO+30)& (0+255),b
  1892  0022E2  0E0A               	movlw	10
  1893  0022E4  6FC6               	movwf	(_IO+29)& (0+255),b
  1894                           
  1895                           ;main.c: 193:        IO.speed_update = 0;
  1896  0022E6  0E00               	movlw	0
  1897  0022E8  6FCA               	movwf	(_IO+33)& (0+255),b
  1898                           
  1899                           ;main.c: 198:   } else {
  1900                           
  1901                           ;main.c: 197:    }
  1902  0022EA  D72A               	goto	l7764
  1903  0022EC                     l7828:
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;main.c: 199:    StartTimer(TMR_EXTRA, 500);
  1907  0022EC  0E01               	movlw	1
  1908  0022EE  6E07               	movwf	(StartTimer@count+1)^0,c
  1909  0022F0  0EF4               	movlw	244
  1910  0022F2  6E06               	movwf	StartTimer@count^0,c
  1911  0022F4  0E04               	movlw	4
  1912  0022F6  EC01  F028         	call	_StartTimer
  1913                           
  1914                           ;main.c: 200:    StartTimer(TMR_EXTRA_MISS, 25);
  1915  0022FA  0E00               	movlw	0
  1916  0022FC  6E07               	movwf	(StartTimer@count+1)^0,c
  1917  0022FE  0E19               	movlw	25
  1918  002300  6E06               	movwf	StartTimer@count^0,c
  1919  002302  0E05               	movlw	5
  1920  002304  EC01  F028         	call	_StartTimer
  1921                           
  1922                           ;main.c: 201:    if (IO.seq_value == 0) {
  1923  002308  0101               	movlb	1	; () banked
  1924  00230A  51BA               	movf	(_IO+17)& (0+255),w,b
  1925  00230C  A4D8               	btfss	status,2,c
  1926  00230E  D009               	goto	l1089
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;main.c: 202:     IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1930  002310  51AF               	movf	(_IO+6)& (0+255),w,b
  1931  002312  0BFE               	andlw	254
  1932  002314  6FAF               	movwf	(_IO+6)& (0+255),b
  1933                           
  1934                           ;main.c: 203:     IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1935  002316  51AF               	movf	(_IO+6)& (0+255),w,b
  1936  002318  0BFB               	andlw	251
  1937  00231A  6FAF               	movwf	(_IO+6)& (0+255),b
  1938                           
  1939                           ;main.c: 204:     IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1940  00231C  51AF               	movf	(_IO+6)& (0+255),w,b
  1941  00231E  0BFD               	andlw	253
  1942  002320  6FAF               	movwf	(_IO+6)& (0+255),b
  1943  002322                     l1089:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;main.c: 207:    if (IO.seq_value == 3 && TimerDone(TMR_BAL)) {
  1947  002322  0E03               	movlw	3
  1948  002324  19BA               	xorwf	(_IO+17)& (0+255),w,b
  1949  002326  A4D8               	btfss	status,2,c
  1950  002328  D037               	goto	l7848
  1951                           
  1952                           ; BSR set to: 1
  1953  00232A  0E07               	movlw	7
  1954  00232C  ECB4  F028         	call	_TimerDone
  1955  002330  0900               	iorlw	0
  1956  002332  B4D8               	btfsc	status,2,c
  1957  002334  D031               	goto	l7848
  1958                           
  1959                           ;main.c: 208:     IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1960  002336  0101               	movlb	1	; () banked
  1961  002338  51AF               	movf	(_IO+6)& (0+255),w,b
  1962  00233A  0BFE               	andlw	254
  1963  00233C  6FAF               	movwf	(_IO+6)& (0+255),b
  1964                           
  1965                           ;main.c: 209:     IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1966  00233E  51AF               	movf	(_IO+6)& (0+255),w,b
  1967  002340  0BFB               	andlw	251
  1968  002342  6FAF               	movwf	(_IO+6)& (0+255),b
  1969                           
  1970                           ;main.c: 210:     IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1971  002344  51AF               	movf	(_IO+6)& (0+255),w,b
  1972  002346  0BFD               	andlw	253
  1973  002348  6FAF               	movwf	(_IO+6)& (0+255),b
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 214:     srand(IO.clock);
  1977  00234A  0060  F720  F006   	movff	_IO+31,srand@s
  1978  002350  0060  F724  F007   	movff	_IO+32,srand@s+1
  1979  002356  ECB0  F027         	call	_srand	;wreg free
  1980                           
  1981                           ; BSR set to: 1
  1982                           ;main.c: 215:     if (IO.rnd_count++ > 64) {
  1983  00235A  EE20  F1BF         	lfsr	2,_IO+22
  1984  00235E  006F FF7C  F082    	movff	indf2,??_main
  1985  002364  0E01               	movlw	1
  1986  002366  26DF               	addwf	indf2,f,c
  1987  002368  0E40               	movlw	64
  1988  00236A  0100               	movlb	0	; () banked
  1989  00236C  6582               	cpfsgt	??_main& (0+255),b
  1990  00236E  D014               	goto	l7848
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;main.c: 216:      IO.rnd = rand();
  1994  002370  EC43  F020         	call	_rand	;wreg free
  1995  002374  501E               	movf	?_rand^0,w,c
  1996  002376  6FD1               	movwf	(_IO+40)& (0+255),b
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main.c: 217:      IO.rnd = IO.rnd / 4;
  2000  002378  51D1               	movf	(_IO+40)& (0+255),w,b
  2001  00237A  6E06               	movwf	___awdiv@dividend^0,c
  2002  00237C  6A07               	clrf	(___awdiv@dividend+1)^0,c
  2003  00237E  BE06               	btfsc	___awdiv@dividend^0,7,c
  2004  002380  0607               	decf	(___awdiv@dividend+1)^0,f,c
  2005  002382  0E00               	movlw	0
  2006  002384  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2007  002386  0E04               	movlw	4
  2008  002388  6E08               	movwf	___awdiv@divisor^0,c
  2009  00238A  EC90  F024         	call	___awdiv	;wreg free
  2010  00238E  5006               	movf	?___awdiv^0,w,c
  2011  002390  0101               	movlb	1	; () banked
  2012  002392  6FD1               	movwf	(_IO+40)& (0+255),b
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;main.c: 218:      IO.rnd_count = 0;
  2016  002394  0E00               	movlw	0
  2017  002396  6FBF               	movwf	(_IO+22)& (0+255),b
  2018  002398                     l7848:
  2019                           
  2020                           ;main.c: 221:    IO.speed_update = 1;
  2021  002398  0E01               	movlw	1
  2022  00239A  0101               	movlb	1	; () banked
  2023  00239C  6FCA               	movwf	(_IO+33)& (0+255),b
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;main.c: 222:    IO.f1 = 1;
  2027  00239E  0E01               	movlw	1
  2028  0023A0  6FCD               	movwf	(_IO+36)& (0+255),b
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main.c: 223:    IO.f2 = 1;
  2032  0023A2  0E01               	movlw	1
  2033  0023A4  6FCE               	movwf	(_IO+37)& (0+255),b
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;main.c: 224:    IO.f3 = 1;
  2037  0023A6  0E01               	movlw	1
  2038  0023A8  6FCF               	movwf	(_IO+38)& (0+255),b
  2039                           
  2040                           ; BSR set to: 1
  2041                           ;main.c: 225:    if (TimerDone(TMR_SEQ)) {
  2042  0023AA  0E06               	movlw	6
  2043  0023AC  ECB4  F028         	call	_TimerDone
  2044  0023B0  0900               	iorlw	0
  2045  0023B2  B4D8               	btfsc	status,2,c
  2046  0023B4  D6C5               	goto	l7764
  2047                           
  2048                           ;main.c: 226:     if ((otto_b1.result > 0) && (IO.seq_value == 0))
  2049  0023B6  0101               	movlb	1	; () banked
  2050  0023B8  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2051  0023BA  D016               	goto	l1093
  2052  0023BC  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2053  0023BE  E103               	bnz	u8580
  2054  0023C0  05DE               	decf	(_otto_b1+12)& (0+255),w,b
  2055  0023C2  A0D8               	btfss	status,0,c
  2056  0023C4  D011               	goto	l1093
  2057  0023C6                     u8580:
  2058                           
  2059                           ; BSR set to: 1
  2060  0023C6  51BA               	movf	(_IO+17)& (0+255),w,b
  2061  0023C8  A4D8               	btfss	status,2,c
  2062  0023CA  D00E               	goto	l1093
  2063                           
  2064                           ; BSR set to: 1
  2065                           ;main.c: 227:     {;main.c: 228:      IO.seq_current = 3;
  2066  0023CC  0E00               	movlw	0
  2067  0023CE  6FC3               	movwf	(_IO+26)& (0+255),b
  2068  0023D0  0E03               	movlw	3
  2069  0023D2  6FC2               	movwf	(_IO+25)& (0+255),b
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;main.c: 229:      StartTimer(TMR_CHANGE, 30000);
  2073  0023D4  0E75               	movlw	117
  2074  0023D6  6E07               	movwf	(StartTimer@count+1)^0,c
  2075  0023D8  0E30               	movlw	48
  2076  0023DA  6E06               	movwf	StartTimer@count^0,c
  2077  0023DC  0E08               	movlw	8
  2078  0023DE  EC01  F028         	call	_StartTimer
  2079                           
  2080                           ;main.c: 230:      IO.win = 1;
  2081  0023E2  0E01               	movlw	1
  2082  0023E4  0101               	movlb	1	; () banked
  2083  0023E6  6FCC               	movwf	(_IO+35)& (0+255),b
  2084  0023E8                     l1093:
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;main.c: 232:     if (TimerDone(TMR_CHANGE) && IO.seq_value == 3)
  2088  0023E8  0E08               	movlw	8
  2089  0023EA  ECB4  F028         	call	_TimerDone
  2090  0023EE  0900               	iorlw	0
  2091  0023F0  B4D8               	btfsc	status,2,c
  2092  0023F2  D00B               	goto	l7872
  2093  0023F4  0E03               	movlw	3
  2094  0023F6  0101               	movlb	1	; () banked
  2095  0023F8  19BA               	xorwf	(_IO+17)& (0+255),w,b
  2096  0023FA  A4D8               	btfss	status,2,c
  2097  0023FC  D006               	goto	l7872
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;main.c: 233:     {;main.c: 234:      IO.seq_current = 0;
  2101  0023FE  0E00               	movlw	0
  2102  002400  6FC3               	movwf	(_IO+26)& (0+255),b
  2103  002402  0E00               	movlw	0
  2104  002404  6FC2               	movwf	(_IO+25)& (0+255),b
  2105                           
  2106                           ;main.c: 235:      IO.win = 1;
  2107  002406  0E01               	movlw	1
  2108  002408  6FCC               	movwf	(_IO+35)& (0+255),b
  2109  00240A                     l7872:
  2110                           
  2111                           ;main.c: 238:     IO.seq_value = IO.seq_current;
  2112  00240A  C1C2  F1BA         	movff	_IO+25,_IO+17
  2113                           
  2114                           ;main.c: 239:     if (IO.win) {
  2115  00240E  0101               	movlb	1	; () banked
  2116  002410  51CC               	movf	(_IO+35)& (0+255),w,b
  2117  002412  B4D8               	btfsc	status,2,c
  2118  002414  D695               	goto	l7764
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;main.c: 240:      IO.win = 0;
  2122  002416  0E00               	movlw	0
  2123  002418  6FCC               	movwf	(_IO+35)& (0+255),b
  2124                           
  2125                           ;main.c: 241:      IO.hits = 0;
  2126  00241A  0E00               	movlw	0
  2127  00241C  6FBB               	movwf	(_IO+18)& (0+255),b
  2128                           
  2129                           ;main.c: 242:      IO.misses = 0;
  2130  00241E  0E00               	movlw	0
  2131  002420  6FBC               	movwf	(_IO+19)& (0+255),b
  2132                           
  2133                           ;main.c: 243:      IO.score = 50;
  2134  002422  0E32               	movlw	50
  2135  002424  6FBD               	movwf	(_IO+20)& (0+255),b
  2136  002426  D68C               	goto	l7764
  2137  002428                     __end_of_main:
  2138                           	opt callstack 0
  2139                           
  2140 ;; *************** function _work_sw *****************
  2141 ;; Defined at:
  2142 ;;		line 84 in file "main.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  buffer        128    0[BANK2 ] unsigned char [64][2]
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/1
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2159 ;;      Totals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2160 ;;Total ram usage:      128 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:   13
  2163 ;; This function calls:
  2164 ;;		_StartTimer
  2165 ;;		_TimerDone
  2166 ;;		_eaDogM_WriteStringAtPos
  2167 ;;		_sprintf
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text1
  2174  00488E                     __ptext1:
  2175                           	opt callstack 0
  2176  00488E                     _work_sw:
  2177                           	opt callstack 17
  2178                           
  2179                           ;main.c: 86:  char buffer[2][64];;main.c: 87:  if (TimerDone(TMR_INIT)) {
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;incstack = 0
  2183  00488E  0E01               	movlw	1
  2184  004890  ECB4  F028         	call	_TimerDone
  2185  004894  0900               	iorlw	0
  2186  004896  B4D8               	btfsc	status,2,c
  2187  004898  0012               	return	
  2188                           
  2189                           ;main.c: 88:   IO.clock++;
  2190  00489A  0101               	movlb	1	; () banked
  2191  00489C  4BC8               	infsnz	(_IO+31)& (0+255),f,b
  2192  00489E  2BC9               	incf	(_IO+32)& (0+255),f,b
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;main.c: 89:   sprintf(buffer[0], " H %i, M %i     ", IO.hits, IO.misses);
  2196  0048A0  0E00               	movlw	low work_sw@buffer
  2197  0048A2  0100               	movlb	0	; () banked
  2198  0048A4  6F64               	movwf	sprintf@s& (0+255),b
  2199  0048A6  0E02               	movlw	high work_sw@buffer
  2200  0048A8  6F65               	movwf	(sprintf@s+1)& (0+255),b
  2201  0048AA  0E01               	movlw	low STR_1
  2202  0048AC  6F66               	movwf	sprintf@fmt& (0+255),b
  2203  0048AE  0060  F6EC  F067   	movff	_IO+18,?_sprintf+3
  2204  0048B4  6B68               	clrf	(?_sprintf+4)& (0+255),b
  2205  0048B6  0060  F6F0  F069   	movff	_IO+19,?_sprintf+5
  2206  0048BC  6B6A               	clrf	(?_sprintf+6)& (0+255),b
  2207  0048BE  EC53  F026         	call	_sprintf	;wreg free
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;main.c: 90:   sprintf(buffer[1], " Score %i %i    ", IO.score, otto_b1.result);
  2211  0048C2  0E40               	movlw	low (work_sw@buffer+64)
  2212  0048C4  6F64               	movwf	sprintf@s& (0+255),b
  2213  0048C6  0E02               	movlw	high (work_sw@buffer+64)
  2214  0048C8  6F65               	movwf	(sprintf@s+1)& (0+255),b
  2215  0048CA  0E12               	movlw	low STR_2
  2216  0048CC  6F66               	movwf	sprintf@fmt& (0+255),b
  2217  0048CE  0060  F6F4  F067   	movff	_IO+20,?_sprintf+3
  2218  0048D4  6B68               	clrf	(?_sprintf+4)& (0+255),b
  2219  0048D6  0060  F778  F069   	movff	_otto_b1+12,?_sprintf+5
  2220  0048DC  0060  F77C  F06A   	movff	_otto_b1+13,?_sprintf+6
  2221  0048E2  EC53  F026         	call	_sprintf	;wreg free
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;main.c: 92:   buffer[1][16] = 0;
  2225  0048E6  0E00               	movlw	0
  2226  0048E8  0102               	movlb	2	; () banked
  2227  0048EA  6F50               	movwf	(work_sw@buffer+80)& (0+255),b
  2228                           
  2229                           ; BSR set to: 2
  2230                           ;main.c: 93:   eaDogM_WriteStringAtPos(1, 0, buffer[0]);
  2231  0048EC  0E00               	movlw	0
  2232  0048EE  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  2233  0048F0  0E00               	movlw	low work_sw@buffer
  2234  0048F2  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  2235  0048F4  0E02               	movlw	high work_sw@buffer
  2236  0048F6  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  2237  0048F8  0E01               	movlw	1
  2238  0048FA  EC44  F029         	call	_eaDogM_WriteStringAtPos
  2239                           
  2240                           ;main.c: 94:   eaDogM_WriteStringAtPos(2, 0, buffer[1]);
  2241  0048FE  0E00               	movlw	0
  2242  004900  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  2243  004902  0E40               	movlw	low (work_sw@buffer+64)
  2244  004904  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  2245  004906  0E02               	movlw	high (work_sw@buffer+64)
  2246  004908  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  2247  00490A  0E02               	movlw	2
  2248  00490C  EC44  F029         	call	_eaDogM_WriteStringAtPos
  2249                           
  2250                           ;main.c: 95:   StartTimer(TMR_INIT, 500);
  2251  004910  0E01               	movlw	1
  2252  004912  6E07               	movwf	(StartTimer@count+1)^0,c
  2253  004914  0EF4               	movlw	244
  2254  004916  6E06               	movwf	StartTimer@count^0,c
  2255  004918  0E01               	movlw	1
  2256  00491A  EC01  F028         	call	_StartTimer
  2257  00491E  0012               	return		;funcret
  2258  004920                     __end_of_work_sw:
  2259                           	opt callstack 0
  2260                           
  2261 ;; *************** function _sprintf *****************
  2262 ;; Defined at:
  2263 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  s               2    4[BANK0 ] PTR unsigned char 
  2266 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2267 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  2268 ;;		 -> STR_3(12), STR_2(17), STR_1(17), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  f               6   14[BANK0 ] struct _IO_FILE
  2271 ;;  ret             2    0        int 
  2272 ;;  ap              1   13[BANK0 ] PTR void [1]
  2273 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2    4[BANK0 ] int 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 3F/0
  2280 ;;		On exit  : 3F/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2283 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2284 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2286 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2287 ;;Total ram usage:       16 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:   12
  2290 ;; This function calls:
  2291 ;;		_vfprintf
  2292 ;; This function is called by:
  2293 ;;		_work_sw
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text2
  2299  004CA6                     __ptext2:
  2300                           	opt callstack 0
  2301  004CA6                     _sprintf:
  2302                           	opt callstack 17
  2303                           
  2304                           ; BSR set to: 0
  2305                           
  2306                           ;incstack = 0
  2307  004CA6  0E67               	movlw	low (?_sprintf+3)
  2308  004CA8  6F6D               	movwf	sprintf@ap& (0+255),b
  2309  004CAA  0060  F190  F06E   	movff	sprintf@s,sprintf@f
  2310  004CB0  0060  F194  F06F   	movff	sprintf@s+1,sprintf@f+1
  2311                           
  2312                           ; BSR set to: 0
  2313  004CB6  0E00               	movlw	0
  2314  004CB8  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2315  004CBA  0E00               	movlw	0
  2316  004CBC  6F70               	movwf	(sprintf@f+2)& (0+255),b
  2317                           
  2318                           ; BSR set to: 0
  2319  004CBE  0E00               	movlw	0
  2320  004CC0  6F73               	movwf	(sprintf@f+5)& (0+255),b
  2321  004CC2  0E00               	movlw	0
  2322  004CC4  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325  004CC6  0E6E               	movlw	low sprintf@f
  2326  004CC8  6F60               	movwf	vfprintf@fp& (0+255),b
  2327  004CCA  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  2328  004CCC  0060  F198  F062   	movff	sprintf@fmt,vfprintf@fmt
  2329  004CD2  0E6D               	movlw	low sprintf@ap
  2330  004CD4  6F63               	movwf	vfprintf@ap& (0+255),b
  2331  004CD6  ECD7  F025         	call	_vfprintf	;wreg free
  2332                           
  2333                           ; BSR set to: 1
  2334  004CDA  0100               	movlb	0	; () banked
  2335  004CDC  5170               	movf	(sprintf@f+2)& (0+255),w,b
  2336  004CDE  2564               	addwf	sprintf@s& (0+255),w,b
  2337  004CE0  6ED9               	movwf	fsr2l,c
  2338  004CE2  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2339  004CE4  2165               	addwfc	(sprintf@s+1)& (0+255),w,b
  2340  004CE6  6EDA               	movwf	fsr2h,c
  2341  004CE8  0E00               	movlw	0
  2342  004CEA  6EDF               	movwf	indf2,c
  2343                           
  2344                           ; BSR set to: 0
  2345  004CEC  0012               	return		;funcret
  2346  004CEE                     __end_of_sprintf:
  2347                           	opt callstack 0
  2348                           
  2349 ;; *************** function _eaDogM_WriteStringAtPos *****************
  2350 ;; Defined at:
  2351 ;;		line 122 in file "eadog.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  r               1    wreg     const unsigned char 
  2354 ;;  c               1   13[COMRAM] const unsigned char 
  2355 ;;  strPtr          2   14[COMRAM] PTR unsigned char 
  2356 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  r               1   16[COMRAM] const unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2368 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2371 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2372 ;;Total ram usage:        4 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    6
  2375 ;; This function calls:
  2376 ;;		_eaDogM_WriteString
  2377 ;;		_send_lcd_cmd
  2378 ;; This function is called by:
  2379 ;;		_work_sw
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text3
  2385  005288                     __ptext3:
  2386                           	opt callstack 0
  2387  005288                     _eaDogM_WriteStringAtPos:
  2388                           	opt callstack 23
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;incstack = 0
  2392                           ;eaDogM_WriteStringAtPos@r stored from wreg
  2393  005288  6E11               	movwf	eaDogM_WriteStringAtPos@r^0,c
  2394                           
  2395                           ;eadog.c: 122: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 123: {;eadog.c: 124:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  2396  00528A  5011               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  2397  00528C  0D10               	mullw	16
  2398  00528E  50F3               	movf	243,w,c
  2399  005290  240E               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  2400  005292  0F80               	addlw	128
  2401  005294  EC78  F027         	call	_send_lcd_cmd
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;eadog.c: 125:  eaDogM_WriteString(strPtr);
  2405  005298  0060  F03C  F00A   	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  2406  00529E  0060  F040  F00B   	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  2407  0052A4  EC47  F025         	call	_eaDogM_WriteString	;wreg free
  2408  0052A8  0012               	return		;funcret
  2409  0052AA                     __end_of_eaDogM_WriteStringAtPos:
  2410                           	opt callstack 0
  2411                           
  2412 ;; *************** function _eaDogM_WriteString *****************
  2413 ;; Defined at:
  2414 ;;		line 106 in file "eadog.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  2417 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  bytesWritten    1   12[COMRAM] unsigned char 
  2420 ;;  i               1   11[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 3F/1
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2434 ;;Total ram usage:        4 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    5
  2437 ;; This function calls:
  2438 ;;		_SPI1_Exchange8bit
  2439 ;;		_strlen
  2440 ;;		_wdtdelay
  2441 ;; This function is called by:
  2442 ;;		_eaDogM_WriteStringAtPos
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text4
  2447  004A8E                     __ptext4:
  2448                           	opt callstack 0
  2449  004A8E                     _eaDogM_WriteString:
  2450                           	opt callstack 23
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;eadog.c: 106: void eaDogM_WriteString(char *strPtr);eadog.c: 107: {;eadog.c: 108:  uint
      +                          8_t i = strlen(strPtr);
  2454                           
  2455                           ;incstack = 0
  2456  004A8E  0060  F028  F006   	movff	eaDogM_WriteString@strPtr,strlen@s
  2457  004A94  0060  F02C  F007   	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  2458  004A9A  EC05  F026         	call	_strlen	;wreg free
  2459  004A9E  5006               	movf	?_strlen^0,w,c
  2460  004AA0  6E0C               	movwf	eaDogM_WriteString@i^0,c
  2461                           
  2462                           ;eadog.c: 109:  uint8_t bytesWritten = 0;
  2463  004AA2  0E00               	movlw	0
  2464  004AA4  6E0D               	movwf	eaDogM_WriteString@bytesWritten^0,c
  2465  004AA6  82BC               	bsf	188,1,c	;volatile
  2466  004AA8  94BC               	bcf	188,2,c	;volatile
  2467                           
  2468                           ;eadog.c: 113:  if (i > 64) strPtr[64] = 0;
  2469  004AAA  0E40               	movlw	64
  2470  004AAC  640C               	cpfsgt	eaDogM_WriteString@i^0,c
  2471  004AAE  D01D               	goto	l6980
  2472  004AB0  EE20 F040          	lfsr	2,64
  2473  004AB4  500A               	movf	eaDogM_WriteString@strPtr^0,w,c
  2474  004AB6  26D9               	addwf	fsr2l,f,c
  2475  004AB8  500B               	movf	(eaDogM_WriteString@strPtr+1)^0,w,c
  2476  004ABA  22DA               	addwfc	fsr2h,f,c
  2477  004ABC  0E00               	movlw	0
  2478  004ABE  6EDF               	movwf	indf2,c
  2479  004AC0  D014               	goto	l6980
  2480  004AC2                     l6974:
  2481                           
  2482                           ;eadog.c: 116:   wdtdelay(9);
  2483  004AC2  0E09               	movlw	9
  2484  004AC4  6E06               	movwf	wdtdelay@delay^0,c
  2485  004AC6  0E00               	movlw	0
  2486  004AC8  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2487  004ACA  0E00               	movlw	0
  2488  004ACC  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2489  004ACE  0E00               	movlw	0
  2490  004AD0  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2491  004AD2  EC5B  F027         	call	_wdtdelay	;wreg free
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;eadog.c: 117:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  2495  004AD6  500D               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  2496  004AD8  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  2497  004ADA  6ED9               	movwf	fsr2l,c
  2498  004ADC  0E00               	movlw	0
  2499  004ADE  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  2500  004AE0  6EDA               	movwf	fsr2h,c
  2501  004AE2  50DF               	movf	indf2,w,c
  2502  004AE4  ECA2  F029         	call	_SPI1_Exchange8bit
  2503                           
  2504                           ; BSR set to: 61
  2505                           ;eadog.c: 118:   bytesWritten++;
  2506  004AE8  2A0D               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  2507  004AEA                     l6980:
  2508                           
  2509                           ;eadog.c: 115:  while (bytesWritten < i) {
  2510  004AEA  500C               	movf	eaDogM_WriteString@i^0,w,c
  2511  004AEC  5C0D               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  2512  004AEE  B0D8               	btfsc	status,0,c
  2513  004AF0  0012               	return	
  2514  004AF2  D7E7               	goto	l6974
  2515  004AF4                     __end_of_eaDogM_WriteString:
  2516                           	opt callstack 0
  2517                           
  2518 ;; *************** function _srand *****************
  2519 ;; Defined at:
  2520 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  s               2    5[COMRAM] unsigned int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0
  2529 ;; Tracked objects:
  2530 ;;		On entry : 3F/1
  2531 ;;		On exit  : 3F/1
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2536 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2538 ;;Total ram usage:        6 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    4
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text5
  2549  004F60                     __ptext5:
  2550                           	opt callstack 0
  2551  004F60                     _srand:
  2552                           	opt callstack 26
  2553                           
  2554                           ; BSR set to: 1
  2555                           
  2556                           ;incstack = 0
  2557  004F60  0EFF               	movlw	255
  2558  004F62  6E08               	movwf	??_srand^0,c
  2559  004F64  0EFF               	movlw	255
  2560  004F66  6E09               	movwf	(??_srand+1)^0,c
  2561  004F68  0060  F018  F00A   	movff	srand@s,??_srand+2
  2562  004F6E  0060  F01C  F00B   	movff	srand@s+1,??_srand+3
  2563  004F74  5008               	movf	??_srand^0,w,c
  2564  004F76  260A               	addwf	(??_srand+2)^0,f,c
  2565  004F78  5009               	movf	(??_srand+1)^0,w,c
  2566  004F7A  220B               	addwfc	(??_srand+3)^0,f,c
  2567  004F7C  0060  F028  F196   	movff	??_srand+2,_seed
  2568  004F82  0060  F02C  F197   	movff	??_srand+3,_seed+1
  2569  004F88  6B98               	clrf	(_seed+2)& (0+255),b
  2570  004F8A  6B99               	clrf	(_seed+3)& (0+255),b
  2571  004F8C  6B9A               	clrf	(_seed+4)& (0+255),b
  2572  004F8E  6B9B               	clrf	(_seed+5)& (0+255),b
  2573  004F90  6B9C               	clrf	(_seed+6)& (0+255),b
  2574  004F92  6B9D               	clrf	(_seed+7)& (0+255),b
  2575                           
  2576                           ; BSR set to: 1
  2577  004F94  0012               	return		;funcret
  2578  004F96                     __end_of_srand:
  2579                           	opt callstack 0
  2580                           
  2581 ;; *************** function _rand *****************
  2582 ;; Defined at:
  2583 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  2   29[COMRAM] int 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 3F/0
  2594 ;;		On exit  : 3F/1
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2599 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2600 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2601 ;;Total ram usage:       10 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    5
  2604 ;; This function calls:
  2605 ;;		___omul
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text6
  2612  004086                     __ptext6:
  2613                           	opt callstack 0
  2614  004086                     _rand:
  2615                           	opt callstack 25
  2616                           
  2617                           ; BSR set to: 0
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;incstack = 0
  2621  004086  0060  F658  F006   	movff	_seed,___omul@multiplier
  2622  00408C  0060  F65C  F007   	movff	_seed+1,___omul@multiplier+1
  2623  004092  0060  F660  F008   	movff	_seed+2,___omul@multiplier+2
  2624  004098  0060  F664  F009   	movff	_seed+3,___omul@multiplier+3
  2625  00409E  0060  F668  F00A   	movff	_seed+4,___omul@multiplier+4
  2626  0040A4  0060  F66C  F00B   	movff	_seed+5,___omul@multiplier+5
  2627  0040AA  0060  F670  F00C   	movff	_seed+6,___omul@multiplier+6
  2628  0040B0  0060  F674  F00D   	movff	_seed+7,___omul@multiplier+7
  2629  0040B6  0E2D               	movlw	45
  2630  0040B8  6E0E               	movwf	___omul@multiplicand^0,c
  2631  0040BA  0E7F               	movlw	127
  2632  0040BC  6E0F               	movwf	(___omul@multiplicand+1)^0,c
  2633  0040BE  0E95               	movlw	149
  2634  0040C0  6E10               	movwf	(___omul@multiplicand+2)^0,c
  2635  0040C2  0E4C               	movlw	76
  2636  0040C4  6E11               	movwf	(___omul@multiplicand+3)^0,c
  2637  0040C6  0E2D               	movlw	45
  2638  0040C8  6E12               	movwf	(___omul@multiplicand+4)^0,c
  2639  0040CA  0EF4               	movlw	244
  2640  0040CC  6E13               	movwf	(___omul@multiplicand+5)^0,c
  2641  0040CE  0E51               	movlw	81
  2642  0040D0  6E14               	movwf	(___omul@multiplicand+6)^0,c
  2643  0040D2  0E58               	movlw	88
  2644  0040D4  6E15               	movwf	(___omul@multiplicand+7)^0,c
  2645  0040D6  ECFA  F023         	call	___omul	;wreg free
  2646  0040DA  0060  F018  F020   	movff	?___omul,??_rand
  2647  0040E0  0060  F01C  F021   	movff	?___omul+1,??_rand+1
  2648  0040E6  0060  F020  F022   	movff	?___omul+2,??_rand+2
  2649  0040EC  0060  F024  F023   	movff	?___omul+3,??_rand+3
  2650  0040F2  0060  F028  F024   	movff	?___omul+4,??_rand+4
  2651  0040F8  0060  F02C  F025   	movff	?___omul+5,??_rand+5
  2652  0040FE  0060  F030  F026   	movff	?___omul+6,??_rand+6
  2653  004104  0060  F034  F027   	movff	?___omul+7,??_rand+7
  2654  00410A  0E01               	movlw	1
  2655  00410C  2420               	addwf	??_rand^0,w,c
  2656  00410E  0101               	movlb	1	; () banked
  2657  004110  6F96               	movwf	_seed& (0+255),b
  2658  004112  0E00               	movlw	0
  2659  004114  2021               	addwfc	(??_rand+1)^0,w,c
  2660  004116  6F97               	movwf	(_seed+1)& (0+255),b
  2661  004118  0E00               	movlw	0
  2662  00411A  2022               	addwfc	(??_rand+2)^0,w,c
  2663  00411C  6F98               	movwf	(_seed+2)& (0+255),b
  2664  00411E  0E00               	movlw	0
  2665  004120  2023               	addwfc	(??_rand+3)^0,w,c
  2666  004122  6F99               	movwf	(_seed+3)& (0+255),b
  2667  004124  0E00               	movlw	0
  2668  004126  2024               	addwfc	(??_rand+4)^0,w,c
  2669  004128  6F9A               	movwf	(_seed+4)& (0+255),b
  2670  00412A  0E00               	movlw	0
  2671  00412C  2025               	addwfc	(??_rand+5)^0,w,c
  2672  00412E  6F9B               	movwf	(_seed+5)& (0+255),b
  2673  004130  0E00               	movlw	0
  2674  004132  2026               	addwfc	(??_rand+6)^0,w,c
  2675  004134  6F9C               	movwf	(_seed+6)& (0+255),b
  2676  004136  0E00               	movlw	0
  2677  004138  2027               	addwfc	(??_rand+7)^0,w,c
  2678  00413A  6F9D               	movwf	(_seed+7)& (0+255),b
  2679                           
  2680                           ; BSR set to: 1
  2681  00413C  0060  F658  F020   	movff	_seed,??_rand
  2682  004142  0060  F65C  F021   	movff	_seed+1,??_rand+1
  2683  004148  0060  F660  F022   	movff	_seed+2,??_rand+2
  2684  00414E  0060  F664  F023   	movff	_seed+3,??_rand+3
  2685  004154  0060  F668  F024   	movff	_seed+4,??_rand+4
  2686  00415A  0060  F66C  F025   	movff	_seed+5,??_rand+5
  2687  004160  0060  F670  F026   	movff	_seed+6,??_rand+6
  2688  004166  0060  F674  F027   	movff	_seed+7,??_rand+7
  2689  00416C  0E32               	movlw	50
  2690  00416E  D009               	goto	u8330
  2691  004170                     u8335:
  2692  004170  90D8               	bcf	status,0,c
  2693  004172  3227               	rrcf	(??_rand+7)^0,f,c
  2694  004174  3226               	rrcf	(??_rand+6)^0,f,c
  2695  004176  3225               	rrcf	(??_rand+5)^0,f,c
  2696  004178  3224               	rrcf	(??_rand+4)^0,f,c
  2697  00417A  3223               	rrcf	(??_rand+3)^0,f,c
  2698  00417C  3222               	rrcf	(??_rand+2)^0,f,c
  2699  00417E  3221               	rrcf	(??_rand+1)^0,f,c
  2700  004180  3220               	rrcf	??_rand^0,f,c
  2701  004182                     u8330:
  2702  004182  2EE8               	decfsz	wreg,f,c
  2703  004184  D7F5               	goto	u8335
  2704  004186  0060  F080  F01E   	movff	??_rand,?_rand
  2705  00418C  0060  F088  F01F   	movff	??_rand+2,?_rand+1
  2706                           
  2707                           ; BSR set to: 1
  2708  004192  0012               	return		;funcret
  2709  004194                     __end_of_rand:
  2710                           	opt callstack 0
  2711                           
  2712 ;; *************** function ___omul *****************
  2713 ;; Defined at:
  2714 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  multiplier      8    5[COMRAM] unsigned long long 
  2717 ;;  multiplicand    8   13[COMRAM] unsigned long long 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  product         8   21[COMRAM] unsigned long long 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  8    5[COMRAM] unsigned long long 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 3F/0
  2726 ;;		On exit  : 3F/0
  2727 ;;		Unchanged: 3F/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2729 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2730 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2732 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2733 ;;Total ram usage:       24 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    4
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_rand
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text7
  2744  0047F4                     __ptext7:
  2745                           	opt callstack 0
  2746  0047F4                     ___omul:
  2747                           	opt callstack 25
  2748                           
  2749                           ; BSR set to: 0
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;incstack = 0
  2753  0047F4  EE20  F016         	lfsr	2,___omul@product
  2754  0047F8  0E07               	movlw	7
  2755  0047FA                     u7721:
  2756  0047FA  6ADE               	clrf	postinc2,c
  2757  0047FC  06E8               	decf	wreg,f,c
  2758  0047FE  E2FD               	bc	u7721
  2759  004800                     l7332:
  2760                           
  2761                           ; BSR set to: 0
  2762  004800  A006               	btfss	___omul@multiplier^0,0,c
  2763  004802  D010               	goto	l7336
  2764                           
  2765                           ; BSR set to: 0
  2766  004804  500E               	movf	___omul@multiplicand^0,w,c
  2767  004806  2616               	addwf	___omul@product^0,f,c
  2768  004808  500F               	movf	(___omul@multiplicand+1)^0,w,c
  2769  00480A  2217               	addwfc	(___omul@product+1)^0,f,c
  2770  00480C  5010               	movf	(___omul@multiplicand+2)^0,w,c
  2771  00480E  2218               	addwfc	(___omul@product+2)^0,f,c
  2772  004810  5011               	movf	(___omul@multiplicand+3)^0,w,c
  2773  004812  2219               	addwfc	(___omul@product+3)^0,f,c
  2774  004814  5012               	movf	(___omul@multiplicand+4)^0,w,c
  2775  004816  221A               	addwfc	(___omul@product+4)^0,f,c
  2776  004818  5013               	movf	(___omul@multiplicand+5)^0,w,c
  2777  00481A  221B               	addwfc	(___omul@product+5)^0,f,c
  2778  00481C  5014               	movf	(___omul@multiplicand+6)^0,w,c
  2779  00481E  221C               	addwfc	(___omul@product+6)^0,f,c
  2780  004820  5015               	movf	(___omul@multiplicand+7)^0,w,c
  2781  004822  221D               	addwfc	(___omul@product+7)^0,f,c
  2782  004824                     l7336:
  2783                           
  2784                           ; BSR set to: 0
  2785  004824  90D8               	bcf	status,0,c
  2786  004826  360E               	rlcf	___omul@multiplicand^0,f,c
  2787  004828  360F               	rlcf	(___omul@multiplicand+1)^0,f,c
  2788  00482A  3610               	rlcf	(___omul@multiplicand+2)^0,f,c
  2789  00482C  3611               	rlcf	(___omul@multiplicand+3)^0,f,c
  2790  00482E  3612               	rlcf	(___omul@multiplicand+4)^0,f,c
  2791  004830  3613               	rlcf	(___omul@multiplicand+5)^0,f,c
  2792  004832  3614               	rlcf	(___omul@multiplicand+6)^0,f,c
  2793  004834  3615               	rlcf	(___omul@multiplicand+7)^0,f,c
  2794                           
  2795                           ; BSR set to: 0
  2796  004836  90D8               	bcf	status,0,c
  2797  004838  320D               	rrcf	(___omul@multiplier+7)^0,f,c
  2798  00483A  320C               	rrcf	(___omul@multiplier+6)^0,f,c
  2799  00483C  320B               	rrcf	(___omul@multiplier+5)^0,f,c
  2800  00483E  320A               	rrcf	(___omul@multiplier+4)^0,f,c
  2801  004840  3209               	rrcf	(___omul@multiplier+3)^0,f,c
  2802  004842  3208               	rrcf	(___omul@multiplier+2)^0,f,c
  2803  004844  3207               	rrcf	(___omul@multiplier+1)^0,f,c
  2804  004846  3206               	rrcf	___omul@multiplier^0,f,c
  2805  004848  5006               	movf	___omul@multiplier^0,w,c
  2806  00484A  1007               	iorwf	(___omul@multiplier+1)^0,w,c
  2807  00484C  1008               	iorwf	(___omul@multiplier+2)^0,w,c
  2808  00484E  1009               	iorwf	(___omul@multiplier+3)^0,w,c
  2809  004850  100A               	iorwf	(___omul@multiplier+4)^0,w,c
  2810  004852  100B               	iorwf	(___omul@multiplier+5)^0,w,c
  2811  004854  100C               	iorwf	(___omul@multiplier+6)^0,w,c
  2812  004856  100D               	iorwf	(___omul@multiplier+7)^0,w,c
  2813  004858  A4D8               	btfss	status,2,c
  2814  00485A  D7D2               	goto	l7332
  2815                           
  2816                           ; BSR set to: 0
  2817  00485C  0060  F058  F006   	movff	___omul@product,?___omul
  2818  004862  0060  F05C  F007   	movff	___omul@product+1,?___omul+1
  2819  004868  0060  F060  F008   	movff	___omul@product+2,?___omul+2
  2820  00486E  0060  F064  F009   	movff	___omul@product+3,?___omul+3
  2821  004874  0060  F068  F00A   	movff	___omul@product+4,?___omul+4
  2822  00487A  0060  F06C  F00B   	movff	___omul@product+5,?___omul+5
  2823  004880  0060  F070  F00C   	movff	___omul@product+6,?___omul+6
  2824  004886  0060  F074  F00D   	movff	___omul@product+7,?___omul+7
  2825                           
  2826                           ; BSR set to: 0
  2827  00488C  0012               	return		;funcret
  2828  00488E                     __end_of___omul:
  2829                           	opt callstack 0
  2830                           
  2831 ;; *************** function _once *****************
  2832 ;; Defined at:
  2833 ;;		line 287 in file "d232.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  once_flag       2    5[COMRAM] PTR _Bool 
  2836 ;;		 -> IO(41), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      _Bool 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr2l, fsr2h, status,2
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/1
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    4
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text8
  2863  0050F2                     __ptext8:
  2864                           	opt callstack 0
  2865  0050F2                     _once:
  2866                           	opt callstack 26
  2867                           
  2868                           ;d232.c: 287: _Bool once(_Bool *once_flag);d232.c: 288: {;d232.c: 289:  if (*once_flag) 
      +                          {
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;incstack = 0
  2872  0050F2  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2873  0050F8  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2874  0050FE  50DF               	movf	indf2,w,c
  2875  005100  B4D8               	btfsc	status,2,c
  2876  005102  D00A               	goto	l7718
  2877                           
  2878                           ;d232.c: 290:   *once_flag = 0;
  2879  005104  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2880  00510A  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2881  005110  0E00               	movlw	0
  2882  005112  6EDF               	movwf	indf2,c
  2883                           
  2884                           ;d232.c: 291:   return 1;
  2885  005114  0E01               	movlw	1
  2886  005116  0012               	return	
  2887  005118                     l7718:
  2888                           
  2889                           ;d232.c: 294:   return 0;
  2890  005118  0E00               	movlw	0
  2891  00511A  0012               	return		;funcret
  2892  00511C                     __end_of_once:
  2893                           	opt callstack 0
  2894                           
  2895 ;; *************** function _led_lightshow *****************
  2896 ;; Defined at:
  2897 ;;		line 178 in file "d232.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  seq             1    wreg     unsigned char 
  2900 ;;  speed           2   13[COMRAM] unsigned short 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  seq             1   17[COMRAM] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 3F/1
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2915 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2916 ;;Total ram usage:        5 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    5
  2919 ;; This function calls:
  2920 ;;		_StartTimer
  2921 ;;		_TimerDone
  2922 ;;		___awdiv
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text9
  2929  002AF4                     __ptext9:
  2930                           	opt callstack 0
  2931  002AF4                     _led_lightshow:
  2932                           	opt callstack 25
  2933                           
  2934                           ;incstack = 0
  2935                           ;led_lightshow@seq stored from wreg
  2936  002AF4  6E12               	movwf	led_lightshow@seq^0,c
  2937                           
  2938                           ;d232.c: 178: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 179: {;d232.c: 180
      +                          :  static uint16_t j = 0;;d232.c: 181:  static uint8_t cylon = 0xff;;d232.c: 182:  stati
      +                          c int16_t alive_led = 0;;d232.c: 183:  static _Bool LED_UP = 1;;d232.c: 185:  if (seq ==
      +                           1) {
  2939  002AF6  0412               	decf	led_lightshow@seq^0,w,c
  2940  002AF8  A4D8               	btfss	status,2,c
  2941  002AFA  D003               	goto	l7582
  2942                           
  2943                           ;d232.c: 186:   IO.outbytes[2] = IO.inbytes[0];
  2944  002AFC  C1A9  F1B0         	movff	_IO,_IO+7
  2945                           
  2946                           ;d232.c: 187:   return;
  2947  002B00  0012               	return	
  2948  002B02                     l7582:
  2949                           
  2950                           ;d232.c: 190:  if (seq == 2) {
  2951  002B02  0E02               	movlw	2
  2952  002B04  1812               	xorwf	led_lightshow@seq^0,w,c
  2953  002B06  A4D8               	btfss	status,2,c
  2954  002B08  D010               	goto	l7594
  2955                           
  2956                           ;d232.c: 191:   if (IO.sequence_done) {
  2957  002B0A  0101               	movlb	1	; () banked
  2958  002B0C  51CB               	movf	(_IO+34)& (0+255),w,b
  2959  002B0E  B4D8               	btfsc	status,2,c
  2960  002B10  D009               	goto	l7590
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;d232.c: 192:    IO.sequence_done = 0;
  2964  002B12  0E00               	movlw	0
  2965  002B14  6FCB               	movwf	(_IO+34)& (0+255),b
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;d232.c: 193:    StartTimer(TMR_SEQ, 30000);
  2969  002B16  0E75               	movlw	117
  2970  002B18  6E07               	movwf	(StartTimer@count+1)^0,c
  2971  002B1A  0E30               	movlw	48
  2972  002B1C  6E06               	movwf	StartTimer@count^0,c
  2973  002B1E  0E06               	movlw	6
  2974  002B20  EC01  F028         	call	_StartTimer
  2975  002B24                     l7590:
  2976                           
  2977                           ;d232.c: 195:   IO.outbytes[2]++;
  2978  002B24  0101               	movlb	1	; () banked
  2979  002B26  2BB0               	incf	(_IO+7)& (0+255),f,b
  2980  002B28  0012               	return	
  2981  002B2A                     l7594:
  2982                           
  2983                           ;d232.c: 199:  if (seq == 0) {
  2984  002B2A  5012               	movf	led_lightshow@seq^0,w,c
  2985  002B2C  A4D8               	btfss	status,2,c
  2986  002B2E  D05A               	goto	l7622
  2987                           
  2988                           ;d232.c: 200:   if (j++ >= speed) {
  2989  002B30  0101               	movlb	1	; () banked
  2990  002B32  518E               	movf	led_lightshow@j& (0+255),w,b
  2991  002B34  6E10               	movwf	??_led_lightshow^0,c
  2992  002B36  518F               	movf	(led_lightshow@j+1)& (0+255),w,b
  2993  002B38  6E11               	movwf	(??_led_lightshow+1)^0,c
  2994  002B3A  4B8E               	infsnz	led_lightshow@j& (0+255),f,b
  2995  002B3C  2B8F               	incf	(led_lightshow@j+1)& (0+255),f,b
  2996  002B3E  500E               	movf	led_lightshow@speed^0,w,c
  2997  002B40  5C10               	subwf	??_led_lightshow^0,w,c
  2998  002B42  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2999  002B44  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  3000  002B46  A0D8               	btfss	status,0,c
  3001  002B48  D04D               	goto	l7622
  3002                           
  3003                           ; BSR set to: 1
  3004                           ;d232.c: 204:     IO.outbytes[2] = cylon;
  3005  002B4A  C0AD  F1B0         	movff	led_lightshow@cylon,_IO+7
  3006                           
  3007                           ; BSR set to: 1
  3008                           ;d232.c: 207:    if (LED_UP && (alive_led != 0)) {
  3009  002B4E  0100               	movlb	0	; () banked
  3010  002B50  51AC               	movf	led_lightshow@LED_UP& (0+255),w,b
  3011  002B52  B4D8               	btfsc	status,2,c
  3012  002B54  D00C               	goto	l7608
  3013                           
  3014                           ; BSR set to: 0
  3015  002B56  51A0               	movf	led_lightshow@alive_led& (0+255),w,b
  3016  002B58  11A1               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  3017  002B5A  B4D8               	btfsc	status,2,c
  3018  002B5C  D008               	goto	l7608
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;d232.c: 208:     alive_led = alive_led * 2;
  3022  002B5E  90D8               	bcf	status,0,c
  3023  002B60  35A0               	rlcf	led_lightshow@alive_led& (0+255),w,b
  3024  002B62  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3025  002B64  35A1               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  3026  002B66  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3027                           
  3028                           ;d232.c: 209:     cylon = cylon << 1;
  3029  002B68  51AD               	movf	led_lightshow@cylon& (0+255),w,b
  3030  002B6A  25AD               	addwf	led_lightshow@cylon& (0+255),w,b
  3031  002B6C  D019               	goto	L1
  3032  002B6E                     l7608:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;d232.c: 211:     if (alive_led != 0) alive_led = alive_led / 2;
  3036  002B6E  51A0               	movf	led_lightshow@alive_led& (0+255),w,b
  3037  002B70  11A1               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  3038  002B72  B4D8               	btfsc	status,2,c
  3039  002B74  D012               	goto	l7612
  3040                           
  3041                           ; BSR set to: 0
  3042  002B76  0060  F280  F006   	movff	led_lightshow@alive_led,___awdiv@dividend
  3043  002B7C  0060  F284  F007   	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  3044  002B82  0E00               	movlw	0
  3045  002B84  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3046  002B86  0E02               	movlw	2
  3047  002B88  6E08               	movwf	___awdiv@divisor^0,c
  3048  002B8A  EC90  F024         	call	___awdiv	;wreg free
  3049  002B8E  0060  F018  F0A0   	movff	?___awdiv,led_lightshow@alive_led
  3050  002B94  0060  F01C  F0A1   	movff	?___awdiv+1,led_lightshow@alive_led+1
  3051  002B9A                     l7612:
  3052                           
  3053                           ;d232.c: 212:     cylon = cylon >> 1;
  3054  002B9A  0100               	movlb	0	; () banked
  3055  002B9C  90D8               	bcf	status,0,c
  3056  002B9E  31AD               	rrcf	led_lightshow@cylon& (0+255),w,b
  3057  002BA0                     L1:
  3058  002BA0  6FAD               	movwf	led_lightshow@cylon& (0+255),b
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;d232.c: 214:    if (alive_led < 2) {
  3062  002BA2  BFA1               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  3063  002BA4  D006               	goto	u8080
  3064  002BA6  51A1               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  3065  002BA8  E10A               	bnz	l7618
  3066  002BAA  0E02               	movlw	2
  3067  002BAC  5DA0               	subwf	led_lightshow@alive_led& (0+255),w,b
  3068  002BAE  B0D8               	btfsc	status,0,c
  3069  002BB0  D006               	goto	l7618
  3070  002BB2                     u8080:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;d232.c: 215:     alive_led = 2;
  3074  002BB2  0E00               	movlw	0
  3075  002BB4  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3076  002BB6  0E02               	movlw	2
  3077  002BB8  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3078                           
  3079                           ;d232.c: 216:     LED_UP = 1;
  3080  002BBA  0E01               	movlw	1
  3081  002BBC  D00D               	goto	L2
  3082  002BBE                     l7618:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;d232.c: 218:     if (alive_led > 128) {
  3086  002BBE  BFA1               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  3087  002BC0  D00C               	goto	l1206
  3088  002BC2  51A1               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  3089  002BC4  E104               	bnz	u8090
  3090  002BC6  0E81               	movlw	129
  3091  002BC8  5DA0               	subwf	led_lightshow@alive_led& (0+255),w,b
  3092  002BCA  A0D8               	btfss	status,0,c
  3093  002BCC  D006               	goto	l1206
  3094  002BCE                     u8090:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;d232.c: 219:      alive_led = 128;
  3098  002BCE  0E00               	movlw	0
  3099  002BD0  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3100  002BD2  0E80               	movlw	128
  3101  002BD4  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3102                           
  3103                           ;d232.c: 220:      LED_UP = 0;
  3104  002BD6  0E00               	movlw	0
  3105  002BD8                     L2:
  3106  002BD8  6FAC               	movwf	led_lightshow@LED_UP& (0+255),b
  3107  002BDA                     l1206:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;d232.c: 223:    j = 0;
  3111  002BDA  0E00               	movlw	0
  3112  002BDC  0101               	movlb	1	; () banked
  3113  002BDE  6F8F               	movwf	(led_lightshow@j+1)& (0+255),b
  3114  002BE0  0E00               	movlw	0
  3115  002BE2  6F8E               	movwf	led_lightshow@j& (0+255),b
  3116  002BE4                     l7622:
  3117                           
  3118                           ;d232.c: 227:  if (seq == 3) {
  3119  002BE4  0E03               	movlw	3
  3120  002BE6  1812               	xorwf	led_lightshow@seq^0,w,c
  3121  002BE8  A4D8               	btfss	status,2,c
  3122  002BEA  0012               	return	
  3123                           
  3124                           ;d232.c: 229:   if (otto_b1.result <= -120) {
  3125  002BEC  0101               	movlb	1	; () banked
  3126  002BEE  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3127  002BF0  D00A               	goto	l7628
  3128  002BF2  0E89               	movlw	137
  3129  002BF4  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3130  002BF6  0EFF               	movlw	255
  3131  002BF8  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3132  002BFA  B0D8               	btfsc	status,0,c
  3133  002BFC  D004               	goto	l7628
  3134                           
  3135                           ; BSR set to: 1
  3136                           ;d232.c: 230:    IO.outbytes[2] = 0b10000000;
  3137  002BFE  0E80               	movlw	128
  3138  002C00  6FB0               	movwf	(_IO+7)& (0+255),b
  3139                           
  3140                           ;d232.c: 231:    IO.BAL = UP;
  3141  002C02  0E00               	movlw	0
  3142  002C04  6FB8               	movwf	(_IO+15)& (0+255),b
  3143  002C06                     l7628:
  3144                           
  3145                           ; BSR set to: 1
  3146                           ;d232.c: 233:   if (otto_b1.result > -120 && otto_b1.result < -80) {
  3147  002C06  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3148  002C08  D006               	goto	u8120
  3149  002C0A  0E89               	movlw	137
  3150  002C0C  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3151  002C0E  0EFF               	movlw	255
  3152  002C10  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3153  002C12  A0D8               	btfss	status,0,c
  3154  002C14  D00C               	goto	l7634
  3155  002C16                     u8120:
  3156                           
  3157                           ; BSR set to: 1
  3158  002C16  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3159  002C18  D00A               	goto	l7634
  3160  002C1A  0EB0               	movlw	176
  3161  002C1C  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3162  002C1E  0EFF               	movlw	255
  3163  002C20  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3164  002C22  B0D8               	btfsc	status,0,c
  3165  002C24  D004               	goto	l7634
  3166                           
  3167                           ; BSR set to: 1
  3168                           ;d232.c: 234:    IO.outbytes[2] = 0b01000000;
  3169  002C26  0E40               	movlw	64
  3170  002C28  6FB0               	movwf	(_IO+7)& (0+255),b
  3171                           
  3172                           ;d232.c: 235:    IO.BAL = UP;
  3173  002C2A  0E00               	movlw	0
  3174  002C2C  6FB8               	movwf	(_IO+15)& (0+255),b
  3175  002C2E                     l7634:
  3176                           
  3177                           ; BSR set to: 1
  3178                           ;d232.c: 237:   if (otto_b1.result >= -80 && otto_b1.result < -30) {
  3179  002C2E  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3180  002C30  D006               	goto	u8140
  3181  002C32  0EB0               	movlw	176
  3182  002C34  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3183  002C36  0EFF               	movlw	255
  3184  002C38  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3185  002C3A  A0D8               	btfss	status,0,c
  3186  002C3C  D00C               	goto	l7640
  3187  002C3E                     u8140:
  3188                           
  3189                           ; BSR set to: 1
  3190  002C3E  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3191  002C40  D00A               	goto	l7640
  3192  002C42  0EE2               	movlw	226
  3193  002C44  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3194  002C46  0EFF               	movlw	255
  3195  002C48  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3196  002C4A  B0D8               	btfsc	status,0,c
  3197  002C4C  D004               	goto	l7640
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;d232.c: 238:    IO.outbytes[2] = 0b00100000;
  3201  002C4E  0E20               	movlw	32
  3202  002C50  6FB0               	movwf	(_IO+7)& (0+255),b
  3203                           
  3204                           ;d232.c: 239:    IO.BAL = UP;
  3205  002C52  0E00               	movlw	0
  3206  002C54  6FB8               	movwf	(_IO+15)& (0+255),b
  3207  002C56                     l7640:
  3208                           
  3209                           ; BSR set to: 1
  3210                           ;d232.c: 241:   if (otto_b1.result >= -30 && otto_b1.result < -5) {
  3211  002C56  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3212  002C58  D006               	goto	u8160
  3213  002C5A  0EE2               	movlw	226
  3214  002C5C  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3215  002C5E  0EFF               	movlw	255
  3216  002C60  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3217  002C62  A0D8               	btfss	status,0,c
  3218  002C64  D01B               	goto	l7656
  3219  002C66                     u8160:
  3220                           
  3221                           ; BSR set to: 1
  3222  002C66  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3223  002C68  D019               	goto	l7656
  3224  002C6A  0EFB               	movlw	251
  3225  002C6C  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3226  002C6E  0EFF               	movlw	255
  3227  002C70  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3228  002C72  B0D8               	btfsc	status,0,c
  3229  002C74  D013               	goto	l7656
  3230                           
  3231                           ; BSR set to: 1
  3232                           ;d232.c: 242:    if (IO.BAL != UP) {
  3233  002C76  51B8               	movf	(_IO+15)& (0+255),w,b
  3234  002C78  B4D8               	btfsc	status,2,c
  3235  002C7A  D00B               	goto	l7652
  3236                           
  3237                           ; BSR set to: 1
  3238                           ;d232.c: 243:     IO.outbytes[1] = IO.outbytes[1] | 0x02;
  3239  002C7C  51AF               	movf	(_IO+6)& (0+255),w,b
  3240  002C7E  0902               	iorlw	2
  3241  002C80  6FAF               	movwf	(_IO+6)& (0+255),b
  3242                           
  3243                           ; BSR set to: 1
  3244                           ;d232.c: 244:     IO.score--;
  3245  002C82  07BD               	decf	(_IO+20)& (0+255),f,b
  3246                           
  3247                           ; BSR set to: 1
  3248                           ;d232.c: 245:     StartTimer(TMR_BAL, 500);
  3249  002C84  0E01               	movlw	1
  3250  002C86  6E07               	movwf	(StartTimer@count+1)^0,c
  3251  002C88  0EF4               	movlw	244
  3252  002C8A  6E06               	movwf	StartTimer@count^0,c
  3253  002C8C  0E07               	movlw	7
  3254  002C8E  EC01  F028         	call	_StartTimer
  3255  002C92                     l7652:
  3256                           
  3257                           ;d232.c: 247:    IO.outbytes[2] = 0b00010000;
  3258  002C92  0E10               	movlw	16
  3259  002C94  0101               	movlb	1	; () banked
  3260  002C96  6FB0               	movwf	(_IO+7)& (0+255),b
  3261                           
  3262                           ; BSR set to: 1
  3263                           ;d232.c: 248:    IO.BAL = UP;
  3264  002C98  0E00               	movlw	0
  3265  002C9A  6FB8               	movwf	(_IO+15)& (0+255),b
  3266  002C9C                     l7656:
  3267                           
  3268                           ; BSR set to: 1
  3269                           ;d232.c: 250:   if (otto_b1.result >= -5 && otto_b1.result <= 5) {
  3270  002C9C  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3271  002C9E  D006               	goto	u8190
  3272  002CA0  0EFB               	movlw	251
  3273  002CA2  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3274  002CA4  0EFF               	movlw	255
  3275  002CA6  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3276  002CA8  A0D8               	btfss	status,0,c
  3277  002CAA  D025               	goto	l7676
  3278  002CAC                     u8190:
  3279                           
  3280                           ; BSR set to: 1
  3281  002CAC  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3282  002CAE  D006               	goto	u8200
  3283  002CB0  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3284  002CB2  E121               	bnz	l7676
  3285  002CB4  0E06               	movlw	6
  3286  002CB6  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3287  002CB8  B0D8               	btfsc	status,0,c
  3288  002CBA  D01D               	goto	l7676
  3289  002CBC                     u8200:
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;d232.c: 251:    if (IO.BAL != ON) {
  3293  002CBC  05B8               	decf	(_IO+15)& (0+255),w,b
  3294  002CBE  B4D8               	btfsc	status,2,c
  3295  002CC0  D015               	goto	l7672
  3296                           
  3297                           ; BSR set to: 1
  3298                           ;d232.c: 252:     IO.outbytes[1] = IO.outbytes[1] | 0x01;
  3299  002CC2  51AF               	movf	(_IO+6)& (0+255),w,b
  3300  002CC4  0901               	iorlw	1
  3301  002CC6  6FAF               	movwf	(_IO+6)& (0+255),b
  3302                           
  3303                           ; BSR set to: 1
  3304                           ;d232.c: 254:     if (TimerDone(TMR_BAL)) {
  3305  002CC8  0E07               	movlw	7
  3306  002CCA  ECB4  F028         	call	_TimerDone
  3307  002CCE  0900               	iorlw	0
  3308  002CD0  B4D8               	btfsc	status,2,c
  3309  002CD2  D005               	goto	l7670
  3310                           
  3311                           ;d232.c: 255:      if (IO.score < 50)
  3312  002CD4  0E32               	movlw	50
  3313  002CD6  0101               	movlb	1	; () banked
  3314  002CD8  61BD               	cpfslt	(_IO+20)& (0+255),b
  3315  002CDA  D001               	goto	l7670
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;d232.c: 256:       IO.score++;
  3319  002CDC  2BBD               	incf	(_IO+20)& (0+255),f,b
  3320  002CDE                     l7670:
  3321                           
  3322                           ;d232.c: 258:     StartTimer(TMR_BAL, 500);
  3323  002CDE  0E01               	movlw	1
  3324  002CE0  6E07               	movwf	(StartTimer@count+1)^0,c
  3325  002CE2  0EF4               	movlw	244
  3326  002CE4  6E06               	movwf	StartTimer@count^0,c
  3327  002CE6  0E07               	movlw	7
  3328  002CE8  EC01  F028         	call	_StartTimer
  3329  002CEC                     l7672:
  3330                           
  3331                           ;d232.c: 260:    IO.outbytes[2] = 0b00000000;
  3332  002CEC  0E00               	movlw	0
  3333  002CEE  0101               	movlb	1	; () banked
  3334  002CF0  6FB0               	movwf	(_IO+7)& (0+255),b
  3335                           
  3336                           ; BSR set to: 1
  3337                           ;d232.c: 261:    IO.BAL = ON;
  3338  002CF2  0E01               	movlw	1
  3339  002CF4  6FB8               	movwf	(_IO+15)& (0+255),b
  3340  002CF6                     l7676:
  3341                           
  3342                           ; BSR set to: 1
  3343                           ;d232.c: 263:   if (otto_b1.result > 5 && otto_b1.result < 30) {
  3344  002CF6  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3345  002CF8  D022               	goto	l7692
  3346  002CFA  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3347  002CFC  E104               	bnz	u8240
  3348  002CFE  0E06               	movlw	6
  3349  002D00  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3350  002D02  A0D8               	btfss	status,0,c
  3351  002D04  D01C               	goto	l7692
  3352  002D06                     u8240:
  3353                           
  3354                           ; BSR set to: 1
  3355  002D06  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3356  002D08  D006               	goto	u8250
  3357  002D0A  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3358  002D0C  E118               	bnz	l7692
  3359  002D0E  0E1E               	movlw	30
  3360  002D10  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3361  002D12  B0D8               	btfsc	status,0,c
  3362  002D14  D014               	goto	l7692
  3363  002D16                     u8250:
  3364                           
  3365                           ; BSR set to: 1
  3366                           ;d232.c: 264:    if (IO.BAL != DOWN) {
  3367  002D16  0E02               	movlw	2
  3368  002D18  19B8               	xorwf	(_IO+15)& (0+255),w,b
  3369  002D1A  B4D8               	btfsc	status,2,c
  3370  002D1C  D00C               	goto	l7688
  3371                           
  3372                           ; BSR set to: 1
  3373                           ;d232.c: 265:     IO.outbytes[1] = IO.outbytes[1] | 0x04;
  3374  002D1E  51AF               	movf	(_IO+6)& (0+255),w,b
  3375  002D20  0904               	iorlw	4
  3376  002D22  6FAF               	movwf	(_IO+6)& (0+255),b
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;d232.c: 266:     StartTimer(TMR_BAL, 500);
  3380  002D24  0E01               	movlw	1
  3381  002D26  6E07               	movwf	(StartTimer@count+1)^0,c
  3382  002D28  0EF4               	movlw	244
  3383  002D2A  6E06               	movwf	StartTimer@count^0,c
  3384  002D2C  0E07               	movlw	7
  3385  002D2E  EC01  F028         	call	_StartTimer
  3386                           
  3387                           ;d232.c: 267:     IO.score--;
  3388  002D32  0101               	movlb	1	; () banked
  3389  002D34  07BD               	decf	(_IO+20)& (0+255),f,b
  3390  002D36                     l7688:
  3391                           
  3392                           ; BSR set to: 1
  3393                           ;d232.c: 269:    IO.outbytes[2] = 0b00001000;
  3394  002D36  0E08               	movlw	8
  3395  002D38  6FB0               	movwf	(_IO+7)& (0+255),b
  3396                           
  3397                           ; BSR set to: 1
  3398                           ;d232.c: 270:    IO.BAL = DOWN;
  3399  002D3A  0E02               	movlw	2
  3400  002D3C  6FB8               	movwf	(_IO+15)& (0+255),b
  3401  002D3E                     l7692:
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;d232.c: 272:   if (otto_b1.result >= 30 && otto_b1.result < 80) {
  3405  002D3E  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3406  002D40  D012               	goto	l7698
  3407  002D42  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3408  002D44  E104               	bnz	u8270
  3409  002D46  0E1E               	movlw	30
  3410  002D48  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3411  002D4A  A0D8               	btfss	status,0,c
  3412  002D4C  D00C               	goto	l7698
  3413  002D4E                     u8270:
  3414                           
  3415                           ; BSR set to: 1
  3416  002D4E  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3417  002D50  D006               	goto	u8280
  3418  002D52  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3419  002D54  E108               	bnz	l7698
  3420  002D56  0E50               	movlw	80
  3421  002D58  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3422  002D5A  B0D8               	btfsc	status,0,c
  3423  002D5C  D004               	goto	l7698
  3424  002D5E                     u8280:
  3425                           
  3426                           ; BSR set to: 1
  3427                           ;d232.c: 273:    IO.outbytes[2] = 0b00000100;
  3428  002D5E  0E04               	movlw	4
  3429  002D60  6FB0               	movwf	(_IO+7)& (0+255),b
  3430                           
  3431                           ;d232.c: 274:    IO.BAL = DOWN;
  3432  002D62  0E02               	movlw	2
  3433  002D64  6FB8               	movwf	(_IO+15)& (0+255),b
  3434  002D66                     l7698:
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;d232.c: 276:   if (otto_b1.result >= 80 && otto_b1.result < 120) {
  3438  002D66  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3439  002D68  D012               	goto	l7704
  3440  002D6A  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3441  002D6C  E104               	bnz	u8290
  3442  002D6E  0E50               	movlw	80
  3443  002D70  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3444  002D72  A0D8               	btfss	status,0,c
  3445  002D74  D00C               	goto	l7704
  3446  002D76                     u8290:
  3447                           
  3448                           ; BSR set to: 1
  3449  002D76  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3450  002D78  D006               	goto	u8300
  3451  002D7A  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3452  002D7C  E108               	bnz	l7704
  3453  002D7E  0E78               	movlw	120
  3454  002D80  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3455  002D82  B0D8               	btfsc	status,0,c
  3456  002D84  D004               	goto	l7704
  3457  002D86                     u8300:
  3458                           
  3459                           ; BSR set to: 1
  3460                           ;d232.c: 277:    IO.outbytes[2] = 0b00000010;
  3461  002D86  0E02               	movlw	2
  3462  002D88  6FB0               	movwf	(_IO+7)& (0+255),b
  3463                           
  3464                           ;d232.c: 278:    IO.BAL = DOWN;
  3465  002D8A  0E02               	movlw	2
  3466  002D8C  6FB8               	movwf	(_IO+15)& (0+255),b
  3467  002D8E                     l7704:
  3468                           
  3469                           ; BSR set to: 1
  3470                           ;d232.c: 280:   if (otto_b1.result >= 120) {
  3471  002D8E  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3472  002D90  0012               	return	
  3473  002D92  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3474  002D94  E104               	bnz	u8310
  3475  002D96  0E78               	movlw	120
  3476  002D98  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3477  002D9A  A0D8               	btfss	status,0,c
  3478  002D9C  0012               	return	
  3479  002D9E                     u8310:
  3480                           
  3481                           ; BSR set to: 1
  3482                           ;d232.c: 281:    IO.outbytes[2] = 0b00000001;
  3483  002D9E  0E01               	movlw	1
  3484  002DA0  6FB0               	movwf	(_IO+7)& (0+255),b
  3485                           
  3486                           ;d232.c: 282:    IO.BAL = DOWN;
  3487  002DA2  0E02               	movlw	2
  3488  002DA4  6FB8               	movwf	(_IO+15)& (0+255),b
  3489  002DA6  0012               	return		;funcret
  3490  002DA8                     __end_of_led_lightshow:
  3491                           	opt callstack 0
  3492                           
  3493 ;; *************** function ___awdiv *****************
  3494 ;; Defined at:
  3495 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  dividend        2    5[COMRAM] int 
  3498 ;;  divisor         2    7[COMRAM] int 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  quotient        2   11[COMRAM] int 
  3501 ;;  sign            1   10[COMRAM] unsigned char 
  3502 ;;  counter         1    9[COMRAM] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    5[COMRAM] int 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 3E/1
  3509 ;;		On exit  : 3E/0
  3510 ;;		Unchanged: 3E/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3513 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3516 ;;Total ram usage:        8 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    4
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;;		_led_lightshow
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text10
  3528  004920                     __ptext10:
  3529                           	opt callstack 0
  3530  004920                     ___awdiv:
  3531                           	opt callstack 25
  3532                           
  3533                           ;incstack = 0
  3534  004920  0E00               	movlw	0
  3535  004922  6E0B               	movwf	___awdiv@sign^0,c
  3536  004924  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3537  004926  D006               	goto	l7348
  3538  004928  6C08               	negf	___awdiv@divisor^0,c
  3539  00492A  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  3540  00492C  B0D8               	btfsc	status,0,c
  3541  00492E  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  3542  004930  0E01               	movlw	1
  3543  004932  6E0B               	movwf	___awdiv@sign^0,c
  3544  004934                     l7348:
  3545  004934  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  3546  004936  D006               	goto	l7354
  3547  004938  6C06               	negf	___awdiv@dividend^0,c
  3548  00493A  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  3549  00493C  B0D8               	btfsc	status,0,c
  3550  00493E  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  3551  004940  0E01               	movlw	1
  3552  004942  1A0B               	xorwf	___awdiv@sign^0,f,c
  3553  004944                     l7354:
  3554  004944  0E00               	movlw	0
  3555  004946  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  3556  004948  0E00               	movlw	0
  3557  00494A  6E0C               	movwf	___awdiv@quotient^0,c
  3558  00494C  5008               	movf	___awdiv@divisor^0,w,c
  3559  00494E  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  3560  004950  B4D8               	btfsc	status,2,c
  3561  004952  D01C               	goto	l7376
  3562  004954  0E01               	movlw	1
  3563  004956  6E0A               	movwf	___awdiv@counter^0,c
  3564  004958  D004               	goto	l7362
  3565  00495A                     l7360:
  3566  00495A  90D8               	bcf	status,0,c
  3567  00495C  3608               	rlcf	___awdiv@divisor^0,f,c
  3568  00495E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  3569  004960  2A0A               	incf	___awdiv@counter^0,f,c
  3570  004962                     l7362:
  3571  004962  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3572  004964  D7FA               	goto	l7360
  3573  004966                     u7780:
  3574  004966  90D8               	bcf	status,0,c
  3575  004968  360C               	rlcf	___awdiv@quotient^0,f,c
  3576  00496A  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  3577  00496C  5008               	movf	___awdiv@divisor^0,w,c
  3578  00496E  5C06               	subwf	___awdiv@dividend^0,w,c
  3579  004970  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3580  004972  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  3581  004974  A0D8               	btfss	status,0,c
  3582  004976  D005               	goto	l7372
  3583  004978  5008               	movf	___awdiv@divisor^0,w,c
  3584  00497A  5E06               	subwf	___awdiv@dividend^0,f,c
  3585  00497C  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3586  00497E  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  3587  004980  800C               	bsf	___awdiv@quotient^0,0,c
  3588  004982                     l7372:
  3589  004982  90D8               	bcf	status,0,c
  3590  004984  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  3591  004986  3208               	rrcf	___awdiv@divisor^0,f,c
  3592  004988  2E0A               	decfsz	___awdiv@counter^0,f,c
  3593  00498A  D7ED               	goto	u7780
  3594  00498C                     l7376:
  3595  00498C  500B               	movf	___awdiv@sign^0,w,c
  3596  00498E  B4D8               	btfsc	status,2,c
  3597  004990  D004               	goto	l7380
  3598  004992  6C0C               	negf	___awdiv@quotient^0,c
  3599  004994  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  3600  004996  B0D8               	btfsc	status,0,c
  3601  004998  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  3602  00499A                     l7380:
  3603  00499A  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  3604  0049A0  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  3605  0049A6  0012               	return		;funcret
  3606  0049A8                     __end_of___awdiv:
  3607                           	opt callstack 0
  3608                           
  3609 ;; *************** function _init_display *****************
  3610 ;; Defined at:
  3611 ;;		line 27 in file "eadog.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 3F/1
  3622 ;;		On exit  : 3F/1
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    6
  3632 ;; This function calls:
  3633 ;;		_send_lcd_cmd
  3634 ;;		_send_lcd_cmd_long
  3635 ;;		_wdtdelay
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text11
  3642  004A26                     __ptext11:
  3643                           	opt callstack 0
  3644  004A26                     _init_display:
  3645                           	opt callstack 24
  3646                           
  3647                           ; BSR set to: 1
  3648                           
  3649                           ;incstack = 0
  3650                           ;eadog.c: 29:  do { LATCbits.LATC2 = 1; } while(0);
  3651  004A26  84BC               	bsf	188,2,c	;volatile
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;eadog.c: 30:  wdtdelay(350000);
  3655  004A28  0E30               	movlw	48
  3656  004A2A  6E06               	movwf	wdtdelay@delay^0,c
  3657  004A2C  0E57               	movlw	87
  3658  004A2E  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3659  004A30  0E05               	movlw	5
  3660  004A32  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3661  004A34  0E00               	movlw	0
  3662  004A36  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3663  004A38  EC5B  F027         	call	_wdtdelay	;wreg free
  3664                           
  3665                           ;eadog.c: 31:  send_lcd_cmd(0x39);
  3666  004A3C  0E39               	movlw	57
  3667  004A3E  EC78  F027         	call	_send_lcd_cmd
  3668                           
  3669                           ;eadog.c: 32:  send_lcd_cmd(0x1d);
  3670  004A42  0E1D               	movlw	29
  3671  004A44  EC78  F027         	call	_send_lcd_cmd
  3672                           
  3673                           ;eadog.c: 33:  send_lcd_cmd(0x50);
  3674  004A48  0E50               	movlw	80
  3675  004A4A  EC78  F027         	call	_send_lcd_cmd
  3676                           
  3677                           ;eadog.c: 34:  send_lcd_cmd(0x6c);
  3678  004A4E  0E6C               	movlw	108
  3679  004A50  EC78  F027         	call	_send_lcd_cmd
  3680                           
  3681                           ;eadog.c: 35:  send_lcd_cmd(0x76);
  3682  004A54  0E76               	movlw	118
  3683  004A56  EC78  F027         	call	_send_lcd_cmd
  3684                           
  3685                           ;eadog.c: 36:  send_lcd_cmd_long(0x38);
  3686  004A5A  0E38               	movlw	56
  3687  004A5C  ECA2  F028         	call	_send_lcd_cmd_long
  3688                           
  3689                           ;eadog.c: 37:  send_lcd_cmd(0x0f);
  3690  004A60  0E0F               	movlw	15
  3691  004A62  EC78  F027         	call	_send_lcd_cmd
  3692                           
  3693                           ;eadog.c: 38:  send_lcd_cmd_long(0x01);
  3694  004A66  0E01               	movlw	1
  3695  004A68  ECA2  F028         	call	_send_lcd_cmd_long
  3696                           
  3697                           ;eadog.c: 39:  send_lcd_cmd(0x02);
  3698  004A6C  0E02               	movlw	2
  3699  004A6E  EC78  F027         	call	_send_lcd_cmd
  3700                           
  3701                           ;eadog.c: 40:  send_lcd_cmd(0x06);
  3702  004A72  0E06               	movlw	6
  3703  004A74  EC78  F027         	call	_send_lcd_cmd
  3704                           
  3705                           ;eadog.c: 41:  wdtdelay(800);
  3706  004A78  0E20               	movlw	32
  3707  004A7A  6E06               	movwf	wdtdelay@delay^0,c
  3708  004A7C  0E03               	movlw	3
  3709  004A7E  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3710  004A80  0E00               	movlw	0
  3711  004A82  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3712  004A84  0E00               	movlw	0
  3713  004A86  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3714  004A88  EC5B  F027         	call	_wdtdelay	;wreg free
  3715                           
  3716                           ; BSR set to: 1
  3717  004A8C  0012               	return		;funcret
  3718  004A8E                     __end_of_init_display:
  3719                           	opt callstack 0
  3720                           
  3721 ;; *************** function _send_lcd_cmd_long *****************
  3722 ;; Defined at:
  3723 ;;		line 71 in file "eadog.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  cmd             1    wreg     const unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  cmd             1    9[COMRAM] const unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 3F/1
  3734 ;;		On exit  : 3F/1
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3741 ;;Total ram usage:        1 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    5
  3744 ;; This function calls:
  3745 ;;		_SPI1_Exchange8bit
  3746 ;;		_wdtdelay
  3747 ;; This function is called by:
  3748 ;;		_init_display
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text12
  3753  005144                     __ptext12:
  3754                           	opt callstack 0
  3755  005144                     _send_lcd_cmd_long:
  3756                           	opt callstack 24
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;incstack = 0
  3760                           ;send_lcd_cmd_long@cmd stored from wreg
  3761  005144  6E0A               	movwf	send_lcd_cmd_long@cmd^0,c
  3762                           
  3763                           ;eadog.c: 71: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 72: {;eadog.c: 7
      +                          3:  do { LATCbits.LATC1 = 0; } while(0);
  3764  005146  92BC               	bcf	188,1,c	;volatile
  3765                           
  3766                           ;eadog.c: 74:  do { LATCbits.LATC2 = 0; } while(0);
  3767  005148  94BC               	bcf	188,2,c	;volatile
  3768                           
  3769                           ;eadog.c: 75:  SPI1_Exchange8bit(cmd);
  3770  00514A  500A               	movf	send_lcd_cmd_long@cmd^0,w,c
  3771  00514C  ECA2  F029         	call	_SPI1_Exchange8bit
  3772                           
  3773                           ; BSR set to: 61
  3774                           ;eadog.c: 76:  wdtdelay(800);
  3775  005150  0E20               	movlw	32
  3776  005152  6E06               	movwf	wdtdelay@delay^0,c
  3777  005154  0E03               	movlw	3
  3778  005156  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3779  005158  0E00               	movlw	0
  3780  00515A  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3781  00515C  0E00               	movlw	0
  3782  00515E  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3783  005160  EC5B  F027         	call	_wdtdelay	;wreg free
  3784                           
  3785                           ; BSR set to: 1
  3786  005164  82BC               	bsf	188,1,c	;volatile
  3787                           
  3788                           ; BSR set to: 1
  3789  005166  0012               	return		;funcret
  3790  005168                     __end_of_send_lcd_cmd_long:
  3791                           	opt callstack 0
  3792                           
  3793 ;; *************** function _eaDogM_WriteCommand *****************
  3794 ;; Defined at:
  3795 ;;		line 85 in file "eadog.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  cmd             1    wreg     const unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  cmd             1   10[COMRAM] const unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 3F/1
  3806 ;;		On exit  : 3F/1
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3813 ;;Total ram usage:        1 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    6
  3816 ;; This function calls:
  3817 ;;		_send_lcd_cmd
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text13
  3824  0054CA                     __ptext13:
  3825                           	opt callstack 0
  3826  0054CA                     _eaDogM_WriteCommand:
  3827                           	opt callstack 24
  3828                           
  3829                           ; BSR set to: 1
  3830                           ;incstack = 0
  3831                           ;eaDogM_WriteCommand@cmd stored from wreg
  3832  0054CA  6E0B               	movwf	eaDogM_WriteCommand@cmd^0,c
  3833                           
  3834                           ;eadog.c: 85: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  s
      +                          end_lcd_cmd(cmd);
  3835  0054CC  500B               	movf	eaDogM_WriteCommand@cmd^0,w,c
  3836  0054CE  EC78  F027         	call	_send_lcd_cmd
  3837                           
  3838                           ; BSR set to: 1
  3839  0054D2  0012               	return		;funcret
  3840  0054D4                     __end_of_eaDogM_WriteCommand:
  3841                           	opt callstack 0
  3842                           
  3843 ;; *************** function _send_lcd_cmd *****************
  3844 ;; Defined at:
  3845 ;;		line 58 in file "eadog.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  cmd             1    wreg     const unsigned char 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  cmd             1    9[COMRAM] const unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 3F/1
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3863 ;;Total ram usage:        1 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    5
  3866 ;; This function calls:
  3867 ;;		_SPI1_Exchange8bit
  3868 ;;		_wdtdelay
  3869 ;; This function is called by:
  3870 ;;		_init_display
  3871 ;;		_eaDogM_WriteCommand
  3872 ;;		_eaDogM_WriteStringAtPos
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text14
  3877  004EF0                     __ptext14:
  3878                           	opt callstack 0
  3879  004EF0                     _send_lcd_cmd:
  3880                           	opt callstack 23
  3881                           
  3882                           ; BSR set to: 1
  3883                           ;incstack = 0
  3884                           ;send_lcd_cmd@cmd stored from wreg
  3885  004EF0  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  3886                           
  3887                           ;eadog.c: 58: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 59: {;eadog.c: 60:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  3888  004EF2  92BC               	bcf	188,1,c	;volatile
  3889                           
  3890                           ;eadog.c: 61:  do { LATCbits.LATC2 = 0; } while(0);
  3891  004EF4  94BC               	bcf	188,2,c	;volatile
  3892                           
  3893                           ;eadog.c: 62:  wdtdelay(10);
  3894  004EF6  0E0A               	movlw	10
  3895  004EF8  6E06               	movwf	wdtdelay@delay^0,c
  3896  004EFA  0E00               	movlw	0
  3897  004EFC  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3898  004EFE  0E00               	movlw	0
  3899  004F00  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3900  004F02  0E00               	movlw	0
  3901  004F04  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3902  004F06  EC5B  F027         	call	_wdtdelay	;wreg free
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;eadog.c: 63:  SPI1_Exchange8bit(cmd);
  3906  004F0A  500A               	movf	send_lcd_cmd@cmd^0,w,c
  3907  004F0C  ECA2  F029         	call	_SPI1_Exchange8bit
  3908                           
  3909                           ; BSR set to: 61
  3910                           ;eadog.c: 64:  wdtdelay(10);
  3911  004F10  0E0A               	movlw	10
  3912  004F12  6E06               	movwf	wdtdelay@delay^0,c
  3913  004F14  0E00               	movlw	0
  3914  004F16  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3915  004F18  0E00               	movlw	0
  3916  004F1A  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3917  004F1C  0E00               	movlw	0
  3918  004F1E  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3919  004F20  EC5B  F027         	call	_wdtdelay	;wreg free
  3920                           
  3921                           ; BSR set to: 1
  3922  004F24  82BC               	bsf	188,1,c	;volatile
  3923                           
  3924                           ; BSR set to: 1
  3925  004F26  0012               	return		;funcret
  3926  004F28                     __end_of_send_lcd_cmd:
  3927                           	opt callstack 0
  3928                           
  3929 ;; *************** function _wdtdelay *****************
  3930 ;; Defined at:
  3931 ;;		line 14 in file "eadog.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  delay           4    5[COMRAM] const unsigned long 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/1
  3942 ;;		On exit  : 3F/1
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3949 ;;Total ram usage:        4 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    4
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_init_display
  3956 ;;		_send_lcd_cmd
  3957 ;;		_send_lcd_cmd_long
  3958 ;;		_eaDogM_WriteString
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text15
  3963  004EB6                     __ptext15:
  3964                           	opt callstack 0
  3965  004EB6                     _wdtdelay:
  3966                           	opt callstack 23
  3967                           
  3968                           ;eadog.c: 14: void wdtdelay(const uint32_t delay);eadog.c: 15: {;eadog.c: 16:  static ui
      +                          nt32_t dcount;;eadog.c: 18:  for (dcount = 0; dcount <= delay; dcount++) {
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;incstack = 0
  3972  004EB6  0E00               	movlw	0
  3973  004EB8  0101               	movlb	1	; () banked
  3974  004EBA  6F62               	movwf	wdtdelay@dcount& (0+255),b
  3975  004EBC  0E00               	movlw	0
  3976  004EBE  6F63               	movwf	(wdtdelay@dcount+1)& (0+255),b
  3977  004EC0  0E00               	movlw	0
  3978  004EC2  6F64               	movwf	(wdtdelay@dcount+2)& (0+255),b
  3979  004EC4  0E00               	movlw	0
  3980  004EC6  6F65               	movwf	(wdtdelay@dcount+3)& (0+255),b
  3981  004EC8                     l1265:
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;eadog.c: 19:   __nop();
  3985  004EC8  F000               	nop	
  3986  004ECA  0004               	clrwdt		;# 
  3987                           
  3988                           ;eadog.c: 21:  };
  3989  004ECC  0E01               	movlw	1
  3990  004ECE  0101               	movlb	1	; () banked
  3991  004ED0  2762               	addwf	wdtdelay@dcount& (0+255),f,b
  3992  004ED2  0E00               	movlw	0
  3993  004ED4  2363               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  3994  004ED6  2364               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  3995  004ED8  2365               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  3996  004EDA  5162               	movf	wdtdelay@dcount& (0+255),w,b
  3997  004EDC  5C06               	subwf	wdtdelay@delay^0,w,c
  3998  004EDE  5163               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  3999  004EE0  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  4000  004EE2  5164               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  4001  004EE4  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  4002  004EE6  5165               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  4003  004EE8  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  4004  004EEA  A0D8               	btfss	status,0,c
  4005  004EEC  0012               	return	
  4006  004EEE  D7EC               	goto	l1265
  4007  004EF0                     __end_of_wdtdelay:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _SPI1_Exchange8bit *****************
  4011 ;; Defined at:
  4012 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  data            1    wreg     unsigned char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  data            1    5[COMRAM] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      unsigned char 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/1
  4023 ;;		On exit  : 3F/3D
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4030 ;;Total ram usage:        1 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_send_lcd_cmd
  4037 ;;		_send_lcd_cmd_long
  4038 ;;		_eaDogM_WriteString
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text16
  4043  005344                     __ptext16:
  4044                           	opt callstack 0
  4045  005344                     _SPI1_Exchange8bit:
  4046                           	opt callstack 23
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;incstack = 0
  4050                           ;SPI1_Exchange8bit@data stored from wreg
  4051  005344  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  4052                           
  4053                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4054  005346  0E01               	movlw	1
  4055  005348  013D               	movlb	61	; () banked
  4056  00534A  6F12               	movwf	18,b	;volatile
  4057                           
  4058                           ; BSR set to: 61
  4059                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4060  00534C  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  4061  005352                     l989:
  4062                           
  4063                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4064  005352  0139               	movlb	57	; () banked
  4065  005354  A9A2               	btfss	162,4,b	;volatile
  4066  005356  D7FD               	goto	l989
  4067                           
  4068                           ; BSR set to: 57
  4069                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4070  005358  013D               	movlb	61	; () banked
  4071  00535A  5110               	movf	16,w,b	;volatile
  4072                           
  4073                           ; BSR set to: 61
  4074  00535C  0012               	return		;funcret
  4075  00535E                     __end_of_SPI1_Exchange8bit:
  4076                           	opt callstack 0
  4077                           
  4078 ;; *************** function _SYSTEM_Initialize *****************
  4079 ;; Defined at:
  4080 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 3F/0
  4091 ;;		On exit  : 3F/3D
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    6
  4101 ;; This function calls:
  4102 ;;		_ADCC_Initialize
  4103 ;;		_FVR_Initialize
  4104 ;;		_INTERRUPT_Initialize
  4105 ;;		_OSCILLATOR_Initialize
  4106 ;;		_PIN_MANAGER_Initialize
  4107 ;;		_PMD_Initialize
  4108 ;;		_PWM8_Initialize
  4109 ;;		_SPI1_Initialize
  4110 ;;		_TMR2_Initialize
  4111 ;;		_TMR5_Initialize
  4112 ;;		_TMR6_Initialize
  4113 ;;		_UART1_Initialize
  4114 ;;		_UART2_Initialize
  4115 ;; This function is called by:
  4116 ;;		_main
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text17
  4121  004F96                     __ptext17:
  4122                           	opt callstack 0
  4123  004F96                     _SYSTEM_Initialize:
  4124                           	opt callstack 24
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  4128                           
  4129                           ; BSR set to: 61
  4130                           ;incstack = 0
  4131  004F96  EC77  F026         	call	_INTERRUPT_Initialize	;wreg free
  4132                           
  4133                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4134  004F9A  EC55  F029         	call	_PMD_Initialize	;wreg free
  4135                           
  4136                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4137  004F9E  EC06  F023         	call	_PIN_MANAGER_Initialize	;wreg free
  4138                           
  4139                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4140  004FA2  EC86  F029         	call	_OSCILLATOR_Initialize	;wreg free
  4141                           
  4142                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  4143  004FA6  EC6F  F02A         	call	_FVR_Initialize	;wreg free
  4144                           
  4145                           ; BSR set to: 62
  4146                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
  4147  004FAA  EC4C  F028         	call	_TMR6_Initialize	;wreg free
  4148                           
  4149                           ; BSR set to: 57
  4150                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  4151  004FAE  ECA9  F025         	call	_ADCC_Initialize	;wreg free
  4152                           
  4153                           ; BSR set to: 62
  4154                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
  4155  004FB2  ECC8  F029         	call	_PWM8_Initialize	;wreg free
  4156                           
  4157                           ; BSR set to: 63
  4158                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4159  004FB6  EC77  F029         	call	_TMR2_Initialize	;wreg free
  4160                           
  4161                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
  4162  004FBA  EC2D  F026         	call	_TMR5_Initialize	;wreg free
  4163                           
  4164                           ;mcc_generated_files/mcc.c: 62:     UART2_Initialize();
  4165  004FBE  ECB0  F022         	call	_UART2_Initialize	;wreg free
  4166                           
  4167                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
  4168  004FC2  ECA4  F021         	call	_UART1_Initialize	;wreg free
  4169                           
  4170                           ; BSR set to: 57
  4171                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
  4172  004FC6  ECBC  F029         	call	_SPI1_Initialize	;wreg free
  4173                           
  4174                           ; BSR set to: 61
  4175  004FCA  0012               	return		;funcret
  4176  004FCC                     __end_of_SYSTEM_Initialize:
  4177                           	opt callstack 0
  4178                           
  4179 ;; *************** function _UART2_Initialize *****************
  4180 ;; Defined at:
  4181 ;;		line 87 in file "mcc_generated_files/uart2.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 3F/39
  4192 ;;		On exit  : 3F/39
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    5
  4202 ;; This function calls:
  4203 ;;		_UART2_SetErrorHandler
  4204 ;;		_UART2_SetFramingErrorHandler
  4205 ;;		_UART2_SetOverrunErrorHandler
  4206 ;;		_UART2_SetRxInterruptHandler
  4207 ;;		_UART2_SetTxInterruptHandler
  4208 ;; This function is called by:
  4209 ;;		_SYSTEM_Initialize
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text18
  4214  004560                     __ptext18:
  4215                           	opt callstack 0
  4216  004560                     _UART2_Initialize:
  4217                           	opt callstack 24
  4218                           
  4219                           ; BSR set to: 57
  4220                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  4221                           
  4222                           ; BSR set to: 61
  4223                           ;incstack = 0
  4224  004560  9596               	bcf	150,2,b	;volatile
  4225                           
  4226                           ; BSR set to: 57
  4227                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  4228  004562  0E56               	movlw	low _UART2_Receive_ISR
  4229  004564  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  4230  004566  0E47               	movlw	high _UART2_Receive_ISR
  4231  004568  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4232  00456A  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  4233  00456C  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4234  00456E  ECDE  F029         	call	_UART2_SetRxInterruptHandler	;wreg free
  4235                           
  4236                           ; BSR set to: 57
  4237                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  4238  004572  9796               	bcf	150,3,b	;volatile
  4239                           
  4240                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  4241  004574  0E66               	movlw	low _UART2_Transmit_ISR
  4242  004576  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  4243  004578  0E50               	movlw	high _UART2_Transmit_ISR
  4244  00457A  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4245  00457C  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  4246  00457E  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4247  004580  ECD4  F029         	call	_UART2_SetTxInterruptHandler	;wreg free
  4248                           
  4249                           ; BSR set to: 57
  4250                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  4251  004584  0E00               	movlw	0
  4252  004586  013D               	movlb	61	; () banked
  4253  004588  6FD4               	movwf	212,b	;volatile
  4254                           
  4255                           ; BSR set to: 61
  4256                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  4257  00458A  0E00               	movlw	0
  4258  00458C  6FD6               	movwf	214,b	;volatile
  4259                           
  4260                           ; BSR set to: 61
  4261                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  4262  00458E  0E00               	movlw	0
  4263  004590  6FD8               	movwf	216,b	;volatile
  4264                           
  4265                           ; BSR set to: 61
  4266                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  4267  004592  0EB0               	movlw	176
  4268  004594  6FDA               	movwf	218,b	;volatile
  4269                           
  4270                           ; BSR set to: 61
  4271                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  4272  004596  0E80               	movlw	128
  4273  004598  6FDB               	movwf	219,b	;volatile
  4274                           
  4275                           ; BSR set to: 61
  4276                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  4277  00459A  0E00               	movlw	0
  4278  00459C  6FDC               	movwf	220,b	;volatile
  4279                           
  4280                           ; BSR set to: 61
  4281                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  4282  00459E  0E40               	movlw	64
  4283  0045A0  6FDD               	movwf	221,b	;volatile
  4284                           
  4285                           ; BSR set to: 61
  4286                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  4287  0045A2  0E03               	movlw	3
  4288  0045A4  6FDE               	movwf	222,b	;volatile
  4289                           
  4290                           ; BSR set to: 61
  4291                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  4292  0045A6  0E00               	movlw	0
  4293  0045A8  6FDF               	movwf	223,b	;volatile
  4294                           
  4295                           ; BSR set to: 61
  4296                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  4297  0045AA  0E00               	movlw	0
  4298  0045AC  6FE0               	movwf	224,b	;volatile
  4299                           
  4300                           ; BSR set to: 61
  4301                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  4302  0045AE  0E00               	movlw	0
  4303  0045B0  6FE1               	movwf	225,b	;volatile
  4304                           
  4305                           ; BSR set to: 61
  4306                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  4307  0045B2  0E00               	movlw	0
  4308  0045B4  6FE2               	movwf	226,b	;volatile
  4309                           
  4310                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  4311  0045B6  0E04               	movlw	low _UART2_DefaultFramingErrorHandler
  4312  0045B8  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  4313  0045BA  0E55               	movlw	high _UART2_DefaultFramingErrorHandler
  4314  0045BC  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  4315  0045BE  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  4316  0045C0  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  4317  0045C2  ECF2  F029         	call	_UART2_SetFramingErrorHandler	;wreg free
  4318                           
  4319                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  4320  0045C6  0E02               	movlw	low _UART2_DefaultOverrunErrorHandler
  4321  0045C8  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  4322  0045CA  0E55               	movlw	high _UART2_DefaultOverrunErrorHandler
  4323  0045CC  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4324  0045CE  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  4325  0045D0  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4326  0045D2  ECE8  F029         	call	_UART2_SetOverrunErrorHandler	;wreg free
  4327                           
  4328                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  4329  0045D6  0EF2               	movlw	low _UART2_DefaultErrorHandler
  4330  0045D8  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  4331  0045DA  0E54               	movlw	high _UART2_DefaultErrorHandler
  4332  0045DC  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  4333  0045DE  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  4334  0045E0  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  4335  0045E2  ECFC  F029         	call	_UART2_SetErrorHandler	;wreg free
  4336                           
  4337                           ; BSR set to: 61
  4338                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  4339  0045E6  0E00               	movlw	0
  4340  0045E8  0101               	movlb	1	; () banked
  4341  0045EA  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
  4342                           
  4343                           ; BSR set to: 1
  4344                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  4345  0045EC  0E00               	movlw	0
  4346  0045EE  0100               	movlb	0	; () banked
  4347  0045F0  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  4351  0045F2  0E00               	movlw	0
  4352  0045F4  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  4356  0045F6  0E08               	movlw	8
  4357  0045F8  6FA4               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  4361  0045FA  0E00               	movlw	0
  4362  0045FC  6E59               	movwf	_uart2RxHead^0,c	;volatile
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  4366  0045FE  0E00               	movlw	0
  4367  004600  6E58               	movwf	_uart2RxTail^0,c	;volatile
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  4371  004602  0E00               	movlw	0
  4372  004604  6FA3               	movwf	_uart2RxCount& (0+255),b	;volatile
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  4376  004606  0139               	movlb	57	; () banked
  4377  004608  8596               	bsf	150,2,b	;volatile
  4378                           
  4379                           ; BSR set to: 57
  4380  00460A  0012               	return		;funcret
  4381  00460C                     __end_of_UART2_Initialize:
  4382                           	opt callstack 0
  4383                           
  4384 ;; *************** function _UART2_SetTxInterruptHandler *****************
  4385 ;; Defined at:
  4386 ;;		line 324 in file "mcc_generated_files/uart2.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4389 ;;		 -> UART2_Transmit_ISR(1), 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0
  4396 ;; Tracked objects:
  4397 ;;		On entry : 3F/39
  4398 ;;		On exit  : 3F/39
  4399 ;;		Unchanged: 3E/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4405 ;;Total ram usage:        3 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    4
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_UART2_Initialize
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text19
  4416  0053A8                     __ptext19:
  4417                           	opt callstack 0
  4418  0053A8                     _UART2_SetTxInterruptHandler:
  4419                           	opt callstack 24
  4420                           
  4421                           ; BSR set to: 57
  4422                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  4423                           
  4424                           ; BSR set to: 57
  4425                           ;incstack = 0
  4426  0053A8  0060  F018  F184   	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  4427  0053AE  0060  F01C  F185   	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  4428  0053B4  0060  F020  F186   	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  4429                           
  4430                           ; BSR set to: 57
  4431  0053BA  0012               	return		;funcret
  4432  0053BC                     __end_of_UART2_SetTxInterruptHandler:
  4433                           	opt callstack 0
  4434                           
  4435 ;; *************** function _UART2_SetRxInterruptHandler *****************
  4436 ;; Defined at:
  4437 ;;		line 320 in file "mcc_generated_files/uart2.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4440 ;;		 -> UART2_Receive_ISR(1), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 3F/39
  4449 ;;		On exit  : 3F/39
  4450 ;;		Unchanged: 3E/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4452 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4456 ;;Total ram usage:        3 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    4
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_UART2_Initialize
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text20
  4467  0053BC                     __ptext20:
  4468                           	opt callstack 0
  4469  0053BC                     _UART2_SetRxInterruptHandler:
  4470                           	opt callstack 24
  4471                           
  4472                           ; BSR set to: 57
  4473                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  4474                           
  4475                           ; BSR set to: 57
  4476                           ;incstack = 0
  4477  0053BC  0060  F018  F187   	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  4478  0053C2  0060  F01C  F188   	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  4479  0053C8  0060  F020  F189   	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  4480                           
  4481                           ; BSR set to: 57
  4482  0053CE  0012               	return		;funcret
  4483  0053D0                     __end_of_UART2_SetRxInterruptHandler:
  4484                           	opt callstack 0
  4485                           
  4486 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  4487 ;; Defined at:
  4488 ;;		line 310 in file "mcc_generated_files/uart2.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4491 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0
  4498 ;; Tracked objects:
  4499 ;;		On entry : 3F/3D
  4500 ;;		On exit  : 3F/3D
  4501 ;;		Unchanged: 3E/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4507 ;;Total ram usage:        3 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    4
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_UART2_Initialize
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text21
  4518  0053D0                     __ptext21:
  4519                           	opt callstack 0
  4520  0053D0                     _UART2_SetOverrunErrorHandler:
  4521                           	opt callstack 24
  4522                           
  4523                           ; BSR set to: 61
  4524                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  4525                           
  4526                           ; BSR set to: 57
  4527                           ;incstack = 0
  4528  0053D0  0060  F018  F16F   	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  4529  0053D6  0060  F01C  F170   	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  4530  0053DC  0060  F020  F171   	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  4531                           
  4532                           ; BSR set to: 61
  4533  0053E2  0012               	return		;funcret
  4534  0053E4                     __end_of_UART2_SetOverrunErrorHandler:
  4535                           	opt callstack 0
  4536                           
  4537 ;; *************** function _UART2_SetFramingErrorHandler *****************
  4538 ;; Defined at:
  4539 ;;		line 306 in file "mcc_generated_files/uart2.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4542 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 3F/3D
  4551 ;;		On exit  : 3F/3D
  4552 ;;		Unchanged: 3E/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4554 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4557 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4558 ;;Total ram usage:        3 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    4
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_UART2_Initialize
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text22
  4569  0053E4                     __ptext22:
  4570                           	opt callstack 0
  4571  0053E4                     _UART2_SetFramingErrorHandler:
  4572                           	opt callstack 24
  4573                           
  4574                           ; BSR set to: 61
  4575                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  4576                           
  4577                           ; BSR set to: 61
  4578                           ;incstack = 0
  4579  0053E4  0060  F018  F172   	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  4580  0053EA  0060  F01C  F173   	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  4581  0053F0  0060  F020  F174   	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  4582                           
  4583                           ; BSR set to: 61
  4584  0053F6  0012               	return		;funcret
  4585  0053F8                     __end_of_UART2_SetFramingErrorHandler:
  4586                           	opt callstack 0
  4587                           
  4588 ;; *************** function _UART2_SetErrorHandler *****************
  4589 ;; Defined at:
  4590 ;;		line 314 in file "mcc_generated_files/uart2.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4593 ;;		 -> UART2_DefaultErrorHandler(1), 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 3F/3D
  4602 ;;		On exit  : 3F/3D
  4603 ;;		Unchanged: 3E/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4605 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4609 ;;Total ram usage:        3 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    4
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_UART2_Initialize
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text23
  4620  0053F8                     __ptext23:
  4621                           	opt callstack 0
  4622  0053F8                     _UART2_SetErrorHandler:
  4623                           	opt callstack 24
  4624                           
  4625                           ; BSR set to: 61
  4626                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  4627                           
  4628                           ; BSR set to: 61
  4629                           ;incstack = 0
  4630  0053F8  0060  F018  F16C   	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  4631  0053FE  0060  F01C  F16D   	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  4632  005404  0060  F020  F16E   	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  4633                           
  4634                           ; BSR set to: 61
  4635  00540A  0012               	return		;funcret
  4636  00540C                     __end_of_UART2_SetErrorHandler:
  4637                           	opt callstack 0
  4638                           
  4639 ;; *************** function _UART1_Initialize *****************
  4640 ;; Defined at:
  4641 ;;		line 87 in file "mcc_generated_files/uart1.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 3F/39
  4652 ;;		On exit  : 3F/39
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    5
  4662 ;; This function calls:
  4663 ;;		_UART1_SetErrorHandler
  4664 ;;		_UART1_SetFramingErrorHandler
  4665 ;;		_UART1_SetOverrunErrorHandler
  4666 ;;		_UART1_SetRxInterruptHandler
  4667 ;;		_UART1_SetTxInterruptHandler
  4668 ;; This function is called by:
  4669 ;;		_SYSTEM_Initialize
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text24
  4674  004348                     __ptext24:
  4675                           	opt callstack 0
  4676  004348                     _UART1_Initialize:
  4677                           	opt callstack 24
  4678                           
  4679                           ; BSR set to: 57
  4680                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  4681                           
  4682                           ; BSR set to: 61
  4683                           ;incstack = 0
  4684  004348  9793               	bcf	147,3,b	;volatile
  4685                           
  4686                           ; BSR set to: 57
  4687                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  4688  00434A  0EB8               	movlw	low _UART1_Receive_ISR
  4689  00434C  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  4690  00434E  0E46               	movlw	high _UART1_Receive_ISR
  4691  004350  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4692  004352  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  4693  004354  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4694  004356  EC10  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
  4695                           
  4696                           ; BSR set to: 57
  4697                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  4698  00435A  9993               	bcf	147,4,b	;volatile
  4699                           
  4700                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  4701  00435C  0E34               	movlw	low _UART1_Transmit_ISR
  4702  00435E  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  4703  004360  0E50               	movlw	high _UART1_Transmit_ISR
  4704  004362  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4705  004364  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  4706  004366  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4707  004368  EC06  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
  4708                           
  4709                           ; BSR set to: 57
  4710                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  4711  00436C  0E00               	movlw	0
  4712  00436E  013D               	movlb	61	; () banked
  4713  004370  6FEC               	movwf	236,b	;volatile
  4714                           
  4715                           ; BSR set to: 61
  4716                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  4717  004372  0E00               	movlw	0
  4718  004374  6FED               	movwf	237,b	;volatile
  4719                           
  4720                           ; BSR set to: 61
  4721                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  4722  004376  0E00               	movlw	0
  4723  004378  6FEE               	movwf	238,b	;volatile
  4724                           
  4725                           ; BSR set to: 61
  4726                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  4727  00437A  0E00               	movlw	0
  4728  00437C  6FEF               	movwf	239,b	;volatile
  4729                           
  4730                           ; BSR set to: 61
  4731                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  4732  00437E  0E00               	movlw	0
  4733  004380  6FF0               	movwf	240,b	;volatile
  4734                           
  4735                           ; BSR set to: 61
  4736                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  4737  004382  0E00               	movlw	0
  4738  004384  6FF1               	movwf	241,b	;volatile
  4739                           
  4740                           ; BSR set to: 61
  4741                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  4742  004386  0E90               	movlw	144
  4743  004388  6FF2               	movwf	242,b	;volatile
  4744                           
  4745                           ; BSR set to: 61
  4746                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  4747  00438A  0E80               	movlw	128
  4748  00438C  6FF3               	movwf	243,b	;volatile
  4749                           
  4750                           ; BSR set to: 61
  4751                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  4752  00438E  0E00               	movlw	0
  4753  004390  6FF4               	movwf	244,b	;volatile
  4754                           
  4755                           ; BSR set to: 61
  4756                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  4757  004392  0E40               	movlw	64
  4758  004394  6FF5               	movwf	245,b	;volatile
  4759                           
  4760                           ; BSR set to: 61
  4761                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  4762  004396  0E03               	movlw	3
  4763  004398  6FF6               	movwf	246,b	;volatile
  4764                           
  4765                           ; BSR set to: 61
  4766                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  4767  00439A  0E00               	movlw	0
  4768  00439C  6FF7               	movwf	247,b	;volatile
  4769                           
  4770                           ; BSR set to: 61
  4771                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  4772  00439E  0E00               	movlw	0
  4773  0043A0  6FF8               	movwf	248,b	;volatile
  4774                           
  4775                           ; BSR set to: 61
  4776                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  4777  0043A2  0E00               	movlw	0
  4778  0043A4  6FF9               	movwf	249,b	;volatile
  4779                           
  4780                           ; BSR set to: 61
  4781                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  4782  0043A6  0E00               	movlw	0
  4783  0043A8  6FFA               	movwf	250,b	;volatile
  4784                           
  4785                           ; BSR set to: 61
  4786                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  4787  0043AA  0E00               	movlw	low _UART1_DefaultFramingErrorHandler
  4788  0043AC  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  4789  0043AE  0E55               	movlw	high _UART1_DefaultFramingErrorHandler
  4790  0043B0  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4791  0043B2  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  4792  0043B4  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  4793  0043B6  EC24  F02A         	call	_UART1_SetFramingErrorHandler	;wreg free
  4794                           
  4795                           ; BSR set to: 61
  4796                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  4797  0043BA  0EFE               	movlw	low _UART1_DefaultOverrunErrorHandler
  4798  0043BC  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  4799  0043BE  0E54               	movlw	high _UART1_DefaultOverrunErrorHandler
  4800  0043C0  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4801  0043C2  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  4802  0043C4  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4803  0043C6  EC1A  F02A         	call	_UART1_SetOverrunErrorHandler	;wreg free
  4804                           
  4805                           ; BSR set to: 61
  4806                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  4807  0043CA  0EEC               	movlw	low _UART1_DefaultErrorHandler
  4808  0043CC  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  4809  0043CE  0E54               	movlw	high _UART1_DefaultErrorHandler
  4810  0043D0  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  4811  0043D2  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  4812  0043D4  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  4813  0043D6  EC2E  F02A         	call	_UART1_SetErrorHandler	;wreg free
  4814                           
  4815                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  4816  0043DA  0E00               	movlw	0
  4817  0043DC  0101               	movlb	1	; () banked
  4818  0043DE  6F95               	movwf	_uart1RxLastError& (0+255),b	;volatile
  4819                           
  4820                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  4821  0043E0  0E00               	movlw	0
  4822  0043E2  0100               	movlb	0	; () banked
  4823  0043E4  6FAB               	movwf	_uart1TxHead& (0+255),b	;volatile
  4824                           
  4825                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  4826  0043E6  0E00               	movlw	0
  4827  0043E8  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
  4828                           
  4829                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  4830  0043EA  0E08               	movlw	8
  4831  0043EC  6FA9               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  4832                           
  4833                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  4834  0043EE  0E00               	movlw	0
  4835  0043F0  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  4836                           
  4837                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  4838  0043F2  0E00               	movlw	0
  4839  0043F4  6FA8               	movwf	_uart1RxTail& (0+255),b	;volatile
  4840                           
  4841                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  4842  0043F6  0E00               	movlw	0
  4843  0043F8  6FA7               	movwf	_uart1RxCount& (0+255),b	;volatile
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  4847  0043FA  0139               	movlb	57	; () banked
  4848  0043FC  8793               	bsf	147,3,b	;volatile
  4849                           
  4850                           ; BSR set to: 57
  4851  0043FE  0012               	return		;funcret
  4852  004400                     __end_of_UART1_Initialize:
  4853                           	opt callstack 0
  4854                           
  4855 ;; *************** function _UART1_SetTxInterruptHandler *****************
  4856 ;; Defined at:
  4857 ;;		line 323 in file "mcc_generated_files/uart1.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4860 ;;		 -> UART1_Transmit_ISR(1), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0
  4867 ;; Tracked objects:
  4868 ;;		On entry : 3F/39
  4869 ;;		On exit  : 3F/39
  4870 ;;		Unchanged: 3E/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4872 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4875 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4876 ;;Total ram usage:        3 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    4
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_UART1_Initialize
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text25
  4887  00540C                     __ptext25:
  4888                           	opt callstack 0
  4889  00540C                     _UART1_SetTxInterruptHandler:
  4890                           	opt callstack 24
  4891                           
  4892                           ; BSR set to: 57
  4893                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  4894                           
  4895                           ; BSR set to: 57
  4896                           ;incstack = 0
  4897  00540C  0060  F018  F17E   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  4898  005412  0060  F01C  F17F   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  4899  005418  0060  F020  F180   	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  4900                           
  4901                           ; BSR set to: 57
  4902  00541E  0012               	return		;funcret
  4903  005420                     __end_of_UART1_SetTxInterruptHandler:
  4904                           	opt callstack 0
  4905                           
  4906 ;; *************** function _UART1_SetRxInterruptHandler *****************
  4907 ;; Defined at:
  4908 ;;		line 319 in file "mcc_generated_files/uart1.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4911 ;;		 -> UART1_Receive_ISR(1), 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0
  4918 ;; Tracked objects:
  4919 ;;		On entry : 3F/39
  4920 ;;		On exit  : 3F/39
  4921 ;;		Unchanged: 3E/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4923 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4927 ;;Total ram usage:        3 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    4
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_UART1_Initialize
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text26
  4938  005420                     __ptext26:
  4939                           	opt callstack 0
  4940  005420                     _UART1_SetRxInterruptHandler:
  4941                           	opt callstack 24
  4942                           
  4943                           ; BSR set to: 57
  4944                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  4945                           
  4946                           ; BSR set to: 57
  4947                           ;incstack = 0
  4948  005420  0060  F018  F181   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  4949  005426  0060  F01C  F182   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  4950  00542C  0060  F020  F183   	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  4951                           
  4952                           ; BSR set to: 57
  4953  005432  0012               	return		;funcret
  4954  005434                     __end_of_UART1_SetRxInterruptHandler:
  4955                           	opt callstack 0
  4956                           
  4957 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  4958 ;; Defined at:
  4959 ;;		line 309 in file "mcc_generated_files/uart1.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4962 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 3F/3D
  4971 ;;		On exit  : 3F/3D
  4972 ;;		Unchanged: 3E/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4974 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4978 ;;Total ram usage:        3 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    4
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_UART1_Initialize
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text27
  4989  005434                     __ptext27:
  4990                           	opt callstack 0
  4991  005434                     _UART1_SetOverrunErrorHandler:
  4992                           	opt callstack 24
  4993                           
  4994                           ; BSR set to: 61
  4995                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  4996                           
  4997                           ; BSR set to: 57
  4998                           ;incstack = 0
  4999  005434  0060  F018  F178   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  5000  00543A  0060  F01C  F179   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  5001  005440  0060  F020  F17A   	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  5002                           
  5003                           ; BSR set to: 61
  5004  005446  0012               	return		;funcret
  5005  005448                     __end_of_UART1_SetOverrunErrorHandler:
  5006                           	opt callstack 0
  5007                           
  5008 ;; *************** function _UART1_SetFramingErrorHandler *****************
  5009 ;; Defined at:
  5010 ;;		line 305 in file "mcc_generated_files/uart1.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5013 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 3F/3D
  5022 ;;		On exit  : 3F/3D
  5023 ;;		Unchanged: 3E/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5025 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5028 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5029 ;;Total ram usage:        3 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    4
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_UART1_Initialize
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text28
  5040  005448                     __ptext28:
  5041                           	opt callstack 0
  5042  005448                     _UART1_SetFramingErrorHandler:
  5043                           	opt callstack 24
  5044                           
  5045                           ; BSR set to: 61
  5046                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  5047                           
  5048                           ; BSR set to: 61
  5049                           ;incstack = 0
  5050  005448  0060  F018  F17B   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  5051  00544E  0060  F01C  F17C   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  5052  005454  0060  F020  F17D   	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  5053                           
  5054                           ; BSR set to: 61
  5055  00545A  0012               	return		;funcret
  5056  00545C                     __end_of_UART1_SetFramingErrorHandler:
  5057                           	opt callstack 0
  5058                           
  5059 ;; *************** function _UART1_SetErrorHandler *****************
  5060 ;; Defined at:
  5061 ;;		line 313 in file "mcc_generated_files/uart1.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5064 ;;		 -> UART1_DefaultErrorHandler(1), 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 3F/3D
  5073 ;;		On exit  : 3F/3D
  5074 ;;		Unchanged: 3E/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5076 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5080 ;;Total ram usage:        3 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    4
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_UART1_Initialize
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text29
  5091  00545C                     __ptext29:
  5092                           	opt callstack 0
  5093  00545C                     _UART1_SetErrorHandler:
  5094                           	opt callstack 24
  5095                           
  5096                           ; BSR set to: 61
  5097                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  5098                           
  5099                           ; BSR set to: 61
  5100                           ;incstack = 0
  5101  00545C  0060  F018  F175   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  5102  005462  0060  F01C  F176   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  5103  005468  0060  F020  F177   	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  5104                           
  5105                           ; BSR set to: 61
  5106  00546E  0012               	return		;funcret
  5107  005470                     __end_of_UART1_SetErrorHandler:
  5108                           	opt callstack 0
  5109                           
  5110 ;; *************** function _TMR6_Initialize *****************
  5111 ;; Defined at:
  5112 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 3F/3E
  5123 ;;		On exit  : 3F/39
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5130 ;;Total ram usage:        0 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    5
  5133 ;; This function calls:
  5134 ;;		_TMR6_SetInterruptHandler
  5135 ;; This function is called by:
  5136 ;;		_SYSTEM_Initialize
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text30
  5141  005098                     __ptext30:
  5142                           	opt callstack 0
  5143  005098                     _TMR6_Initialize:
  5144                           	opt callstack 24
  5145                           
  5146                           ; BSR set to: 62
  5147                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  5148                           
  5149                           ; BSR set to: 61
  5150                           ;incstack = 0
  5151  005098  0E01               	movlw	1
  5152  00509A  6E96               	movwf	150,c	;volatile
  5153                           
  5154                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  5155  00509C  0E00               	movlw	0
  5156  00509E  6E95               	movwf	149,c	;volatile
  5157                           
  5158                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  5159  0050A0  0E00               	movlw	0
  5160  0050A2  6E97               	movwf	151,c	;volatile
  5161                           
  5162                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  5163  0050A4  0E03               	movlw	3
  5164  0050A6  6E93               	movwf	147,c	;volatile
  5165                           
  5166                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  5167  0050A8  0E00               	movlw	0
  5168  0050AA  6E92               	movwf	146,c	;volatile
  5169                           
  5170                           ; BSR set to: 62
  5171                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  5172  0050AC  0139               	movlb	57	; () banked
  5173  0050AE  91A9               	bcf	169,0,b	;volatile
  5174                           
  5175                           ; BSR set to: 57
  5176                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  5177  0050B0  8199               	bsf	153,0,b	;volatile
  5178                           
  5179                           ; BSR set to: 57
  5180                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  5181  0050B2  0E7A               	movlw	low _TMR6_DefaultInterruptHandler
  5182  0050B4  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  5183  0050B6  0E4E               	movlw	high _TMR6_DefaultInterruptHandler
  5184  0050B8  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  5185  0050BA  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  5186  0050BC  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  5187  0050BE  EC38  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
  5188                           
  5189                           ; BSR set to: 57
  5190                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  5191  0050C2  6894               	setf	148,c	;volatile
  5192                           
  5193                           ; BSR set to: 57
  5194  0050C4  0012               	return		;funcret
  5195  0050C6                     __end_of_TMR6_Initialize:
  5196                           	opt callstack 0
  5197                           
  5198 ;; *************** function _TMR6_SetInterruptHandler *****************
  5199 ;; Defined at:
  5200 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5203 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 3F/39
  5212 ;;		On exit  : 3F/39
  5213 ;;		Unchanged: 3E/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5215 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5218 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5219 ;;Total ram usage:        3 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    4
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_TMR6_Initialize
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text31
  5230  005470                     __ptext31:
  5231                           	opt callstack 0
  5232  005470                     _TMR6_SetInterruptHandler:
  5233                           	opt callstack 24
  5234                           
  5235                           ; BSR set to: 57
  5236                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  5237                           
  5238                           ; BSR set to: 57
  5239                           ;incstack = 0
  5240  005470  0060  F018  F169   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  5241  005476  0060  F01C  F16A   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  5242  00547C  0060  F020  F16B   	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  5243                           
  5244                           ; BSR set to: 57
  5245  005482  0012               	return		;funcret
  5246  005484                     __end_of_TMR6_SetInterruptHandler:
  5247                           	opt callstack 0
  5248                           
  5249 ;; *************** function _TMR5_Initialize *****************
  5250 ;; Defined at:
  5251 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 3F/39
  5262 ;;		On exit  : 3F/39
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5269 ;;Total ram usage:        2 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    5
  5272 ;; This function calls:
  5273 ;;		_TMR5_SetInterruptHandler
  5274 ;; This function is called by:
  5275 ;;		_SYSTEM_Initialize
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text32
  5280  004C5A                     __ptext32:
  5281                           	opt callstack 0
  5282  004C5A                     _TMR5_Initialize:
  5283                           	opt callstack 24
  5284                           
  5285                           ; BSR set to: 57
  5286                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  5287                           
  5288                           ; BSR set to: 57
  5289                           ;incstack = 0
  5290  004C5A  0E00               	movlw	0
  5291  004C5C  6E9B               	movwf	155,c	;volatile
  5292                           
  5293                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  5294  004C5E  0E00               	movlw	0
  5295  004C60  6E9C               	movwf	156,c	;volatile
  5296                           
  5297                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  5298  004C62  0E01               	movlw	1
  5299  004C64  6E9D               	movwf	157,c	;volatile
  5300                           
  5301                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  5302  004C66  0E63               	movlw	99
  5303  004C68  6E99               	movwf	153,c	;volatile
  5304                           
  5305                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  5306  004C6A  0EC0               	movlw	192
  5307  004C6C  6E98               	movwf	152,c	;volatile
  5308                           
  5309                           ; BSR set to: 57
  5310                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  5311  004C6E  5098               	movf	152,w,c	;volatile
  5312  004C70  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  5313  004C76  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  5314  004C78  0060  F024  F00A   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  5315  004C7E  6A09               	clrf	??_TMR5_Initialize^0,c
  5316  004C80  1009               	iorwf	??_TMR5_Initialize^0,w,c
  5317  004C82  0101               	movlb	1	; () banked
  5318  004C84  6F92               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  5319  004C86  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  5320  004C88  6F93               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  5321                           
  5322                           ; BSR set to: 1
  5323                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  5324  004C8A  0139               	movlb	57	; () banked
  5325  004C8C  9DA8               	bcf	168,6,b	;volatile
  5326                           
  5327                           ; BSR set to: 57
  5328                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  5329  004C8E  8D98               	bsf	152,6,b	;volatile
  5330                           
  5331                           ; BSR set to: 57
  5332                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  5333  004C90  0E5E               	movlw	low _TMR5_DefaultInterruptHandler
  5334  004C92  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  5335  004C94  0E53               	movlw	high _TMR5_DefaultInterruptHandler
  5336  004C96  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  5337  004C98  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  5338  004C9A  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  5339  004C9C  EC42  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
  5340                           
  5341                           ; BSR set to: 57
  5342                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  5343  004CA0  0E31               	movlw	49
  5344  004CA2  6E9A               	movwf	154,c	;volatile
  5345                           
  5346                           ; BSR set to: 57
  5347  004CA4  0012               	return		;funcret
  5348  004CA6                     __end_of_TMR5_Initialize:
  5349                           	opt callstack 0
  5350                           
  5351 ;; *************** function _TMR5_SetInterruptHandler *****************
  5352 ;; Defined at:
  5353 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5356 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 3F/39
  5365 ;;		On exit  : 3F/39
  5366 ;;		Unchanged: 3E/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5368 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5372 ;;Total ram usage:        3 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    4
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_TMR5_Initialize
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text33
  5383  005484                     __ptext33:
  5384                           	opt callstack 0
  5385  005484                     _TMR5_SetInterruptHandler:
  5386                           	opt callstack 24
  5387                           
  5388                           ; BSR set to: 57
  5389                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  5390                           
  5391                           ; BSR set to: 57
  5392                           ;incstack = 0
  5393  005484  0060  F018  F166   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  5394  00548A  0060  F01C  F167   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  5395  005490  0060  F020  F168   	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  5396                           
  5397                           ; BSR set to: 57
  5398  005496  0012               	return		;funcret
  5399  005498                     __end_of_TMR5_SetInterruptHandler:
  5400                           	opt callstack 0
  5401                           
  5402 ;; *************** function _TMR2_Initialize *****************
  5403 ;; Defined at:
  5404 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2
  5413 ;; Tracked objects:
  5414 ;;		On entry : 3F/3F
  5415 ;;		On exit  : 3F/39
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    4
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_SYSTEM_Initialize
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text34
  5433  0052EE                     __ptext34:
  5434                           	opt callstack 0
  5435  0052EE                     _TMR2_Initialize:
  5436                           	opt callstack 25
  5437                           
  5438                           ; BSR set to: 63
  5439                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  5440                           
  5441                           ; BSR set to: 57
  5442                           ;incstack = 0
  5443  0052EE  0E01               	movlw	1
  5444  0052F0  6EAE               	movwf	174,c	;volatile
  5445                           
  5446                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5447  0052F2  0E00               	movlw	0
  5448  0052F4  6EAD               	movwf	173,c	;volatile
  5449                           
  5450                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5451  0052F6  0E00               	movlw	0
  5452  0052F8  6EAF               	movwf	175,c	;volatile
  5453                           
  5454                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  5455  0052FA  0E63               	movlw	99
  5456  0052FC  6EAB               	movwf	171,c	;volatile
  5457                           
  5458                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5459  0052FE  0E00               	movlw	0
  5460  005300  6EAA               	movwf	170,c	;volatile
  5461                           
  5462                           ; BSR set to: 63
  5463                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  5464  005302  0139               	movlb	57	; () banked
  5465  005304  95A4               	bcf	164,2,b	;volatile
  5466                           
  5467                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  5468  005306  0EC0               	movlw	192
  5469  005308  6EAC               	movwf	172,c	;volatile
  5470                           
  5471                           ; BSR set to: 57
  5472  00530A  0012               	return		;funcret
  5473  00530C                     __end_of_TMR2_Initialize:
  5474                           	opt callstack 0
  5475                           
  5476 ;; *************** function _SPI1_Initialize *****************
  5477 ;; Defined at:
  5478 ;;		line 64 in file "mcc_generated_files/spi1.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;		None
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2
  5487 ;; Tracked objects:
  5488 ;;		On entry : 3F/39
  5489 ;;		On exit  : 3F/3D
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5496 ;;Total ram usage:        0 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    4
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_SYSTEM_Initialize
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text35
  5507  005378                     __ptext35:
  5508                           	opt callstack 0
  5509  005378                     _SPI1_Initialize:
  5510                           	opt callstack 25
  5511                           
  5512                           ; BSR set to: 57
  5513                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
  5514                           
  5515                           ; BSR set to: 57
  5516                           ;incstack = 0
  5517  005378  0E40               	movlw	64
  5518  00537A  013D               	movlb	61	; () banked
  5519  00537C  6F15               	movwf	21,b	;volatile
  5520                           
  5521                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  5522  00537E  0E03               	movlw	3
  5523  005380  6F16               	movwf	22,b	;volatile
  5524                           
  5525                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x0F;
  5526  005382  0E0F               	movlw	15
  5527  005384  6F19               	movwf	25,b	;volatile
  5528                           
  5529                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  5530  005386  0E00               	movlw	0
  5531  005388  6F1C               	movwf	28,b	;volatile
  5532                           
  5533                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  5534  00538A  0E82               	movlw	130
  5535  00538C  6F14               	movwf	20,b	;volatile
  5536                           
  5537                           ; BSR set to: 61
  5538  00538E  0012               	return		;funcret
  5539  005390                     __end_of_SPI1_Initialize:
  5540                           	opt callstack 0
  5541                           
  5542 ;; *************** function _PWM8_Initialize *****************
  5543 ;; Defined at:
  5544 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2
  5553 ;; Tracked objects:
  5554 ;;		On entry : 3F/3E
  5555 ;;		On exit  : 3F/3F
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    4
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_SYSTEM_Initialize
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text36
  5573  005390                     __ptext36:
  5574                           	opt callstack 0
  5575  005390                     _PWM8_Initialize:
  5576                           	opt callstack 25
  5577                           
  5578                           ; BSR set to: 62
  5579                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  5580                           
  5581                           ; BSR set to: 61
  5582                           ;incstack = 0
  5583  005390  0E80               	movlw	128
  5584  005392  6E62               	movwf	98,c	;volatile
  5585                           
  5586                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  5587  005394  0E31               	movlw	49
  5588  005396  6E61               	movwf	97,c	;volatile
  5589                           
  5590                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  5591  005398  0EC0               	movlw	192
  5592  00539A  6E60               	movwf	96,c	;volatile
  5593                           
  5594                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  5595  00539C  013F               	movlb	63	; () banked
  5596  00539E  515F               	movf	95,w,b	;volatile
  5597  0053A0  0B3F               	andlw	-193
  5598  0053A2  0940               	iorlw	64
  5599  0053A4  6F5F               	movwf	95,b	;volatile
  5600                           
  5601                           ; BSR set to: 63
  5602  0053A6  0012               	return		;funcret
  5603  0053A8                     __end_of_PWM8_Initialize:
  5604                           	opt callstack 0
  5605                           
  5606 ;; *************** function _PMD_Initialize *****************
  5607 ;; Defined at:
  5608 ;;		line 85 in file "mcc_generated_files/mcc.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;		None
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2
  5617 ;; Tracked objects:
  5618 ;;		On entry : 3F/39
  5619 ;;		On exit  : 3F/39
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5626 ;;Total ram usage:        0 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    4
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_SYSTEM_Initialize
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text37
  5637  0052AA                     __ptext37:
  5638                           	opt callstack 0
  5639  0052AA                     _PMD_Initialize:
  5640                           	opt callstack 25
  5641                           
  5642                           ; BSR set to: 57
  5643                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
  5644                           
  5645                           ; BSR set to: 63
  5646                           ;incstack = 0
  5647  0052AA  0E00               	movlw	0
  5648  0052AC  6FC0               	movwf	192,b	;volatile
  5649                           
  5650                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
  5651  0052AE  0E00               	movlw	0
  5652  0052B0  6FC1               	movwf	193,b	;volatile
  5653                           
  5654                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
  5655  0052B2  0E00               	movlw	0
  5656  0052B4  6FC2               	movwf	194,b	;volatile
  5657                           
  5658                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
  5659  0052B6  0E00               	movlw	0
  5660  0052B8  6FC3               	movwf	195,b	;volatile
  5661                           
  5662                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
  5663  0052BA  0E00               	movlw	0
  5664  0052BC  6FC4               	movwf	196,b	;volatile
  5665                           
  5666                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
  5667  0052BE  0E00               	movlw	0
  5668  0052C0  6FC5               	movwf	197,b	;volatile
  5669                           
  5670                           ;mcc_generated_files/mcc.c: 100:     PMD6 = 0x00;
  5671  0052C2  0E00               	movlw	0
  5672  0052C4  6FC6               	movwf	198,b	;volatile
  5673                           
  5674                           ;mcc_generated_files/mcc.c: 102:     PMD7 = 0x00;
  5675  0052C6  0E00               	movlw	0
  5676  0052C8  6FC7               	movwf	199,b	;volatile
  5677                           
  5678                           ; BSR set to: 57
  5679  0052CA  0012               	return		;funcret
  5680  0052CC                     __end_of_PMD_Initialize:
  5681                           	opt callstack 0
  5682                           
  5683 ;; *************** function _PIN_MANAGER_Initialize *****************
  5684 ;; Defined at:
  5685 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2
  5694 ;; Tracked objects:
  5695 ;;		On entry : 3F/39
  5696 ;;		On exit  : 3F/3A
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    4
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_SYSTEM_Initialize
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text38
  5714  00460C                     __ptext38:
  5715                           	opt callstack 0
  5716  00460C                     _PIN_MANAGER_Initialize:
  5717                           	opt callstack 25
  5718                           
  5719                           ; BSR set to: 57
  5720                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  5721                           
  5722                           ; BSR set to: 57
  5723                           ;incstack = 0
  5724  00460C  0E01               	movlw	1
  5725  00460E  6EBE               	movwf	190,c	;volatile
  5726                           
  5727                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  5728  004610  0E02               	movlw	2
  5729  004612  6EBD               	movwf	189,c	;volatile
  5730                           
  5731                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5732  004614  0E00               	movlw	0
  5733  004616  6EBA               	movwf	186,c	;volatile
  5734                           
  5735                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5736  004618  0E00               	movlw	0
  5737  00461A  6EBB               	movwf	187,c	;volatile
  5738                           
  5739                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  5740  00461C  0E06               	movlw	6
  5741  00461E  6EBC               	movwf	188,c	;volatile
  5742                           
  5743                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  5744  004620  0E06               	movlw	6
  5745  004622  6EC6               	movwf	198,c	;volatile
  5746                           
  5747                           ; BSR set to: 57
  5748                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5749  004624  68C2               	setf	194,c	;volatile
  5750                           
  5751                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5752  004626  0EBF               	movlw	191
  5753  004628  6EC3               	movwf	195,c	;volatile
  5754                           
  5755                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  5756  00462A  0E91               	movlw	145
  5757  00462C  6EC4               	movwf	196,c	;volatile
  5758                           
  5759                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  5760  00462E  0EFD               	movlw	253
  5761  004630  6EC5               	movwf	197,c	;volatile
  5762                           
  5763                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  5764  004632  0EFD               	movlw	253
  5765  004634  013A               	movlb	58	; () banked
  5766  004636  6F70               	movwf	112,b	;volatile
  5767                           
  5768                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  5769  004638  0E00               	movlw	0
  5770  00463A  6F60               	movwf	96,b	;volatile
  5771                           
  5772                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  5773  00463C  0E3F               	movlw	63
  5774  00463E  6F50               	movwf	80,b	;volatile
  5775                           
  5776                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  5777  004640  0E06               	movlw	6
  5778  004642  6F80               	movwf	128,b	;volatile
  5779                           
  5780                           ; BSR set to: 58
  5781                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5782  004644  6940               	setf	64,b	;volatile
  5783                           
  5784                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5785  004646  0E00               	movlw	0
  5786  004648  6F71               	movwf	113,b	;volatile
  5787                           
  5788                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5789  00464A  0E00               	movlw	0
  5790  00464C  6F81               	movwf	129,b	;volatile
  5791                           
  5792                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5793  00464E  0E00               	movlw	0
  5794  004650  6F51               	movwf	81,b	;volatile
  5795                           
  5796                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5797  004652  0E00               	movlw	0
  5798  004654  6F41               	movwf	65,b	;volatile
  5799                           
  5800                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5801  004656  0E00               	movlw	0
  5802  004658  6F61               	movwf	97,b	;volatile
  5803                           
  5804                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  5805  00465A  0E00               	movlw	0
  5806  00465C  6F5A               	movwf	90,b	;volatile
  5807                           
  5808                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  5809  00465E  0E00               	movlw	0
  5810  004660  6F5B               	movwf	91,b	;volatile
  5811                           
  5812                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  5813  004662  0E00               	movlw	0
  5814  004664  6F6A               	movwf	106,b	;volatile
  5815                           
  5816                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  5817  004666  0E00               	movlw	0
  5818  004668  6F6B               	movwf	107,b	;volatile
  5819                           
  5820                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  5821  00466A  0E00               	movlw	0
  5822  00466C  6F7A               	movwf	122,b	;volatile
  5823                           
  5824                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  5825  00466E  0E00               	movlw	0
  5826  004670  6F7B               	movwf	123,b	;volatile
  5827                           
  5828                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  5829  004672  0E00               	movlw	0
  5830  004674  6F82               	movwf	130,b	;volatile
  5831                           
  5832                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  5833  004676  0E00               	movlw	0
  5834  004678  6F42               	movwf	66,b	;volatile
  5835                           
  5836                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  5837  00467A  0E00               	movlw	0
  5838  00467C  6F52               	movwf	82,b	;volatile
  5839                           
  5840                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  5841  00467E  0E00               	movlw	0
  5842  004680  6F62               	movwf	98,b	;volatile
  5843                           
  5844                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  5845  004682  0E00               	movlw	0
  5846  004684  6F72               	movwf	114,b	;volatile
  5847                           
  5848                           ; BSR set to: 58
  5849                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  5850  004686  6943               	setf	67,b	;volatile
  5851                           
  5852                           ; BSR set to: 58
  5853                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  5854  004688  6953               	setf	83,b	;volatile
  5855                           
  5856                           ; BSR set to: 58
  5857                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  5858  00468A  6963               	setf	99,b	;volatile
  5859                           
  5860                           ; BSR set to: 58
  5861                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  5862  00468C  6973               	setf	115,b	;volatile
  5863                           
  5864                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  5865  00468E  0E07               	movlw	7
  5866  004690  6F83               	movwf	131,b	;volatile
  5867                           
  5868                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  5869  004692  0E0F               	movlw	15
  5870  004694  6FE8               	movwf	232,b	;volatile
  5871                           
  5872                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  5873  004696  0E13               	movlw	19
  5874  004698  6FDE               	movwf	222,b	;volatile
  5875                           
  5876                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  5877  00469A  0E16               	movlw	22
  5878  00469C  6F0E               	movwf	14,b	;volatile
  5879                           
  5880                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  5881  00469E  0E1E               	movlw	30
  5882  0046A0  6F13               	movwf	19,b	;volatile
  5883                           
  5884                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  5885  0046A2  0E10               	movlw	16
  5886  0046A4  6F19               	movwf	25,b	;volatile
  5887                           
  5888                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  5889  0046A6  0E1F               	movlw	31
  5890  0046A8  6F15               	movwf	21,b	;volatile
  5891                           
  5892                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  5893  0046AA  0E13               	movlw	19
  5894  0046AC  6F16               	movwf	22,b	;volatile
  5895                           
  5896                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  5897  0046AE  0E17               	movlw	23
  5898  0046B0  6FE5               	movwf	229,b	;volatile
  5899                           
  5900                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  5901  0046B2  0E14               	movlw	20
  5902  0046B4  6FDF               	movwf	223,b	;volatile
  5903                           
  5904                           ; BSR set to: 58
  5905  0046B6  0012               	return		;funcret
  5906  0046B8                     __end_of_PIN_MANAGER_Initialize:
  5907                           	opt callstack 0
  5908                           
  5909 ;; *************** function _OSCILLATOR_Initialize *****************
  5910 ;; Defined at:
  5911 ;;		line 67 in file "mcc_generated_files/mcc.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2
  5920 ;; Tracked objects:
  5921 ;;		On entry : 3F/3A
  5922 ;;		On exit  : 3F/39
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5929 ;;Total ram usage:        0 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    4
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_SYSTEM_Initialize
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text39
  5940  00530C                     __ptext39:
  5941                           	opt callstack 0
  5942  00530C                     _OSCILLATOR_Initialize:
  5943                           	opt callstack 25
  5944                           
  5945                           ; BSR set to: 58
  5946                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x20;
  5947                           
  5948                           ; BSR set to: 58
  5949                           ;incstack = 0
  5950  00530C  0E20               	movlw	32
  5951  00530E  0139               	movlb	57	; () banked
  5952  005310  6FD9               	movwf	217,b	;volatile
  5953                           
  5954                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
  5955  005312  0E00               	movlw	0
  5956  005314  6FDB               	movwf	219,b	;volatile
  5957                           
  5958                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
  5959  005316  0E00               	movlw	0
  5960  005318  6FDD               	movwf	221,b	;volatile
  5961                           
  5962                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
  5963  00531A  0E08               	movlw	8
  5964  00531C  6FDF               	movwf	223,b	;volatile
  5965                           
  5966                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
  5967  00531E  0E00               	movlw	0
  5968  005320  6FDE               	movwf	222,b	;volatile
  5969  005322                     l68:
  5970                           
  5971                           ; BSR set to: 57
  5972                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
  5973  005322  B1DC               	btfsc	220,0,b	;volatile
  5974  005324  0012               	return	
  5975  005326  D7FD               	goto	l68
  5976  005328                     __end_of_OSCILLATOR_Initialize:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function _INTERRUPT_Initialize *****************
  5980 ;; Defined at:
  5981 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  state           1    5[COMRAM] _Bool 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2
  5990 ;; Tracked objects:
  5991 ;;		On entry : 3F/0
  5992 ;;		On exit  : 3F/39
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;Total ram usage:        1 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    4
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_SYSTEM_Initialize
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text40
  6010  004CEE                     __ptext40:
  6011                           	opt callstack 0
  6012  004CEE                     _INTERRUPT_Initialize:
  6013                           	opt callstack 25
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  6017                           
  6018                           ; BSR set to: 57
  6019                           ;incstack = 0
  6020  004CEE  8AD2               	bsf	210,5,c	;volatile
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  6024  004CF0  0E00               	movlw	0
  6025  004CF2  BED2               	btfsc	16338,7,c	;volatile
  6026  004CF4  0E01               	movlw	1
  6027  004CF6  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  6031  004CF8  9ED2               	bcf	16338,7,c	;volatile
  6032                           
  6033                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  6034  004CFA  0E55               	movlw	85
  6035  004CFC  6ED4               	movwf	212,c	;volatile
  6036                           
  6037                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  6038  004CFE  0EAA               	movlw	170
  6039  004D00  6ED4               	movwf	212,c	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  6043  004D02  90D4               	bcf	212,0,c	;volatile
  6044                           
  6045                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  6046  004D04  0E00               	movlw	0
  6047  004D06  0138               	movlb	56	; () banked
  6048  004D08  6F9F               	movwf	159,b	;volatile
  6049                           
  6050                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  6051  004D0A  0E00               	movlw	0
  6052  004D0C  6F9E               	movwf	158,b	;volatile
  6053                           
  6054                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  6055  004D0E  0E08               	movlw	8
  6056  004D10  6F9D               	movwf	157,b	;volatile
  6057                           
  6058                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  6059  004D12  0E55               	movlw	85
  6060  004D14  6ED4               	movwf	212,c	;volatile
  6061                           
  6062                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  6063  004D16  0EAA               	movlw	170
  6064  004D18  6ED4               	movwf	212,c	;volatile
  6065                           
  6066                           ; BSR set to: 56
  6067                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  6068  004D1A  80D4               	bsf	212,0,c	;volatile
  6069                           
  6070                           ; BSR set to: 56
  6071                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  6072  004D1C  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  6073  004D1E  D002               	bra	u7635
  6074  004D20  9ED2               	bcf	16338,7,c	;volatile
  6075  004D22  D001               	bra	u7636
  6076  004D24                     u7635:
  6077  004D24  8ED2               	bsf	16338,7,c	;volatile
  6078  004D26                     u7636:
  6079                           
  6080                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  6081  004D26  0139               	movlb	57	; () banked
  6082  004D28  8786               	bsf	134,3,b	;volatile
  6083                           
  6084                           ; BSR set to: 57
  6085                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  6086  004D2A  8586               	bsf	134,2,b	;volatile
  6087                           
  6088                           ; BSR set to: 57
  6089                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  6090  004D2C  8983               	bsf	131,4,b	;volatile
  6091                           
  6092                           ; BSR set to: 57
  6093                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  6094  004D2E  8783               	bsf	131,3,b	;volatile
  6095                           
  6096                           ; BSR set to: 57
  6097                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  6098  004D30  8189               	bsf	137,0,b	;volatile
  6099                           
  6100                           ; BSR set to: 57
  6101                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  6102  004D32  8D88               	bsf	136,6,b	;volatile
  6103                           
  6104                           ; BSR set to: 57
  6105  004D34  0012               	return		;funcret
  6106  004D36                     __end_of_INTERRUPT_Initialize:
  6107                           	opt callstack 0
  6108                           
  6109 ;; *************** function _FVR_Initialize *****************
  6110 ;; Defined at:
  6111 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2
  6120 ;; Tracked objects:
  6121 ;;		On entry : 3F/39
  6122 ;;		On exit  : 3F/3E
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    4
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_SYSTEM_Initialize
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text41
  6140  0054DE                     __ptext41:
  6141                           	opt callstack 0
  6142  0054DE                     _FVR_Initialize:
  6143                           	opt callstack 25
  6144                           
  6145                           ; BSR set to: 57
  6146                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
  6147                           
  6148                           ; BSR set to: 57
  6149                           ;incstack = 0
  6150  0054DE  0EAF               	movlw	175
  6151  0054E0  013E               	movlb	62	; () banked
  6152  0054E2  6FC1               	movwf	193,b	;volatile
  6153                           
  6154                           ; BSR set to: 62
  6155  0054E4  0012               	return		;funcret
  6156  0054E6                     __end_of_FVR_Initialize:
  6157                           	opt callstack 0
  6158                           
  6159 ;; *************** function _ADCC_Initialize *****************
  6160 ;; Defined at:
  6161 ;;		line 62 in file "mcc_generated_files/adcc.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;		None
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1    wreg      void 
  6168 ;; Registers used:
  6169 ;;		wreg, status,2
  6170 ;; Tracked objects:
  6171 ;;		On entry : 3F/39
  6172 ;;		On exit  : 3F/3E
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6179 ;;Total ram usage:        0 bytes
  6180 ;; Hardware stack levels used:    1
  6181 ;; Hardware stack levels required when called:    4
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_SYSTEM_Initialize
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text42
  6190  004B52                     __ptext42:
  6191                           	opt callstack 0
  6192  004B52                     _ADCC_Initialize:
  6193                           	opt callstack 25
  6194                           
  6195                           ; BSR set to: 57
  6196                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  6197                           
  6198                           ; BSR set to: 62
  6199                           ;incstack = 0
  6200  004B52  0E00               	movlw	0
  6201  004B54  013E               	movlb	62	; () banked
  6202  004B56  6FDE               	movwf	222,b	;volatile
  6203                           
  6204                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  6205  004B58  0E00               	movlw	0
  6206  004B5A  6FDF               	movwf	223,b	;volatile
  6207                           
  6208                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  6209  004B5C  0E00               	movlw	0
  6210  004B5E  6FE0               	movwf	224,b	;volatile
  6211                           
  6212                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  6213  004B60  0E00               	movlw	0
  6214  004B62  6FE1               	movwf	225,b	;volatile
  6215                           
  6216                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  6217  004B64  0E00               	movlw	0
  6218  004B66  6FE4               	movwf	228,b	;volatile
  6219                           
  6220                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  6221  004B68  0E00               	movlw	0
  6222  004B6A  6FE5               	movwf	229,b	;volatile
  6223                           
  6224                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  6225  004B6C  0E00               	movlw	0
  6226  004B6E  6FEA               	movwf	234,b	;volatile
  6227                           
  6228                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  6229  004B70  0E00               	movlw	0
  6230  004B72  6FEC               	movwf	236,b	;volatile
  6231                           
  6232                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  6233  004B74  0E00               	movlw	0
  6234  004B76  6FF1               	movwf	241,b	;volatile
  6235                           
  6236                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  6237  004B78  0E00               	movlw	0
  6238  004B7A  6FF3               	movwf	243,b	;volatile
  6239                           
  6240                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  6241  004B7C  0E00               	movlw	0
  6242  004B7E  6FF4               	movwf	244,b	;volatile
  6243                           
  6244                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  6245  004B80  0E00               	movlw	0
  6246  004B82  6FF5               	movwf	245,b	;volatile
  6247                           
  6248                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  6249  004B84  0E00               	movlw	0
  6250  004B86  6FF6               	movwf	246,b	;volatile
  6251                           
  6252                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  6253  004B88  0E00               	movlw	0
  6254  004B8A  6FF7               	movwf	247,b	;volatile
  6255                           
  6256                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  6257  004B8C  0E00               	movlw	0
  6258  004B8E  6FF9               	movwf	249,b	;volatile
  6259                           
  6260                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0xF4;
  6261  004B90  0EF4               	movlw	244
  6262  004B92  6FFA               	movwf	250,b	;volatile
  6263                           
  6264                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  6265  004B94  0E20               	movlw	32
  6266  004B96  6FFB               	movwf	251,b	;volatile
  6267                           
  6268                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  6269  004B98  0E00               	movlw	0
  6270  004B9A  6FFC               	movwf	252,b	;volatile
  6271                           
  6272                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  6273  004B9C  0E00               	movlw	0
  6274  004B9E  6FFD               	movwf	253,b	;volatile
  6275                           
  6276                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  6277  004BA0  0E00               	movlw	0
  6278  004BA2  6FFE               	movwf	254,b	;volatile
  6279                           
  6280                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  6281  004BA4  0E3F               	movlw	63
  6282  004BA6  6FFF               	movwf	255,b	;volatile
  6283                           
  6284                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  6285  004BA8  0E84               	movlw	132
  6286  004BAA  6FF8               	movwf	248,b	;volatile
  6287                           
  6288                           ; BSR set to: 62
  6289  004BAC  0012               	return		;funcret
  6290  004BAE                     __end_of_ADCC_Initialize:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function _Digital232_init *****************
  6294 ;; Defined at:
  6295 ;;		line 10 in file "d232.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/1
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6313 ;;Total ram usage:        0 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:   13
  6316 ;; This function calls:
  6317 ;;		_ADCC_StartConversion
  6318 ;;		_StartTimer
  6319 ;;		_UART2_Read
  6320 ;;		_UART2_is_rx_ready
  6321 ;;		_WaitMs
  6322 ;;		_printf
  6323 ;; This function is called by:
  6324 ;;		_main
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text43
  6329  004194                     __ptext43:
  6330                           	opt callstack 0
  6331  004194                     _Digital232_init:
  6332                           	opt callstack 17
  6333                           
  6334                           ;d232.c: 12:  printf("%s", "XQ\r");
  6335                           
  6336                           ; BSR set to: 62
  6337                           ;incstack = 0
  6338  004194  0E4C               	movlw	low STR_5
  6339  004196  0100               	movlb	0	; () banked
  6340  004198  6F64               	movwf	printf@fmt& (0+255),b
  6341  00419A  0E48               	movlw	low STR_6
  6342  00419C  6F65               	movwf	(?_printf+1)& (0+255),b
  6343  00419E  5165               	movf	(?_printf+1)& (0+255),w,b
  6344  0041A0  A4D8               	btfss	status,2,c
  6345  0041A2  0E20               	movlw	high __smallconst
  6346  0041A4  6F66               	movwf	(?_printf+2)& (0+255),b
  6347  0041A6  EC94  F029         	call	_printf	;wreg free
  6348                           
  6349                           ; BSR set to: 1
  6350                           ;d232.c: 13:  WaitMs(5);
  6351  0041AA  0E00               	movlw	0
  6352  0041AC  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6353  0041AE  0E05               	movlw	5
  6354  0041B0  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6355  0041B2  EC63  F028         	call	_WaitMs	;wreg free
  6356                           
  6357                           ;d232.c: 14:  printf("%s", "T2\r");
  6358  0041B6  0E4C               	movlw	low STR_5
  6359  0041B8  0100               	movlb	0	; () banked
  6360  0041BA  6F64               	movwf	printf@fmt& (0+255),b
  6361  0041BC  0E38               	movlw	low STR_8
  6362  0041BE  6F65               	movwf	(?_printf+1)& (0+255),b
  6363  0041C0  5165               	movf	(?_printf+1)& (0+255),w,b
  6364  0041C2  A4D8               	btfss	status,2,c
  6365  0041C4  0E20               	movlw	high __smallconst
  6366  0041C6  6F66               	movwf	(?_printf+2)& (0+255),b
  6367  0041C8  EC94  F029         	call	_printf	;wreg free
  6368                           
  6369                           ;d232.c: 15:  WaitMs(800);
  6370  0041CC  0E03               	movlw	3
  6371  0041CE  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6372  0041D0  0E20               	movlw	32
  6373  0041D2  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6374  0041D4  EC63  F028         	call	_WaitMs	;wreg free
  6375                           
  6376                           ;d232.c: 16:  printf("%s", "C4\r");
  6377  0041D8  0E4C               	movlw	low STR_5
  6378  0041DA  0100               	movlb	0	; () banked
  6379  0041DC  6F64               	movwf	printf@fmt& (0+255),b
  6380  0041DE  0E3C               	movlw	low STR_10
  6381  0041E0  6F65               	movwf	(?_printf+1)& (0+255),b
  6382  0041E2  5165               	movf	(?_printf+1)& (0+255),w,b
  6383  0041E4  A4D8               	btfss	status,2,c
  6384  0041E6  0E20               	movlw	high __smallconst
  6385  0041E8  6F66               	movwf	(?_printf+2)& (0+255),b
  6386  0041EA  EC94  F029         	call	_printf	;wreg free
  6387                           
  6388                           ; BSR set to: 1
  6389                           ;d232.c: 17:  WaitMs(5);
  6390  0041EE  0E00               	movlw	0
  6391  0041F0  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6392  0041F2  0E05               	movlw	5
  6393  0041F4  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6394  0041F6  EC63  F028         	call	_WaitMs	;wreg free
  6395                           
  6396                           ;d232.c: 18:  printf("%s", "F4\r");
  6397  0041FA  0E4C               	movlw	low STR_5
  6398  0041FC  0100               	movlb	0	; () banked
  6399  0041FE  6F64               	movwf	printf@fmt& (0+255),b
  6400  004200  0E40               	movlw	low STR_12
  6401  004202  6F65               	movwf	(?_printf+1)& (0+255),b
  6402  004204  5165               	movf	(?_printf+1)& (0+255),w,b
  6403  004206  A4D8               	btfss	status,2,c
  6404  004208  0E20               	movlw	high __smallconst
  6405  00420A  6F66               	movwf	(?_printf+2)& (0+255),b
  6406  00420C  EC94  F029         	call	_printf	;wreg free
  6407                           
  6408                           ; BSR set to: 1
  6409                           ;d232.c: 19:  WaitMs(5);
  6410  004210  0E00               	movlw	0
  6411  004212  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6412  004214  0E05               	movlw	5
  6413  004216  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6414  004218  EC63  F028         	call	_WaitMs	;wreg free
  6415                           
  6416                           ;d232.c: 20:  printf("%s", "M4\r");
  6417  00421C  0E4C               	movlw	low STR_5
  6418  00421E  0100               	movlb	0	; () banked
  6419  004220  6F64               	movwf	printf@fmt& (0+255),b
  6420  004222  0E44               	movlw	low STR_14
  6421  004224  6F65               	movwf	(?_printf+1)& (0+255),b
  6422  004226  5165               	movf	(?_printf+1)& (0+255),w,b
  6423  004228  A4D8               	btfss	status,2,c
  6424  00422A  0E20               	movlw	high __smallconst
  6425  00422C  6F66               	movwf	(?_printf+2)& (0+255),b
  6426  00422E  EC94  F029         	call	_printf	;wreg free
  6427                           
  6428                           ;d232.c: 21:  WaitMs(5);
  6429  004232  0E00               	movlw	0
  6430  004234  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6431  004236  0E05               	movlw	5
  6432  004238  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6433  00423A  EC63  F028         	call	_WaitMs	;wreg free
  6434                           
  6435                           ;d232.c: 22:  IO.d232 = D232_INIT;
  6436  00423E  0E01               	movlw	1
  6437  004240  0101               	movlb	1	; () banked
  6438  004242  6FB6               	movwf	(_IO+13)& (0+255),b
  6439                           
  6440                           ; BSR set to: 1
  6441                           ;d232.c: 26:  if (UART2_is_rx_ready())
  6442  004244  EC73  F02A         	call	_UART2_is_rx_ready	;wreg free
  6443  004248  0900               	iorlw	0
  6444  00424A  A4D8               	btfss	status,2,c
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;d232.c: 27:   UART2_Read();
  6448  00424C  EC9B  F026         	call	_UART2_Read	;wreg free
  6449                           
  6450                           ;d232.c: 28:  IO.io = IO_INIT;
  6451  004250  0E01               	movlw	1
  6452  004252  0101               	movlb	1	; () banked
  6453  004254  6FB5               	movwf	(_IO+12)& (0+255),b
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;d232.c: 29:  IO.srq = S_IDLE;
  6457  004256  0E00               	movlw	0
  6458  004258  6FB7               	movwf	(_IO+14)& (0+255),b
  6459                           
  6460                           ; BSR set to: 1
  6461                           ;d232.c: 30:  IO.srq_value = 0;
  6462  00425A  0E00               	movlw	0
  6463  00425C  6FB9               	movwf	(_IO+16)& (0+255),b
  6464                           
  6465                           ; BSR set to: 1
  6466                           ;d232.c: 31:  IO.button_value = 0;
  6467  00425E  0E00               	movlw	0
  6468  004260  6FC1               	movwf	(_IO+24)& (0+255),b
  6469  004262  0E00               	movlw	0
  6470  004264  6FC0               	movwf	(_IO+23)& (0+255),b
  6471                           
  6472                           ; BSR set to: 1
  6473                           ;d232.c: 32:  ADCC_StartConversion(channel_VSS);
  6474  004266  0E3B               	movlw	59
  6475  004268  EC56  F02A         	call	_ADCC_StartConversion
  6476                           
  6477                           ; BSR set to: 62
  6478                           ;d232.c: 33:  StartTimer(TMR_SPS, 10);
  6479  00426C  0E00               	movlw	0
  6480  00426E  6E07               	movwf	(StartTimer@count+1)^0,c
  6481  004270  0E0A               	movlw	10
  6482  004272  6E06               	movwf	StartTimer@count^0,c
  6483  004274  0E03               	movlw	3
  6484  004276  EC01  F028         	call	_StartTimer
  6485  00427A  0012               	return		;funcret
  6486  00427C                     __end_of_Digital232_init:
  6487                           	opt callstack 0
  6488                           
  6489 ;; *************** function _WaitMs *****************
  6490 ;; Defined at:
  6491 ;;		line 31 in file "timers.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 3F/1
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6509 ;;Total ram usage:        2 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    5
  6512 ;; This function calls:
  6513 ;;		_StartTimer
  6514 ;;		_TimerDone
  6515 ;; This function is called by:
  6516 ;;		_Digital232_init
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text44
  6521  0050C6                     __ptext44:
  6522                           	opt callstack 0
  6523  0050C6                     _WaitMs:
  6524                           	opt callstack 24
  6525                           
  6526                           ; BSR set to: 1
  6527                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6528                           
  6529                           ;incstack = 0
  6530  0050C6  0060  F02C  F006   	movff	WaitMs@numMilliseconds,StartTimer@count
  6531  0050CC  0060  F030  F007   	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  6532  0050D2  0E00               	movlw	0
  6533  0050D4  EC01  F028         	call	_StartTimer
  6534                           
  6535                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6536  0050D8  D005               	goto	l7312
  6537  0050DA                     l1242:
  6538                           
  6539                           ;timers.c: 35:   __nop();
  6540  0050DA  F000               	nop	
  6541                           
  6542                           ;timers.c: 36:   __nop();
  6543  0050DC  F000               	nop	
  6544                           
  6545                           ;timers.c: 37:   __nop();
  6546  0050DE  F000               	nop	
  6547                           
  6548                           ;timers.c: 38:   __nop();
  6549  0050E0  F000               	nop	
  6550  0050E2  0004               	clrwdt		;# 
  6551  0050E4                     l7312:
  6552                           
  6553                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6554  0050E4  0E00               	movlw	0
  6555  0050E6  ECB4  F028         	call	_TimerDone
  6556  0050EA  0900               	iorlw	0
  6557  0050EC  A4D8               	btfss	status,2,c
  6558  0050EE  0012               	return	
  6559  0050F0  D7F4               	goto	l1242
  6560  0050F2                     __end_of_WaitMs:
  6561                           	opt callstack 0
  6562                           
  6563 ;; *************** function _Digital232_RW *****************
  6564 ;; Defined at:
  6565 ;;		line 66 in file "d232.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  j               1   33[BANK0 ] unsigned char 
  6570 ;;  i               1   32[BANK0 ] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      _Bool 
  6573 ;; Registers used:
  6574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/1
  6577 ;;		On exit  : 3F/1
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6581 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6582 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6583 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6584 ;;Total ram usage:        4 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:   13
  6587 ;; This function calls:
  6588 ;;		_ADCC_GetConversionResult
  6589 ;;		_ADCC_IsConversionDone
  6590 ;;		_ADCC_StartConversion
  6591 ;;		_PWM8_LoadDutyValue
  6592 ;;		_StartTimer
  6593 ;;		_TimerDone
  6594 ;;		_UART2_Read
  6595 ;;		_UART2_Write
  6596 ;;		_UART2_is_rx_ready
  6597 ;;		_calc_pot
  6598 ;;		_printf
  6599 ;; This function is called by:
  6600 ;;		_main
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text45
  6605  0035B0                     __ptext45:
  6606                           	opt callstack 0
  6607  0035B0                     _Digital232_RW:
  6608                           	opt callstack 17
  6609                           
  6610                           ;incstack = 0
  6611  0035B0  0E00               	movlw	0
  6612  0035B2  0100               	movlb	0	; () banked
  6613  0035B4  6F81               	movwf	Digital232_RW@j& (0+255),b
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;d232.c: 69:  static uint8_t x = 0;;d232.c: 72:  if (!TimerDone(TMR_SPS)) {
  6617  0035B6  0E03               	movlw	3
  6618  0035B8  ECB4  F028         	call	_TimerDone
  6619  0035BC  0900               	iorlw	0
  6620  0035BE  A4D8               	btfss	status,2,c
  6621  0035C0  D005               	goto	l7460
  6622                           
  6623                           ;d232.c: 73:   IO.io = IO_IDLE;
  6624  0035C2  0E00               	movlw	0
  6625  0035C4  0101               	movlb	1	; () banked
  6626  0035C6  6FB5               	movwf	(_IO+12)& (0+255),b
  6627                           
  6628                           ; BSR set to: 1
  6629                           ;d232.c: 74:   return 0;
  6630  0035C8  0E00               	movlw	0
  6631  0035CA  0012               	return	
  6632  0035CC                     l7460:
  6633                           
  6634                           ;d232.c: 77:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  6635  0035CC  0101               	movlb	1	; () banked
  6636  0035CE  51C6               	movf	(_IO+29)& (0+255),w,b
  6637  0035D0  25C4               	addwf	(_IO+27)& (0+255),w,b
  6638  0035D2  0100               	movlb	0	; () banked
  6639  0035D4  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6640  0035D6  0101               	movlb	1	; () banked
  6641  0035D8  51C7               	movf	(_IO+30)& (0+255),w,b
  6642  0035DA  21C5               	addwfc	(_IO+28)& (0+255),w,b
  6643  0035DC  0100               	movlb	0	; () banked
  6644  0035DE  6F7F               	movwf	(??_Digital232_RW+1)& (0+255),b
  6645  0035E0  0E0A               	movlw	10
  6646  0035E2  257E               	addwf	??_Digital232_RW& (0+255),w,b
  6647  0035E4  6E06               	movwf	StartTimer@count^0,c
  6648  0035E6  0E00               	movlw	0
  6649  0035E8  217F               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  6650  0035EA  6E07               	movwf	(StartTimer@count+1)^0,c
  6651  0035EC  0E03               	movlw	3
  6652  0035EE  EC01  F028         	call	_StartTimer
  6653                           
  6654                           ;d232.c: 79:  ADCC_StartConversion(channel_ANA0);
  6655  0035F2  0E00               	movlw	0
  6656  0035F4  EC56  F02A         	call	_ADCC_StartConversion
  6657  0035F8                     l7464:
  6658                           
  6659                           ; BSR set to: 62
  6660  0035F8  EC5E  F02A         	call	_ADCC_IsConversionDone	;wreg free
  6661  0035FC  0900               	iorlw	0
  6662  0035FE  B4D8               	btfsc	status,2,c
  6663  003600  D7FB               	goto	l7464
  6664                           
  6665                           ; BSR set to: 62
  6666                           ;d232.c: 81:  IO.button_value = ADCC_GetConversionResult();
  6667  003602  EC4C  F02A         	call	_ADCC_GetConversionResult	;wreg free
  6668  003606  0060  F018  F1C0   	movff	?_ADCC_GetConversionResult,_IO+23
  6669  00360C  0060  F01C  F1C1   	movff	?_ADCC_GetConversionResult+1,_IO+24
  6670                           
  6671                           ; BSR set to: 62
  6672                           ;d232.c: 82:  calc_pot(IO.button_value);
  6673  003612  0060  F700  F07A   	movff	_IO+23,calc_pot@value
  6674  003618  0060  F704  F07B   	movff	_IO+24,calc_pot@value+1
  6675  00361E  ECA9  F01F         	call	_calc_pot	;wreg free
  6676                           
  6677                           ; BSR set to: 1
  6678                           ;d232.c: 87:  IO.srq = S_IDLE;
  6679  003622  0E00               	movlw	0
  6680  003624  6FB7               	movwf	(_IO+14)& (0+255),b
  6681                           
  6682                           ; BSR set to: 1
  6683                           ;d232.c: 89:  if (UART2_is_rx_ready()) {
  6684  003626  EC73  F02A         	call	_UART2_is_rx_ready	;wreg free
  6685  00362A  0900               	iorlw	0
  6686  00362C  B4D8               	btfsc	status,2,c
  6687  00362E  D040               	goto	l7498
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;d232.c: 90:   j = UART2_Read();
  6691  003630  EC9B  F026         	call	_UART2_Read	;wreg free
  6692  003634  0100               	movlb	0	; () banked
  6693  003636  6F81               	movwf	Digital232_RW@j& (0+255),b
  6694                           
  6695                           ;d232.c: 94:   switch (IO.srq) {
  6696  003638  D021               	goto	l7496
  6697  00363A                     l7476:
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;d232.c: 96:    if (j == 'S')
  6701  00363A  0E53               	movlw	83
  6702  00363C  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6703  00363E  A4D8               	btfss	status,2,c
  6704  003640  D037               	goto	l7498
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;d232.c: 97:     IO.srq = S_S;
  6708  003642  0E01               	movlw	1
  6709  003644  D018               	goto	L7
  6710  003646                     l7480:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;d232.c: 100:    if (j == 'R')
  6714  003646  0E52               	movlw	82
  6715  003648  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6716  00364A  A4D8               	btfss	status,2,c
  6717  00364C  D031               	goto	l7498
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;d232.c: 101:     IO.srq = S_R;
  6721  00364E  0E02               	movlw	2
  6722  003650  D012               	goto	L7
  6723  003652                     l7484:
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;d232.c: 104:    if (j == 'Q')
  6727  003652  0E51               	movlw	81
  6728  003654  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6729  003656  A4D8               	btfss	status,2,c
  6730  003658  D02B               	goto	l7498
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;d232.c: 105:     IO.srq = S_Q;
  6734  00365A  0E03               	movlw	3
  6735  00365C  D00C               	goto	L7
  6736  00365E                     l7488:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;d232.c: 108:    if (j == ' ')
  6740  00365E  0E20               	movlw	32
  6741  003660  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6742  003662  A4D8               	btfss	status,2,c
  6743  003664  D025               	goto	l7498
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;d232.c: 109:     IO.srq = S_NUM;
  6747  003666  0E04               	movlw	4
  6748  003668  D006               	goto	L7
  6749  00366A                     l1166:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;d232.c: 112:    IO.srq_value = j;
  6753  00366A  0060  F204  F1B9   	movff	Digital232_RW@j,_IO+16
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;d232.c: 113:    IO.srq = S_UPDATE;
  6757  003670  0E05               	movlw	5
  6758  003672  D001               	goto	L7
  6759  003674                     l7494:
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;d232.c: 116:    IO.srq = S_IDLE;
  6763  003674  0E00               	movlw	0
  6764  003676                     L7:
  6765  003676  0101               	movlb	1	; () banked
  6766  003678  6FB7               	movwf	(_IO+14)& (0+255),b
  6767                           
  6768                           ;d232.c: 117:   }
  6769  00367A  D01A               	goto	l7498
  6770  00367C                     l7496:
  6771                           
  6772                           ; BSR set to: 0
  6773  00367C  0101               	movlb	1	; () banked
  6774  00367E  51B7               	movf	(_IO+14)& (0+255),w,b
  6775  003680  0100               	movlb	0	; () banked
  6776  003682  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6777  003684  6B7F               	clrf	(??_Digital232_RW+1)& (0+255),b
  6778                           
  6779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6780                           ; Switch size 1, requested type "simple"
  6781                           ; Number of cases is 1, Range of values is 0 to 0
  6782                           ; switch strategies available:
  6783                           ; Name         Instructions Cycles
  6784                           ; simple_byte            4     3 (average)
  6785                           ;	Chosen strategy is simple_byte
  6786  003686  517F               	movf	(??_Digital232_RW+1)& (0+255),w,b
  6787  003688  0A00               	xorlw	0	; case 0
  6788  00368A  A4D8               	btfss	status,2,c
  6789  00368C  D7F3               	goto	l7494
  6790                           
  6791                           ; BSR set to: 0
  6792                           ; Switch size 1, requested type "simple"
  6793                           ; Number of cases is 5, Range of values is 0 to 4
  6794                           ; switch strategies available:
  6795                           ; Name         Instructions Cycles
  6796                           ; simple_byte           16     9 (average)
  6797                           ;	Chosen strategy is simple_byte
  6798  00368E  517E               	movf	??_Digital232_RW& (0+255),w,b
  6799  003690  0A00               	xorlw	0	; case 0
  6800  003692  B4D8               	btfsc	status,2,c
  6801  003694  D7D2               	goto	l7476
  6802  003696  0A01               	xorlw	1	; case 1
  6803  003698  B4D8               	btfsc	status,2,c
  6804  00369A  D7D5               	goto	l7480
  6805  00369C  0A03               	xorlw	3	; case 2
  6806  00369E  B4D8               	btfsc	status,2,c
  6807  0036A0  D7D8               	goto	l7484
  6808  0036A2  0A01               	xorlw	1	; case 3
  6809  0036A4  B4D8               	btfsc	status,2,c
  6810  0036A6  D7DB               	goto	l7488
  6811  0036A8  0A07               	xorlw	7	; case 4
  6812  0036AA  B4D8               	btfsc	status,2,c
  6813  0036AC  D7DE               	goto	l1166
  6814  0036AE  D7E2               	goto	l7494
  6815  0036B0                     l7498:
  6816                           
  6817                           ;d232.c: 120:  UART2_Write('D');
  6818  0036B0  0E44               	movlw	68
  6819  0036B2  ECDE  F026         	call	_UART2_Write
  6820                           
  6821                           ;d232.c: 124:  UART2_Write(IO.outbytes[4]);
  6822  0036B6  0101               	movlb	1	; () banked
  6823  0036B8  51B2               	movf	(_IO+9)& (0+255),w,b
  6824  0036BA  ECDE  F026         	call	_UART2_Write
  6825                           
  6826                           ;d232.c: 125:  UART2_Write(IO.outbytes[3]);
  6827  0036BE  0101               	movlb	1	; () banked
  6828  0036C0  51B1               	movf	(_IO+8)& (0+255),w,b
  6829  0036C2  ECDE  F026         	call	_UART2_Write
  6830                           
  6831                           ;d232.c: 126:  UART2_Write(IO.outbytes[1]);
  6832  0036C6  0101               	movlb	1	; () banked
  6833  0036C8  51AF               	movf	(_IO+6)& (0+255),w,b
  6834  0036CA  ECDE  F026         	call	_UART2_Write
  6835                           
  6836                           ;d232.c: 127:  UART2_Write(IO.outbytes[2]);
  6837  0036CE  0101               	movlb	1	; () banked
  6838  0036D0  51B0               	movf	(_IO+7)& (0+255),w,b
  6839  0036D2  ECDE  F026         	call	_UART2_Write
  6840                           
  6841                           ;d232.c: 128:  UART2_Write(IO.outbytes[0]);
  6842  0036D6  0101               	movlb	1	; () banked
  6843  0036D8  51AE               	movf	(_IO+5)& (0+255),w,b
  6844  0036DA  ECDE  F026         	call	_UART2_Write
  6845                           
  6846                           ;d232.c: 129:  UART2_Write('\r');
  6847  0036DE  0E0D               	movlw	13
  6848  0036E0  ECDE  F026         	call	_UART2_Write
  6849                           
  6850                           ; BSR set to: 57
  6851                           ;d232.c: 130:  printf("%s", "R0\r");
  6852  0036E4  0E4C               	movlw	low STR_5
  6853  0036E6  0100               	movlb	0	; () banked
  6854  0036E8  6F64               	movwf	printf@fmt& (0+255),b
  6855  0036EA  0E34               	movlw	low STR_16
  6856  0036EC  6F65               	movwf	(?_printf+1)& (0+255),b
  6857  0036EE  5165               	movf	(?_printf+1)& (0+255),w,b
  6858  0036F0  A4D8               	btfss	status,2,c
  6859  0036F2  0E20               	movlw	high __smallconst
  6860  0036F4  6F66               	movwf	(?_printf+2)& (0+255),b
  6861  0036F6  EC94  F029         	call	_printf	;wreg free
  6862                           
  6863                           ; BSR set to: 1
  6864                           ;d232.c: 131:  IO.output_ok = 1;
  6865  0036FA  0E01               	movlw	1
  6866  0036FC  6FB4               	movwf	(_IO+11)& (0+255),b
  6867                           
  6868                           ; BSR set to: 1
  6869                           ;d232.c: 132:  IO.io = IO_OUT;
  6870  0036FE  0E02               	movlw	2
  6871  003700  6FB5               	movwf	(_IO+12)& (0+255),b
  6872                           
  6873                           ; BSR set to: 1
  6874                           ;d232.c: 136:  StartTimer(TMR_RXTO, 250);
  6875  003702  0E00               	movlw	0
  6876  003704  6E07               	movwf	(StartTimer@count+1)^0,c
  6877  003706  0EFA               	movlw	250
  6878  003708  6E06               	movwf	StartTimer@count^0,c
  6879  00370A  0E02               	movlw	2
  6880  00370C  EC01  F028         	call	_StartTimer
  6881                           
  6882                           ;d232.c: 137:  while (!UART2_is_rx_ready()) {
  6883  003710  D015               	goto	l7522
  6884  003712                     l7508:
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;d232.c: 138:   if (TimerDone(TMR_RXTO)) {
  6888  003712  0E02               	movlw	2
  6889  003714  ECB4  F028         	call	_TimerDone
  6890  003718  0900               	iorlw	0
  6891  00371A  B4D8               	btfsc	status,2,c
  6892  00371C  D00F               	goto	l7522
  6893                           
  6894                           ;d232.c: 139:    PWM8_LoadDutyValue(x++);
  6895  00371E  0060  F288  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  6896  003724  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6897  003726  EC94  F027         	call	_PWM8_LoadDutyValue	;wreg free
  6898  00372A  0100               	movlb	0	; () banked
  6899  00372C  2BA2               	incf	Digital232_RW@x& (0+255),f,b
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;d232.c: 140:    if (x > 3)
  6903  00372E  0E03               	movlw	3
  6904  003730  65A2               	cpfsgt	Digital232_RW@x& (0+255),b
  6905  003732  D002               	goto	l1171
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;d232.c: 141:     x = 0;
  6909  003734  0E00               	movlw	0
  6910  003736  6FA2               	movwf	Digital232_RW@x& (0+255),b
  6911  003738                     l1171:
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;d232.c: 142:    IO.io = IO_FAIL;
  6915  003738  0E06               	movlw	6
  6916  00373A  D744               	goto	L8
  6917  00373C                     l7522:
  6918                           
  6919                           ;d232.c: 137:  while (!UART2_is_rx_ready()) {
  6920  00373C  EC73  F02A         	call	_UART2_is_rx_ready	;wreg free
  6921  003740  0900               	iorlw	0
  6922  003742  B4D8               	btfsc	status,2,c
  6923  003744  D7E6               	goto	l7508
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;d232.c: 150:  i = 0;
  6927  003746  0E00               	movlw	0
  6928  003748  6F80               	movwf	Digital232_RW@i& (0+255),b
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;d232.c: 151:  StartTimer(TMR_RXTO, 250);
  6932  00374A  0E00               	movlw	0
  6933  00374C  6E07               	movwf	(StartTimer@count+1)^0,c
  6934  00374E  0EFA               	movlw	250
  6935  003750  6E06               	movwf	StartTimer@count^0,c
  6936  003752  0E02               	movlw	2
  6937  003754  EC01  F028         	call	_StartTimer
  6938                           
  6939                           ;d232.c: 152:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  6940  003758  D015               	goto	l7534
  6941  00375A                     l7528:
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;d232.c: 153:   if (UART2_is_rx_ready()) {
  6945  00375A  EC73  F02A         	call	_UART2_is_rx_ready	;wreg free
  6946  00375E  0900               	iorlw	0
  6947  003760  B4D8               	btfsc	status,2,c
  6948  003762  D010               	goto	l7534
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;d232.c: 154:    IO.inbytes[4 - i] = UART2_Read();
  6952  003764  EC9B  F026         	call	_UART2_Read	;wreg free
  6953  003768  0100               	movlb	0	; () banked
  6954  00376A  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6955  00376C  5180               	movf	Digital232_RW@i& (0+255),w,b
  6956  00376E  08AD               	sublw	low (_IO+4)
  6957  003770  6ED9               	movwf	fsr2l,c
  6958  003772  0E00               	movlw	0
  6959  003774  A0D8               	btfss	status,0,c
  6960  003776  2AE8               	incf	wreg,f,c
  6961  003778  0801               	sublw	high (_IO+4)
  6962  00377A  6EDA               	movwf	fsr2h,c
  6963  00377C  0060  F1FB  FFDF   	movff	??_Digital232_RW,indf2
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;d232.c: 155:    i++;
  6967  003782  2B80               	incf	Digital232_RW@i& (0+255),f,b
  6968  003784                     l7534:
  6969                           
  6970                           ;d232.c: 152:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  6971  003784  0E02               	movlw	2
  6972  003786  ECB4  F028         	call	_TimerDone
  6973  00378A  0900               	iorlw	0
  6974  00378C  A4D8               	btfss	status,2,c
  6975  00378E  D004               	goto	u7950
  6976  003790  0E05               	movlw	5
  6977  003792  0100               	movlb	0	; () banked
  6978  003794  6580               	cpfsgt	Digital232_RW@i& (0+255),b
  6979  003796  D7E1               	goto	l7528
  6980  003798                     u7950:
  6981                           
  6982                           ;d232.c: 158:  if (TimerDone(TMR_RXTO) || i < 6) {
  6983  003798  0E02               	movlw	2
  6984  00379A  ECB4  F028         	call	_TimerDone
  6985  00379E  0900               	iorlw	0
  6986  0037A0  A4D8               	btfss	status,2,c
  6987  0037A2  D004               	goto	u7970
  6988  0037A4  0E06               	movlw	6
  6989  0037A6  0100               	movlb	0	; () banked
  6990  0037A8  6180               	cpfslt	Digital232_RW@i& (0+255),b
  6991  0037AA  D00A               	goto	l7554
  6992  0037AC                     u7970:
  6993                           
  6994                           ;d232.c: 159:   PWM8_LoadDutyValue(x++);
  6995  0037AC  0060  F288  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  6996  0037B2  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6997  0037B4  EC94  F027         	call	_PWM8_LoadDutyValue	;wreg free
  6998  0037B8  0100               	movlb	0	; () banked
  6999  0037BA  2BA2               	incf	Digital232_RW@x& (0+255),f,b
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;d232.c: 160:   if (x > 16)
  7003  0037BC  0E10               	movlw	16
  7004  0037BE  D7B8               	goto	L9
  7005  0037C0                     l7554:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;d232.c: 166:  if (UART2_is_rx_ready())
  7009  0037C0  EC73  F02A         	call	_UART2_is_rx_ready	;wreg free
  7010  0037C4  0900               	iorlw	0
  7011  0037C6  A4D8               	btfss	status,2,c
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;d232.c: 167:   UART2_Read();
  7015  0037C8  EC9B  F026         	call	_UART2_Read	;wreg free
  7016                           
  7017                           ;d232.c: 169:  IO.input_ok = 1;
  7018  0037CC  0E01               	movlw	1
  7019  0037CE  0101               	movlb	1	; () banked
  7020  0037D0  6FB3               	movwf	(_IO+10)& (0+255),b
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;d232.c: 170:  IO.io = IO_IN;
  7024  0037D2  0E03               	movlw	3
  7025  0037D4  6FB5               	movwf	(_IO+12)& (0+255),b
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;d232.c: 171:  IO.d232 = D232_OUT_IN;
  7029  0037D6  0E02               	movlw	2
  7030  0037D8  6FB6               	movwf	(_IO+13)& (0+255),b
  7031                           
  7032                           ; BSR set to: 1
  7033                           ;d232.c: 173:  PWM8_LoadDutyValue(199);
  7034  0037DA  0E00               	movlw	0
  7035  0037DC  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7036  0037DE  0EC7               	movlw	199
  7037  0037E0  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7038  0037E2  EC94  F027         	call	_PWM8_LoadDutyValue	;wreg free
  7039                           
  7040                           ;d232.c: 174:  IO.io = IO_UPDATE;
  7041  0037E6  0E05               	movlw	5
  7042  0037E8  0101               	movlb	1	; () banked
  7043  0037EA  6FB5               	movwf	(_IO+12)& (0+255),b
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;d232.c: 175:  return 1;
  7047  0037EC  0E01               	movlw	1
  7048                           
  7049                           ; BSR set to: 1
  7050  0037EE  0012               	return		;funcret
  7051  0037F0                     __end_of_Digital232_RW:
  7052                           	opt callstack 0
  7053                           
  7054 ;; *************** function _printf *****************
  7055 ;; Defined at:
  7056 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  7059 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7060 ;;		 -> STR_7(3), STR_5(3), 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  ret             2    0        int 
  7063 ;;  ap              1    9[BANK0 ] PTR void [1]
  7064 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  2    4[BANK0 ] int 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 3F/0
  7071 ;;		On exit  : 3F/1
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7074 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7077 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7078 ;;Total ram usage:        6 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:   12
  7081 ;; This function calls:
  7082 ;;		_vfprintf
  7083 ;; This function is called by:
  7084 ;;		_Digital232_init
  7085 ;;		_Digital232_RW
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text46
  7090  005328                     __ptext46:
  7091                           	opt callstack 0
  7092  005328                     _printf:
  7093                           	opt callstack 17
  7094                           
  7095                           ; BSR set to: 0
  7096                           
  7097                           ; BSR set to: 1
  7098                           ;incstack = 0
  7099  005328  0E65               	movlw	low (?_printf+1)
  7100  00532A  6F69               	movwf	printf@ap& (0+255),b
  7101                           
  7102                           ; BSR set to: 0
  7103  00532C  0E00               	movlw	0
  7104  00532E  6F60               	movwf	vfprintf@fp& (0+255),b
  7105  005330  0E00               	movlw	0
  7106  005332  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  7107  005334  0060  F190  F062   	movff	printf@fmt,vfprintf@fmt
  7108  00533A  0E69               	movlw	low printf@ap
  7109  00533C  6F63               	movwf	vfprintf@ap& (0+255),b
  7110  00533E  ECD7  F025         	call	_vfprintf	;wreg free
  7111                           
  7112                           ; BSR set to: 1
  7113  005342  0012               	return		;funcret
  7114  005344                     __end_of_printf:
  7115                           	opt callstack 0
  7116                           
  7117 ;; *************** function _vfprintf *****************
  7118 ;; Defined at:
  7119 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7122 ;;		 -> sprintf@f(6), NULL(0), 
  7123 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  7124 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7125 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7126 ;;		 -> STR_1(17), 
  7127 ;;  ap              1    3[BANK0 ] PTR PTR void 
  7128 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  7131 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7132 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7133 ;;		 -> STR_1(17), 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  2    0[BANK0 ] int 
  7136 ;; Registers used:
  7137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 3F/0
  7140 ;;		On exit  : 3F/1
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7143 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7146 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7147 ;;Total ram usage:        5 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:   11
  7150 ;; This function calls:
  7151 ;;		_vfpfcnvrt
  7152 ;; This function is called by:
  7153 ;;		_sprintf
  7154 ;;		_printf
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text47
  7159  004BAE                     __ptext47:
  7160                           	opt callstack 0
  7161  004BAE                     _vfprintf:
  7162                           	opt callstack 17
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7166                           
  7167                           ; BSR set to: 1
  7168                           ;incstack = 0
  7169  004BAE  0060  F188  F055   	movff	vfprintf@fmt,vfprintf@cfmt
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7173  004BB4  0E00               	movlw	0
  7174  004BB6  0101               	movlb	1	; () banked
  7175  004BB8  6F8B               	movwf	(_nout+1)& (0+255),b
  7176  004BBA  0E00               	movlw	0
  7177  004BBC  6F8A               	movwf	_nout& (0+255),b
  7178                           
  7179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7180  004BBE  D012               	goto	l6988
  7181  004BC0                     l6986:
  7182                           
  7183                           ; BSR set to: 1
  7184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7185  004BC0  0060  F180  F047   	movff	vfprintf@fp,vfpfcnvrt@fp
  7186  004BC6  0060  F184  F048   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7187  004BCC  0E55               	movlw	low vfprintf@cfmt
  7188  004BCE  6E49               	movwf	vfpfcnvrt@fmt^0,c
  7189  004BD0  0060  F18C  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
  7190  004BD6  ECF8  F01B         	call	_vfpfcnvrt	;wreg free
  7191  004BDA  5047               	movf	?_vfpfcnvrt^0,w,c
  7192  004BDC  0101               	movlb	1	; () banked
  7193  004BDE  278A               	addwf	_nout& (0+255),f,b
  7194  004BE0  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  7195  004BE2  238B               	addwfc	(_nout+1)& (0+255),f,b
  7196  004BE4                     l6988:
  7197                           
  7198                           ; BSR set to: 1
  7199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7200  004BE4  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  7201  004BEA                     	if	1	;There is more than 1 active tblptr byte
  7202  004BEA  0E20               	movlw	high __smallconst
  7203  004BEC  6EF7               	movwf	tblptrh,c
  7204  004BEE                     	endif
  7205  004BEE                     	if	0	;tblptru may be non-zero
  7206  004BEE                     	endif
  7207  004BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7208  004BEE  0E00               	movlw	low (__smallconst shr (0+16))
  7209  004BF0  6EF8               	movwf	tblptru,c
  7210  004BF2                     	endif
  7211  004BF2  0008               	tblrd		*
  7212  004BF4  50F5               	movf	tablat,w,c
  7213  004BF6  0900               	iorlw	0
  7214  004BF8  A4D8               	btfss	status,2,c
  7215  004BFA  D7E2               	goto	l6986
  7216                           
  7217                           ; BSR set to: 1
  7218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7219  004BFC  0060  F628  F060   	movff	_nout,?_vfprintf
  7220  004C02  0060  F62C  F061   	movff	_nout+1,?_vfprintf+1
  7221                           
  7222                           ; BSR set to: 1
  7223  004C08  0012               	return		;funcret
  7224  004C0A                     __end_of_vfprintf:
  7225                           	opt callstack 0
  7226                           
  7227 ;; *************** function _vfpfcnvrt *****************
  7228 ;; Defined at:
  7229 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  7232 ;;		 -> sprintf@f(6), NULL(0), 
  7233 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  7234 ;;		 -> vfprintf@cfmt(1), 
  7235 ;;  ap              1   73[COMRAM] PTR PTR void 
  7236 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  ll              8   74[COMRAM] long long 
  7239 ;;  llu             8    0        unsigned long long 
  7240 ;;  f               4    0        unsigned long long 
  7241 ;;  vp              3    0        PTR void 
  7242 ;;  ct              3    0        unsigned char [3]
  7243 ;;  cp              2   82[COMRAM] PTR unsigned char 
  7244 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7245 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7246 ;;		 -> STR_4(5), 
  7247 ;;  i               2    0        int 
  7248 ;;  done            2    0        int 
  7249 ;;  c               1    0        unsigned char 
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  2   70[COMRAM] int 
  7252 ;; Registers used:
  7253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 3E/1
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7260 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7262 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7263 ;;Total ram usage:       14 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:   10
  7266 ;; This function calls:
  7267 ;;		_dtoa
  7268 ;;		_fputc
  7269 ;;		_stoa
  7270 ;; This function is called by:
  7271 ;;		_vfprintf
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           	psect	text48
  7276  0037F0                     __ptext48:
  7277                           	opt callstack 0
  7278  0037F0                     _vfpfcnvrt:
  7279                           	opt callstack 17
  7280                           
  7281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7282                           
  7283                           ; BSR set to: 1
  7284                           ;incstack = 0
  7285  0037F0  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7286  0037F2  6ED9               	movwf	fsr2l,c
  7287  0037F4  6ADA               	clrf	fsr2h,c
  7288  0037F6  006F FF7F FFF6     	movff	indf2,tblptrl
  7289  0037FC                     	if	1	;There is more than 1 active tblptr byte
  7290  0037FC  0E20               	movlw	high __smallconst
  7291  0037FE  6EF7               	movwf	tblptrh,c
  7292  003800                     	endif
  7293  003800                     	if	0	;tblptru may be non-zero
  7294  003800                     	endif
  7295  003800                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7296  003800  0E00               	movlw	low (__smallconst shr (0+16))
  7297  003802  6EF8               	movwf	tblptru,c
  7298  003804                     	endif
  7299  003804  0008               	tblrd		*
  7300  003806  50F5               	movf	tablat,w,c
  7301  003808  0A25               	xorlw	37
  7302  00380A  A4D8               	btfss	status,2,c
  7303  00380C  D0D5               	goto	l6608
  7304                           
  7305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7306  00380E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7307  003810  6ED9               	movwf	fsr2l,c
  7308  003812  6ADA               	clrf	fsr2h,c
  7309  003814  2ADF               	incf	indf2,f,c
  7310                           
  7311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7312  003816  0E00               	movlw	0
  7313  003818  0101               	movlb	1	; () banked
  7314  00381A  6F8D               	movwf	(_width+1)& (0+255),b
  7315  00381C  0E00               	movlw	0
  7316  00381E  6F8C               	movwf	_width& (0+255),b
  7317  003820  0060  F630  F056   	movff	_width,_flags
  7318  003826  0060  F634  F057   	movff	_width+1,_flags+1
  7319                           
  7320                           ; BSR set to: 1
  7321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7322  00382C  0100               	movlb	0	; () banked
  7323  00382E  699E               	setf	_prec& (0+255),b
  7324  003830  699F               	setf	(_prec+1)& (0+255),b
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7328  003832  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7329  003834  6ED9               	movwf	fsr2l,c
  7330  003836  6ADA               	clrf	fsr2h,c
  7331  003838  006F FF7F FFF6     	movff	indf2,tblptrl
  7332  00383E                     	if	1	;There is more than 1 active tblptr byte
  7333  00383E  0E20               	movlw	high __smallconst
  7334  003840  6EF7               	movwf	tblptrh,c
  7335  003842                     	endif
  7336  003842                     	if	0	;tblptru may be non-zero
  7337  003842                     	endif
  7338  003842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7339  003842  0E00               	movlw	low (__smallconst shr (0+16))
  7340  003844  6EF8               	movwf	tblptru,c
  7341  003846                     	endif
  7342  003846  0008               	tblrd		*
  7343  003848  50F5               	movf	tablat,w,c
  7344  00384A  0A64               	xorlw	100
  7345  00384C  B4D8               	btfsc	status,2,c
  7346  00384E  D00F               	goto	u6950
  7347                           
  7348                           ; BSR set to: 0
  7349  003850  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7350  003852  6ED9               	movwf	fsr2l,c
  7351  003854  6ADA               	clrf	fsr2h,c
  7352  003856  006F FF7F FFF6     	movff	indf2,tblptrl
  7353  00385C                     	if	1	;There is more than 1 active tblptr byte
  7354  00385C  0E20               	movlw	high __smallconst
  7355  00385E  6EF7               	movwf	tblptrh,c
  7356  003860                     	endif
  7357  003860                     	if	0	;tblptru may be non-zero
  7358  003860                     	endif
  7359  003860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7360  003860  0E00               	movlw	low (__smallconst shr (0+16))
  7361  003862  6EF8               	movwf	tblptru,c
  7362  003864                     	endif
  7363  003864  0008               	tblrd		*
  7364  003866  50F5               	movf	tablat,w,c
  7365  003868  0A69               	xorlw	105
  7366  00386A  A4D8               	btfss	status,2,c
  7367  00386C  D042               	goto	l6582
  7368  00386E                     u6950:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7372  00386E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7373  003870  6ED9               	movwf	fsr2l,c
  7374  003872  6ADA               	clrf	fsr2h,c
  7375  003874  2ADF               	incf	indf2,f,c
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7379  003876  504A               	movf	vfpfcnvrt@ap^0,w,c
  7380  003878  6ED9               	movwf	fsr2l,c
  7381  00387A  6ADA               	clrf	fsr2h,c
  7382  00387C  50DF               	movf	indf2,w,c
  7383  00387E  2ADF               	incf	indf2,f,c
  7384  003880  2ADF               	incf	indf2,f,c
  7385  003882  6ED9               	movwf	fsr2l,c
  7386  003884  6ADA               	clrf	fsr2h,c
  7387  003886  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  7388  00388C  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  7389  003892  0E00               	movlw	0
  7390  003894  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7391  003896  0EFF               	movlw	-1
  7392  003898  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  7393  00389A  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  7394  00389C  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  7395  00389E  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  7396  0038A0  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  7397  0038A2  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7401  0038A4  0060  F11C  F023   	movff	vfpfcnvrt@fp,dtoa@fp
  7402  0038AA  0060  F120  F024   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7403  0038B0  0060  F12C  F025   	movff	vfpfcnvrt@ll,dtoa@d
  7404  0038B6  0060  F130  F026   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7405  0038BC  0060  F134  F027   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7406  0038C2  0060  F138  F028   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7407  0038C8  0060  F13C  F029   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7408  0038CE  0060  F140  F02A   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7409  0038D4  0060  F144  F02B   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7410  0038DA  0060  F148  F02C   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7411  0038E0  EC2C  F018         	call	_dtoa	;wreg free
  7412  0038E4  0060  F08C  F047   	movff	?_dtoa,?_vfpfcnvrt
  7413  0038EA  0060  F090  F048   	movff	?_dtoa+1,?_vfpfcnvrt+1
  7414  0038F0  0012               	return	
  7415  0038F2                     l6582:
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7419  0038F2  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7420  0038F4  6ED9               	movwf	fsr2l,c
  7421  0038F6  6ADA               	clrf	fsr2h,c
  7422  0038F8  006F FF7F FFF6     	movff	indf2,tblptrl
  7423  0038FE                     	if	1	;There is more than 1 active tblptr byte
  7424  0038FE  0E20               	movlw	high __smallconst
  7425  003900  6EF7               	movwf	tblptrh,c
  7426  003902                     	endif
  7427  003902                     	if	0	;tblptru may be non-zero
  7428  003902                     	endif
  7429  003902                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7430  003902  0E00               	movlw	low (__smallconst shr (0+16))
  7431  003904  6EF8               	movwf	tblptru,c
  7432  003906                     	endif
  7433  003906  0008               	tblrd		*
  7434  003908  50F5               	movf	tablat,w,c
  7435  00390A  0A73               	xorlw	115
  7436  00390C  A4D8               	btfss	status,2,c
  7437  00390E  D027               	goto	l6592
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7441  003910  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7442  003912  6ED9               	movwf	fsr2l,c
  7443  003914  6ADA               	clrf	fsr2h,c
  7444  003916  2ADF               	incf	indf2,f,c
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7448  003918  504A               	movf	vfpfcnvrt@ap^0,w,c
  7449  00391A  6ED9               	movwf	fsr2l,c
  7450  00391C  6ADA               	clrf	fsr2h,c
  7451  00391E  0E02               	movlw	2
  7452  003920  26DF               	addwf	indf2,f,c
  7453  003922  5CDF               	subwf	indf2,w,c
  7454  003924  6ED9               	movwf	fsr2l,c
  7455  003926  6ADA               	clrf	fsr2h,c
  7456  003928  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  7457  00392E  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7461  003934  0060  F11C  F011   	movff	vfpfcnvrt@fp,stoa@fp
  7462  00393A  0060  F120  F012   	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7463  003940  0060  F14C  F013   	movff	vfpfcnvrt@cp,stoa@s
  7464  003946  0060  F150  F014   	movff	vfpfcnvrt@cp+1,stoa@s+1
  7465  00394C  ECF7  F01C         	call	_stoa	;wreg free
  7466  003950  0060  F044  F047   	movff	?_stoa,?_vfpfcnvrt
  7467  003956  0060  F048  F048   	movff	?_stoa+1,?_vfpfcnvrt+1
  7468  00395C  0012               	return	
  7469  00395E                     l6592:
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7473  00395E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7474  003960  6ED9               	movwf	fsr2l,c
  7475  003962  6ADA               	clrf	fsr2h,c
  7476  003964  006F FF7F FFF6     	movff	indf2,tblptrl
  7477  00396A                     	if	1	;There is more than 1 active tblptr byte
  7478  00396A  0E20               	movlw	high __smallconst
  7479  00396C  6EF7               	movwf	tblptrh,c
  7480  00396E                     	endif
  7481  00396E                     	if	0	;tblptru may be non-zero
  7482  00396E                     	endif
  7483  00396E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7484  00396E  0E00               	movlw	low (__smallconst shr (0+16))
  7485  003970  6EF8               	movwf	tblptru,c
  7486  003972                     	endif
  7487  003972  0008               	tblrd		*
  7488  003974  50F5               	movf	tablat,w,c
  7489  003976  0A25               	xorlw	37
  7490  003978  A4D8               	btfss	status,2,c
  7491  00397A  D015               	goto	l6602
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7495  00397C  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7496  00397E  6ED9               	movwf	fsr2l,c
  7497  003980  6ADA               	clrf	fsr2h,c
  7498  003982  2ADF               	incf	indf2,f,c
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7502  003984  0E00               	movlw	0
  7503  003986  6E09               	movwf	(fputc@c+1)^0,c
  7504  003988  0E25               	movlw	37
  7505  00398A  6E08               	movwf	fputc@c^0,c
  7506  00398C  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  7507  003992  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7508  003998  EC59  F022         	call	_fputc	;wreg free
  7509  00399C                     l6598:
  7510                           
  7511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7512  00399C  0E00               	movlw	0
  7513  00399E  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7514  0039A0  0E01               	movlw	1
  7515  0039A2  6E47               	movwf	?_vfpfcnvrt^0,c
  7516  0039A4  0012               	return	
  7517  0039A6                     l6602:
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7521  0039A6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7522  0039A8  6ED9               	movwf	fsr2l,c
  7523  0039AA  6ADA               	clrf	fsr2h,c
  7524  0039AC  2ADF               	incf	indf2,f,c
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7528  0039AE  0E00               	movlw	0
  7529  0039B0  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7530  0039B2  0E00               	movlw	0
  7531  0039B4  6E47               	movwf	?_vfpfcnvrt^0,c
  7532  0039B6  0012               	return	
  7533  0039B8                     l6608:
  7534                           
  7535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7536  0039B8  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7537  0039BA  6ED9               	movwf	fsr2l,c
  7538  0039BC  6ADA               	clrf	fsr2h,c
  7539  0039BE  006F FF7F FFF6     	movff	indf2,tblptrl
  7540  0039C4                     	if	1	;There is more than 1 active tblptr byte
  7541  0039C4  0E20               	movlw	high __smallconst
  7542  0039C6  6EF7               	movwf	tblptrh,c
  7543  0039C8                     	endif
  7544  0039C8                     	if	0	;tblptru may be non-zero
  7545  0039C8                     	endif
  7546  0039C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7547  0039C8  0E00               	movlw	low (__smallconst shr (0+16))
  7548  0039CA  6EF8               	movwf	tblptru,c
  7549  0039CC                     	endif
  7550  0039CC  0008               	tblrd		*
  7551  0039CE  50F5               	movf	tablat,w,c
  7552  0039D0  6E08               	movwf	fputc@c^0,c
  7553  0039D2  6A09               	clrf	(fputc@c+1)^0,c
  7554  0039D4  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  7555  0039DA  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7556  0039E0  EC59  F022         	call	_fputc	;wreg free
  7557                           
  7558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7559  0039E4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7560  0039E6  6ED9               	movwf	fsr2l,c
  7561  0039E8  6ADA               	clrf	fsr2h,c
  7562  0039EA  2ADF               	incf	indf2,f,c
  7563  0039EC  D7D7               	goto	l6598
  7564  0039EE                     __end_of_vfpfcnvrt:
  7565                           	opt callstack 0
  7566                           
  7567 ;; *************** function _stoa *****************
  7568 ;; Defined at:
  7569 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7572 ;;		 -> sprintf@f(6), NULL(0), 
  7573 ;;  s               2   18[COMRAM] PTR unsigned char 
  7574 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7575 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7576 ;;		 -> STR_4(5), 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  nuls            7   21[COMRAM] unsigned char [7]
  7579 ;;  l               2   36[COMRAM] int 
  7580 ;;  p               2   34[COMRAM] int 
  7581 ;;  cp              2   32[COMRAM] PTR unsigned char 
  7582 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_16(4), 
  7583 ;;		 -> STR_14(4), STR_12(4), STR_10(4), STR_8(4), 
  7584 ;;		 -> STR_6(4), STR_4(5), 
  7585 ;;  w               2   30[COMRAM] int 
  7586 ;;  i               2   28[COMRAM] int 
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  2   16[COMRAM] int 
  7589 ;; Registers used:
  7590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7591 ;; Tracked objects:
  7592 ;;		On entry : 3F/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7597 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7599 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7600 ;;Total ram usage:       22 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; Hardware stack levels required when called:    7
  7603 ;; This function calls:
  7604 ;;		_fputc
  7605 ;;		_strlen
  7606 ;; This function is called by:
  7607 ;;		_vfpfcnvrt
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text49
  7612  0039EE                     __ptext49:
  7613                           	opt callstack 0
  7614  0039EE                     _stoa:
  7615                           	opt callstack 19
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7619                           
  7620                           ;incstack = 0
  7621  0039EE  EE20  F19E         	lfsr	2,stoa@F1139
  7622  0039F2  EE10  F016         	lfsr	1,stoa@nuls
  7623  0039F6  0E06               	movlw	6
  7624  0039F8                     u6421:
  7625  0039F8  006F FF6F FFE3     	movff	plusw2,plusw1
  7626  0039FE  06E8               	decf	wreg,f,c
  7627  003A00  E2FB               	bc	u6421
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7631  003A02  0060  F04C  F021   	movff	stoa@s,stoa@cp
  7632  003A08  0060  F050  F022   	movff	stoa@s+1,stoa@cp+1
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7636  003A0E  5021               	movf	stoa@cp^0,w,c
  7637  003A10  1022               	iorwf	(stoa@cp+1)^0,w,c
  7638  003A12  A4D8               	btfss	status,2,c
  7639  003A14  D003               	goto	l6314
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7643  003A16  0E16               	movlw	low stoa@nuls
  7644  003A18  6E21               	movwf	stoa@cp^0,c
  7645  003A1A  6A22               	clrf	(stoa@cp+1)^0,c
  7646  003A1C                     l6314:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7650  003A1C  0060  F084  F006   	movff	stoa@cp,strlen@s
  7651  003A22  0060  F088  F007   	movff	stoa@cp+1,strlen@s+1
  7652  003A28  EC05  F026         	call	_strlen	;wreg free
  7653  003A2C  0060  F018  F025   	movff	?_strlen,stoa@l
  7654  003A32  0060  F01C  F026   	movff	?_strlen+1,stoa@l+1
  7655                           
  7656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7657  003A38  0060  F278  F023   	movff	_prec,stoa@p
  7658  003A3E  0060  F27C  F024   	movff	_prec+1,stoa@p+1
  7659                           
  7660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7661  003A44  BE24               	btfsc	(stoa@p+1)^0,7,c
  7662  003A46  D010               	goto	l1398
  7663  003A48  5025               	movf	stoa@l^0,w,c
  7664  003A4A  5C23               	subwf	stoa@p^0,w,c
  7665  003A4C  5024               	movf	(stoa@p+1)^0,w,c
  7666  003A4E  0A80               	xorlw	128
  7667  003A50  6E15               	movwf	??_stoa^0,c
  7668  003A52  5026               	movf	(stoa@l+1)^0,w,c
  7669  003A54  0A80               	xorlw	128
  7670  003A56  5815               	subwfb	??_stoa^0,w,c
  7671  003A58  B0D8               	btfsc	status,0,c
  7672  003A5A  D006               	goto	l1398
  7673  003A5C  0060  F08C  F025   	movff	stoa@p,stoa@l
  7674  003A62  0060  F090  F026   	movff	stoa@p+1,stoa@l+1
  7675  003A68                     l1398:
  7676                           
  7677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7678  003A68  0060  F094  F023   	movff	stoa@l,stoa@p
  7679  003A6E  0060  F098  F024   	movff	stoa@l+1,stoa@p+1
  7680                           
  7681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7682  003A74  0060  F630  F01F   	movff	_width,stoa@w
  7683  003A7A  0060  F634  F020   	movff	_width+1,stoa@w+1
  7684                           
  7685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7686  003A80  A056               	btfss	_flags^0,0,c
  7687  003A82  D00F               	goto	l6328
  7688  003A84  D018               	goto	u6470
  7689  003A86                     l6324:
  7690                           
  7691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7692  003A86  0E00               	movlw	0
  7693  003A88  6E09               	movwf	(fputc@c+1)^0,c
  7694  003A8A  0E20               	movlw	32
  7695  003A8C  6E08               	movwf	fputc@c^0,c
  7696  003A8E  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7697  003A94  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7698  003A9A  EC59  F022         	call	_fputc	;wreg free
  7699                           
  7700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7701  003A9E  4A25               	infsnz	stoa@l^0,f,c
  7702  003AA0  2A26               	incf	(stoa@l+1)^0,f,c
  7703  003AA2                     l6328:
  7704                           
  7705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7706  003AA2  501F               	movf	stoa@w^0,w,c
  7707  003AA4  5C25               	subwf	stoa@l^0,w,c
  7708  003AA6  5026               	movf	(stoa@l+1)^0,w,c
  7709  003AA8  0A80               	xorlw	128
  7710  003AAA  6E15               	movwf	??_stoa^0,c
  7711  003AAC  5020               	movf	(stoa@w+1)^0,w,c
  7712  003AAE  0A80               	xorlw	128
  7713  003AB0  5815               	subwfb	??_stoa^0,w,c
  7714  003AB2  A0D8               	btfss	status,0,c
  7715  003AB4  D7E8               	goto	l6324
  7716  003AB6                     u6470:
  7717                           
  7718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7719  003AB6  0E00               	movlw	0
  7720  003AB8  6E1E               	movwf	(stoa@i+1)^0,c
  7721  003ABA  0E00               	movlw	0
  7722  003ABC  6E1D               	movwf	stoa@i^0,c
  7723                           
  7724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7725  003ABE  D025               	goto	l6338
  7726  003AC0                     l6332:
  7727                           
  7728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7729  003AC0  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  7730  003AC6  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  7731  003ACC  0E00               	movlw	low (__smallconst shr (0+16))
  7732  003ACE  6EF8               	movwf	tblptru,c
  7733  003AD0  0E1F               	movlw	(high __ramtop+-1)
  7734  003AD2  64F7               	cpfsgt	tblptrh,c
  7735  003AD4  D003               	bra	u6487
  7736  003AD6  0008               	tblrd		*
  7737  003AD8  50F5               	movf	tablat,w,c
  7738  003ADA  D007               	bra	u6480
  7739  003ADC                     u6487:
  7740  003ADC  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7741  003AE2  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7742  003AE8  50E7               	movf	indf1,w,c
  7743  003AEA                     u6480:
  7744  003AEA  6E15               	movwf	??_stoa^0,c
  7745  003AEC  5015               	movf	??_stoa^0,w,c
  7746  003AEE  6E08               	movwf	fputc@c^0,c
  7747  003AF0  6A09               	clrf	(fputc@c+1)^0,c
  7748  003AF2  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7749  003AF8  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7750  003AFE  EC59  F022         	call	_fputc	;wreg free
  7751                           
  7752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7753  003B02  4A21               	infsnz	stoa@cp^0,f,c
  7754  003B04  2A22               	incf	(stoa@cp+1)^0,f,c
  7755                           
  7756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7757  003B06  4A1D               	infsnz	stoa@i^0,f,c
  7758  003B08  2A1E               	incf	(stoa@i+1)^0,f,c
  7759  003B0A                     l6338:
  7760                           
  7761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7762  003B0A  5023               	movf	stoa@p^0,w,c
  7763  003B0C  5C1D               	subwf	stoa@i^0,w,c
  7764  003B0E  501E               	movf	(stoa@i+1)^0,w,c
  7765  003B10  0A80               	xorlw	128
  7766  003B12  6E15               	movwf	??_stoa^0,c
  7767  003B14  5024               	movf	(stoa@p+1)^0,w,c
  7768  003B16  0A80               	xorlw	128
  7769  003B18  5815               	subwfb	??_stoa^0,w,c
  7770  003B1A  A0D8               	btfss	status,0,c
  7771  003B1C  D7D1               	goto	l6332
  7772                           
  7773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7774  003B1E  B056               	btfsc	_flags^0,0,c
  7775  003B20  D00F               	goto	l6346
  7776  003B22  D018               	goto	u6510
  7777  003B24                     l6342:
  7778                           
  7779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7780  003B24  0E00               	movlw	0
  7781  003B26  6E09               	movwf	(fputc@c+1)^0,c
  7782  003B28  0E20               	movlw	32
  7783  003B2A  6E08               	movwf	fputc@c^0,c
  7784  003B2C  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7785  003B32  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7786  003B38  EC59  F022         	call	_fputc	;wreg free
  7787                           
  7788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7789  003B3C  4A25               	infsnz	stoa@l^0,f,c
  7790  003B3E  2A26               	incf	(stoa@l+1)^0,f,c
  7791  003B40                     l6346:
  7792                           
  7793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7794  003B40  501F               	movf	stoa@w^0,w,c
  7795  003B42  5C25               	subwf	stoa@l^0,w,c
  7796  003B44  5026               	movf	(stoa@l+1)^0,w,c
  7797  003B46  0A80               	xorlw	128
  7798  003B48  6E15               	movwf	??_stoa^0,c
  7799  003B4A  5020               	movf	(stoa@w+1)^0,w,c
  7800  003B4C  0A80               	xorlw	128
  7801  003B4E  5815               	subwfb	??_stoa^0,w,c
  7802  003B50  A0D8               	btfss	status,0,c
  7803  003B52  D7E8               	goto	l6342
  7804  003B54                     u6510:
  7805                           
  7806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  7807                           
  7808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
  7809  003B54  0060  F094  F011   	movff	stoa@l,?_stoa
  7810  003B5A  0060  F098  F012   	movff	stoa@l+1,?_stoa+1
  7811  003B60  0012               	return		;funcret
  7812  003B62                     __end_of_stoa:
  7813                           	opt callstack 0
  7814                           
  7815 ;; *************** function _dtoa *****************
  7816 ;; Defined at:
  7817 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  7820 ;;		 -> sprintf@f(6), NULL(0), 
  7821 ;;  d               8   36[COMRAM] long long 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  n               8   60[COMRAM] long long 
  7824 ;;  i               2   68[COMRAM] int 
  7825 ;;  s               2   58[COMRAM] int 
  7826 ;;  w               2   56[COMRAM] int 
  7827 ;;  p               2   54[COMRAM] int 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  2   34[COMRAM] int 
  7830 ;; Registers used:
  7831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7832 ;; Tracked objects:
  7833 ;;		On entry : 3F/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7837 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7838 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7839 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7840 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7841 ;;Total ram usage:       36 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    9
  7844 ;; This function calls:
  7845 ;;		___aodiv
  7846 ;;		___aomod
  7847 ;;		_abs
  7848 ;;		_pad
  7849 ;; This function is called by:
  7850 ;;		_vfpfcnvrt
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text50
  7855  003058                     __ptext50:
  7856                           	opt callstack 0
  7857  003058                     _dtoa:
  7858                           	opt callstack 17
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7862                           
  7863                           ;incstack = 0
  7864  003058  0060  F094  F03D   	movff	dtoa@d,dtoa@n
  7865  00305E  0060  F098  F03E   	movff	dtoa@d+1,dtoa@n+1
  7866  003064  0060  F09C  F03F   	movff	dtoa@d+2,dtoa@n+2
  7867  00306A  0060  F0A0  F040   	movff	dtoa@d+3,dtoa@n+3
  7868  003070  0060  F0A4  F041   	movff	dtoa@d+4,dtoa@n+4
  7869  003076  0060  F0A8  F042   	movff	dtoa@d+5,dtoa@n+5
  7870  00307C  0060  F0AC  F043   	movff	dtoa@d+6,dtoa@n+6
  7871  003082  0060  F0B0  F044   	movff	dtoa@d+7,dtoa@n+7
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7875  003088  AE44               	btfss	(dtoa@n+7)^0,7,c
  7876  00308A  D002               	goto	u6270
  7877  00308C  0E01               	movlw	1
  7878  00308E  D001               	goto	u6280
  7879  003090                     u6270:
  7880  003090  0E00               	movlw	0
  7881  003092                     u6280:
  7882  003092  6E3B               	movwf	dtoa@s^0,c
  7883  003094  6A3C               	clrf	(dtoa@s+1)^0,c
  7884                           
  7885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7886  003096  503B               	movf	dtoa@s^0,w,c
  7887  003098  103C               	iorwf	(dtoa@s+1)^0,w,c
  7888  00309A  B4D8               	btfsc	status,2,c
  7889  00309C  D010               	goto	l6250
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7893  00309E  1E44               	comf	(dtoa@n+7)^0,f,c
  7894  0030A0  1E43               	comf	(dtoa@n+6)^0,f,c
  7895  0030A2  1E42               	comf	(dtoa@n+5)^0,f,c
  7896  0030A4  1E41               	comf	(dtoa@n+4)^0,f,c
  7897  0030A6  1E40               	comf	(dtoa@n+3)^0,f,c
  7898  0030A8  1E3F               	comf	(dtoa@n+2)^0,f,c
  7899  0030AA  1E3E               	comf	(dtoa@n+1)^0,f,c
  7900  0030AC  6C3D               	negf	dtoa@n^0,c
  7901  0030AE  0E00               	movlw	0
  7902  0030B0  223E               	addwfc	(dtoa@n+1)^0,f,c
  7903  0030B2  223F               	addwfc	(dtoa@n+2)^0,f,c
  7904  0030B4  2240               	addwfc	(dtoa@n+3)^0,f,c
  7905  0030B6  2241               	addwfc	(dtoa@n+4)^0,f,c
  7906  0030B8  2242               	addwfc	(dtoa@n+5)^0,f,c
  7907  0030BA  2243               	addwfc	(dtoa@n+6)^0,f,c
  7908  0030BC  2244               	addwfc	(dtoa@n+7)^0,f,c
  7909  0030BE                     l6250:
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7913  0030BE  AF9F               	btfss	(_prec+1)& (0+255),7,b
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7917  0030C0  9256               	bcf	_flags^0,1,c
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7921  0030C2  BF9F               	btfsc	(_prec+1)& (0+255),7,b
  7922  0030C4  D005               	goto	u6310
  7923  0030C6  519F               	movf	(_prec+1)& (0+255),w,b
  7924  0030C8  E108               	bnz	l1369
  7925  0030CA  059E               	decf	_prec& (0+255),w,b
  7926  0030CC  B0D8               	btfsc	status,0,c
  7927  0030CE  D005               	goto	l1369
  7928  0030D0                     u6310:
  7929                           
  7930                           ; BSR set to: 0
  7931  0030D0  0E00               	movlw	0
  7932  0030D2  6E38               	movwf	(dtoa@p+1)^0,c
  7933  0030D4  0E01               	movlw	1
  7934  0030D6  6E37               	movwf	dtoa@p^0,c
  7935  0030D8  D006               	goto	l1371
  7936  0030DA                     l1369:
  7937                           
  7938                           ; BSR set to: 0
  7939  0030DA  0060  F278  F037   	movff	_prec,dtoa@p
  7940  0030E0  0060  F27C  F038   	movff	_prec+1,dtoa@p+1
  7941  0030E6                     l1371:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7945  0030E6  0060  F630  F039   	movff	_width,dtoa@w
  7946  0030EC  0060  F634  F03A   	movff	_width+1,dtoa@w+1
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7950  0030F2  503B               	movf	dtoa@s^0,w,c
  7951  0030F4  103C               	iorwf	(dtoa@s+1)^0,w,c
  7952  0030F6  A4D8               	btfss	status,2,c
  7953  0030F8  D002               	goto	u6330
  7954                           
  7955                           ; BSR set to: 0
  7956  0030FA  A456               	btfss	_flags^0,2,c
  7957  0030FC  D003               	goto	l6264
  7958  0030FE                     u6330:
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  7962  0030FE  0639               	decf	dtoa@w^0,f,c
  7963  003100  A0D8               	btfss	status,0,c
  7964  003102  063A               	decf	(dtoa@w+1)^0,f,c
  7965  003104                     l6264:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7969  003104  0E00               	movlw	0
  7970  003106  6E46               	movwf	(dtoa@i+1)^0,c
  7971  003108  0E1F               	movlw	31
  7972  00310A  6E45               	movwf	dtoa@i^0,c
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7976  00310C  0E00               	movlw	0
  7977  00310E  0102               	movlb	2	; () banked
  7978  003110  6F9F               	movwf	(_dbuf+31)& (0+255),b
  7979                           
  7980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7981  003112  D09E               	goto	l6278
  7982  003114                     l6268:
  7983                           
  7984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  7985  003114  0645               	decf	dtoa@i^0,f,c
  7986  003116  A0D8               	btfss	status,0,c
  7987  003118  0646               	decf	(dtoa@i+1)^0,f,c
  7988                           
  7989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7990  00311A  0E80               	movlw	low _dbuf
  7991  00311C  2445               	addwf	dtoa@i^0,w,c
  7992  00311E  6ED9               	movwf	fsr2l,c
  7993  003120  0E02               	movlw	high _dbuf
  7994  003122  2046               	addwfc	(dtoa@i+1)^0,w,c
  7995  003124  6EDA               	movwf	fsr2h,c
  7996  003126  0060  F0F4  F006   	movff	dtoa@n,___aomod@dividend
  7997  00312C  0060  F0F8  F007   	movff	dtoa@n+1,___aomod@dividend+1
  7998  003132  0060  F0FC  F008   	movff	dtoa@n+2,___aomod@dividend+2
  7999  003138  0060  F100  F009   	movff	dtoa@n+3,___aomod@dividend+3
  8000  00313E  0060  F104  F00A   	movff	dtoa@n+4,___aomod@dividend+4
  8001  003144  0060  F108  F00B   	movff	dtoa@n+5,___aomod@dividend+5
  8002  00314A  0060  F10C  F00C   	movff	dtoa@n+6,___aomod@dividend+6
  8003  003150  0060  F110  F00D   	movff	dtoa@n+7,___aomod@dividend+7
  8004  003156  0E0A               	movlw	10
  8005  003158  6E0E               	movwf	___aomod@divisor^0,c
  8006  00315A  0E00               	movlw	0
  8007  00315C  6E0F               	movwf	(___aomod@divisor+1)^0,c
  8008  00315E  0E00               	movlw	0
  8009  003160  6E10               	movwf	(___aomod@divisor+2)^0,c
  8010  003162  0E00               	movlw	0
  8011  003164  6E11               	movwf	(___aomod@divisor+3)^0,c
  8012  003166  0E00               	movlw	0
  8013  003168  6E12               	movwf	(___aomod@divisor+4)^0,c
  8014  00316A  0E00               	movlw	0
  8015  00316C  6E13               	movwf	(___aomod@divisor+5)^0,c
  8016  00316E  0E00               	movlw	0
  8017  003170  6E14               	movwf	(___aomod@divisor+6)^0,c
  8018  003172  0E00               	movlw	0
  8019  003174  6E15               	movwf	(___aomod@divisor+7)^0,c
  8020  003176  EC0F  F01F         	call	___aomod	;wreg free
  8021  00317A  0060  F018  F02D   	movff	?___aomod,??_dtoa
  8022  003180  0060  F01C  F02E   	movff	?___aomod+1,??_dtoa+1
  8023  003186  0060  F020  F02F   	movff	?___aomod+2,??_dtoa+2
  8024  00318C  0060  F024  F030   	movff	?___aomod+3,??_dtoa+3
  8025  003192  0060  F028  F031   	movff	?___aomod+4,??_dtoa+4
  8026  003198  0060  F02C  F032   	movff	?___aomod+5,??_dtoa+5
  8027  00319E  0060  F030  F033   	movff	?___aomod+6,??_dtoa+6
  8028  0031A4  0060  F034  F034   	movff	?___aomod+7,??_dtoa+7
  8029  0031AA  0060  F0B4  F018   	movff	??_dtoa,abs@a
  8030  0031B0  0060  F0BC  F019   	movff	??_dtoa+2,abs@a+1
  8031  0031B6  EC1E  F027         	call	_abs	;wreg free
  8032  0031BA  5018               	movf	?_abs^0,w,c
  8033  0031BC  0F30               	addlw	48
  8034  0031BE  6EDF               	movwf	indf2,c
  8035                           
  8036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  8037  0031C0  0637               	decf	dtoa@p^0,f,c
  8038  0031C2  A0D8               	btfss	status,0,c
  8039  0031C4  0638               	decf	(dtoa@p+1)^0,f,c
  8040                           
  8041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  8042  0031C6  0639               	decf	dtoa@w^0,f,c
  8043  0031C8  A0D8               	btfss	status,0,c
  8044  0031CA  063A               	decf	(dtoa@w+1)^0,f,c
  8045                           
  8046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8047  0031CC  0060  F0F4  F006   	movff	dtoa@n,___aodiv@dividend
  8048  0031D2  0060  F0F8  F007   	movff	dtoa@n+1,___aodiv@dividend+1
  8049  0031D8  0060  F0FC  F008   	movff	dtoa@n+2,___aodiv@dividend+2
  8050  0031DE  0060  F100  F009   	movff	dtoa@n+3,___aodiv@dividend+3
  8051  0031E4  0060  F104  F00A   	movff	dtoa@n+4,___aodiv@dividend+4
  8052  0031EA  0060  F108  F00B   	movff	dtoa@n+5,___aodiv@dividend+5
  8053  0031F0  0060  F10C  F00C   	movff	dtoa@n+6,___aodiv@dividend+6
  8054  0031F6  0060  F110  F00D   	movff	dtoa@n+7,___aodiv@dividend+7
  8055  0031FC  0E0A               	movlw	10
  8056  0031FE  6E0E               	movwf	___aodiv@divisor^0,c
  8057  003200  0E00               	movlw	0
  8058  003202  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  8059  003204  0E00               	movlw	0
  8060  003206  6E10               	movwf	(___aodiv@divisor+2)^0,c
  8061  003208  0E00               	movlw	0
  8062  00320A  6E11               	movwf	(___aodiv@divisor+3)^0,c
  8063  00320C  0E00               	movlw	0
  8064  00320E  6E12               	movwf	(___aodiv@divisor+4)^0,c
  8065  003210  0E00               	movlw	0
  8066  003212  6E13               	movwf	(___aodiv@divisor+5)^0,c
  8067  003214  0E00               	movlw	0
  8068  003216  6E14               	movwf	(___aodiv@divisor+6)^0,c
  8069  003218  0E00               	movlw	0
  8070  00321A  6E15               	movwf	(___aodiv@divisor+7)^0,c
  8071  00321C  EC63  F01E         	call	___aodiv	;wreg free
  8072  003220  0060  F018  F03D   	movff	?___aodiv,dtoa@n
  8073  003226  0060  F01C  F03E   	movff	?___aodiv+1,dtoa@n+1
  8074  00322C  0060  F020  F03F   	movff	?___aodiv+2,dtoa@n+2
  8075  003232  0060  F024  F040   	movff	?___aodiv+3,dtoa@n+3
  8076  003238  0060  F028  F041   	movff	?___aodiv+4,dtoa@n+4
  8077  00323E  0060  F02C  F042   	movff	?___aodiv+5,dtoa@n+5
  8078  003244  0060  F030  F043   	movff	?___aodiv+6,dtoa@n+6
  8079  00324A  0060  F034  F044   	movff	?___aodiv+7,dtoa@n+7
  8080  003250                     l6278:
  8081                           
  8082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8083  003250  BE46               	btfsc	(dtoa@i+1)^0,7,c
  8084  003252  D01F               	goto	u6380
  8085  003254  5046               	movf	(dtoa@i+1)^0,w,c
  8086  003256  E103               	bnz	u6340
  8087  003258  0445               	decf	dtoa@i^0,w,c
  8088  00325A  A0D8               	btfss	status,0,c
  8089  00325C  D01A               	goto	u6380
  8090  00325E                     u6340:
  8091  00325E  503D               	movf	dtoa@n^0,w,c
  8092  003260  103E               	iorwf	(dtoa@n+1)^0,w,c
  8093  003262  103F               	iorwf	(dtoa@n+2)^0,w,c
  8094  003264  1040               	iorwf	(dtoa@n+3)^0,w,c
  8095  003266  1041               	iorwf	(dtoa@n+4)^0,w,c
  8096  003268  1042               	iorwf	(dtoa@n+5)^0,w,c
  8097  00326A  1043               	iorwf	(dtoa@n+6)^0,w,c
  8098  00326C  1044               	iorwf	(dtoa@n+7)^0,w,c
  8099  00326E  A4D8               	btfss	status,2,c
  8100  003270  D751               	goto	l6268
  8101  003272  BE38               	btfsc	(dtoa@p+1)^0,7,c
  8102  003274  D005               	goto	u6360
  8103  003276  5038               	movf	(dtoa@p+1)^0,w,c
  8104  003278  E102               	bnz	u6361
  8105  00327A  0437               	decf	dtoa@p^0,w,c
  8106  00327C  B0D8               	btfsc	status,0,c
  8107  00327E                     u6361:
  8108  00327E  D74A               	goto	l6268
  8109  003280                     u6360:
  8110  003280  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  8111  003282  D007               	goto	u6380
  8112  003284  503A               	movf	(dtoa@w+1)^0,w,c
  8113  003286  E103               	bnz	u6370
  8114  003288  0439               	decf	dtoa@w^0,w,c
  8115  00328A  A0D8               	btfss	status,0,c
  8116  00328C  D002               	goto	u6380
  8117  00328E                     u6370:
  8118  00328E  B256               	btfsc	_flags^0,1,c
  8119  003290  D741               	goto	l6268
  8120  003292                     u6380:
  8121                           
  8122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8123  003292  503B               	movf	dtoa@s^0,w,c
  8124  003294  103C               	iorwf	(dtoa@s+1)^0,w,c
  8125  003296  A4D8               	btfss	status,2,c
  8126  003298  D002               	goto	u6400
  8127  00329A  A456               	btfss	_flags^0,2,c
  8128  00329C  D018               	goto	l6302
  8129  00329E                     u6400:
  8130                           
  8131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  8132  00329E  0645               	decf	dtoa@i^0,f,c
  8133  0032A0  A0D8               	btfss	status,0,c
  8134  0032A2  0646               	decf	(dtoa@i+1)^0,f,c
  8135                           
  8136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8137  0032A4  503B               	movf	dtoa@s^0,w,c
  8138  0032A6  103C               	iorwf	(dtoa@s+1)^0,w,c
  8139  0032A8  A4D8               	btfss	status,2,c
  8140  0032AA  D004               	goto	l6298
  8141  0032AC  0E00               	movlw	0
  8142  0032AE  6E36               	movwf	(_dtoa$2719+1)^0,c
  8143  0032B0  0E2B               	movlw	43
  8144  0032B2  D003               	goto	L10
  8145  0032B4                     l6298:
  8146  0032B4  0E00               	movlw	0
  8147  0032B6  6E36               	movwf	(_dtoa$2719+1)^0,c
  8148  0032B8  0E2D               	movlw	45
  8149  0032BA                     L10:
  8150  0032BA  6E35               	movwf	_dtoa$2719^0,c
  8151  0032BC  0E80               	movlw	low _dbuf
  8152  0032BE  2445               	addwf	dtoa@i^0,w,c
  8153  0032C0  6ED9               	movwf	fsr2l,c
  8154  0032C2  0E02               	movlw	high _dbuf
  8155  0032C4  2046               	addwfc	(dtoa@i+1)^0,w,c
  8156  0032C6  6EDA               	movwf	fsr2h,c
  8157  0032C8  0060  F0D7  FFDF   	movff	_dtoa$2719,indf2
  8158  0032CE                     l6302:
  8159                           
  8160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8161  0032CE  0060  F08C  F018   	movff	dtoa@fp,pad@fp
  8162  0032D4  0060  F090  F019   	movff	dtoa@fp+1,pad@fp+1
  8163  0032DA  0E80               	movlw	low _dbuf
  8164  0032DC  2445               	addwf	dtoa@i^0,w,c
  8165  0032DE  6E1A               	movwf	pad@buf^0,c
  8166  0032E0  0E02               	movlw	high _dbuf
  8167  0032E2  2046               	addwfc	(dtoa@i+1)^0,w,c
  8168  0032E4  6E1B               	movwf	(pad@buf+1)^0,c
  8169  0032E6  0060  F0E4  F01C   	movff	dtoa@w,pad@p
  8170  0032EC  0060  F0E8  F01D   	movff	dtoa@w+1,pad@p+1
  8171  0032F2  EC00  F022         	call	_pad	;wreg free
  8172  0032F6  0060  F060  F023   	movff	?_pad,?_dtoa
  8173  0032FC  0060  F064  F024   	movff	?_pad+1,?_dtoa+1
  8174  003302  0012               	return		;funcret
  8175  003304                     __end_of_dtoa:
  8176                           	opt callstack 0
  8177                           
  8178 ;; *************** function _pad *****************
  8179 ;; Defined at:
  8180 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8183 ;;		 -> sprintf@f(6), NULL(0), 
  8184 ;;  buf             2   25[COMRAM] PTR unsigned char 
  8185 ;;		 -> dbuf(32), 
  8186 ;;  p               2   27[COMRAM] int 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  w               2   32[COMRAM] int 
  8189 ;;  i               2   30[COMRAM] int 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  2   23[COMRAM] int 
  8192 ;; Registers used:
  8193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/2
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8199 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8202 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;Total ram usage:       11 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    8
  8206 ;; This function calls:
  8207 ;;		_fputc
  8208 ;;		_fputs
  8209 ;;		_strlen
  8210 ;; This function is called by:
  8211 ;;		_dtoa
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text51
  8216  004400                     __ptext51:
  8217                           	opt callstack 0
  8218  004400                     _pad:
  8219                           	opt callstack 17
  8220                           
  8221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8222                           
  8223                           ;incstack = 0
  8224  004400  A056               	btfss	_flags^0,0,c
  8225  004402  D00E               	goto	l6142
  8226                           
  8227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8228  004404  0060  F068  F011   	movff	pad@buf,fputs@s
  8229  00440A  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  8230  004410  0060  F060  F013   	movff	pad@fp,fputs@fp
  8231  004416  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  8232  00441C  ECFF  F026         	call	_fputs	;wreg free
  8233  004420                     l6142:
  8234                           
  8235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8236  004420  BE1D               	btfsc	(pad@p+1)^0,7,c
  8237  004422  D007               	goto	l6146
  8238  004424  0060  F070  F021   	movff	pad@p,pad@w
  8239  00442A  0060  F074  F022   	movff	pad@p+1,pad@w+1
  8240  004430  D004               	goto	l1358
  8241  004432                     l6146:
  8242  004432  0E00               	movlw	0
  8243  004434  6E22               	movwf	(pad@w+1)^0,c
  8244  004436  0E00               	movlw	0
  8245  004438  6E21               	movwf	pad@w^0,c
  8246  00443A                     l1358:
  8247                           
  8248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8249  00443A  0E00               	movlw	0
  8250  00443C  6E20               	movwf	(pad@i+1)^0,c
  8251  00443E  0E00               	movlw	0
  8252  004440  6E1F               	movwf	pad@i^0,c
  8253                           
  8254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8255  004442  D00E               	goto	l6152
  8256  004444                     l6148:
  8257                           
  8258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8259  004444  0E00               	movlw	0
  8260  004446  6E09               	movwf	(fputc@c+1)^0,c
  8261  004448  0E20               	movlw	32
  8262  00444A  6E08               	movwf	fputc@c^0,c
  8263  00444C  0060  F060  F00A   	movff	pad@fp,fputc@fp
  8264  004452  0060  F064  F00B   	movff	pad@fp+1,fputc@fp+1
  8265  004458  EC59  F022         	call	_fputc	;wreg free
  8266                           
  8267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8268  00445C  4A1F               	infsnz	pad@i^0,f,c
  8269  00445E  2A20               	incf	(pad@i+1)^0,f,c
  8270  004460                     l6152:
  8271                           
  8272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8273  004460  5021               	movf	pad@w^0,w,c
  8274  004462  5C1F               	subwf	pad@i^0,w,c
  8275  004464  5020               	movf	(pad@i+1)^0,w,c
  8276  004466  0A80               	xorlw	128
  8277  004468  6E1E               	movwf	??_pad^0,c
  8278  00446A  5022               	movf	(pad@w+1)^0,w,c
  8279  00446C  0A80               	xorlw	128
  8280  00446E  581E               	subwfb	??_pad^0,w,c
  8281  004470  A0D8               	btfss	status,0,c
  8282  004472  D7E8               	goto	l6148
  8283                           
  8284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8285  004474  B056               	btfsc	_flags^0,0,c
  8286  004476  D00E               	goto	l6156
  8287                           
  8288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8289  004478  0060  F068  F011   	movff	pad@buf,fputs@s
  8290  00447E  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  8291  004484  0060  F060  F013   	movff	pad@fp,fputs@fp
  8292  00448A  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  8293  004490  ECFF  F026         	call	_fputs	;wreg free
  8294  004494                     l6156:
  8295                           
  8296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8297  004494  0060  F068  F006   	movff	pad@buf,strlen@s
  8298  00449A  0060  F06C  F007   	movff	pad@buf+1,strlen@s+1
  8299  0044A0  EC05  F026         	call	_strlen	;wreg free
  8300  0044A4  5021               	movf	pad@w^0,w,c
  8301  0044A6  2406               	addwf	?_strlen^0,w,c
  8302  0044A8  6E18               	movwf	?_pad^0,c
  8303  0044AA  5022               	movf	(pad@w+1)^0,w,c
  8304  0044AC  2007               	addwfc	(?_strlen+1)^0,w,c
  8305  0044AE  6E19               	movwf	(?_pad+1)^0,c
  8306  0044B0  0012               	return		;funcret
  8307  0044B2                     __end_of_pad:
  8308                           	opt callstack 0
  8309                           
  8310 ;; *************** function _strlen *****************
  8311 ;; Defined at:
  8312 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8315 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8316 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8317 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8318 ;;		 -> work_sw@buffer(128), 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  a               2    7[COMRAM] PTR const unsigned char 
  8321 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8322 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8323 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8324 ;;		 -> work_sw@buffer(128), 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  2    5[COMRAM] unsigned int 
  8327 ;; Registers used:
  8328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/1
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;Total ram usage:        4 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    4
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_eaDogM_WriteString
  8345 ;;		_pad
  8346 ;;		_stoa
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text52
  8351  004C0A                     __ptext52:
  8352                           	opt callstack 0
  8353  004C0A                     _strlen:
  8354                           	opt callstack 21
  8355                           
  8356                           ;incstack = 0
  8357  004C0A  0060  F018  F008   	movff	strlen@s,strlen@a
  8358  004C10  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  8359  004C16  D002               	goto	l6124
  8360  004C18                     l6122:
  8361  004C18  4A06               	infsnz	strlen@s^0,f,c
  8362  004C1A  2A07               	incf	(strlen@s+1)^0,f,c
  8363  004C1C                     l6124:
  8364  004C1C  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  8365  004C22  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  8366  004C28  0E00               	movlw	low (__smallconst shr (0+16))
  8367  004C2A  6EF8               	movwf	tblptru,c
  8368  004C2C  0E1F               	movlw	(high __ramtop+-1)
  8369  004C2E  64F7               	cpfsgt	tblptrh,c
  8370  004C30  D003               	bra	u6067
  8371  004C32  0008               	tblrd		*
  8372  004C34  50F5               	movf	tablat,w,c
  8373  004C36  D007               	bra	u6060
  8374  004C38                     u6067:
  8375  004C38  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8376  004C3E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8377  004C44  50E7               	movf	indf1,w,c
  8378  004C46                     u6060:
  8379  004C46  0900               	iorlw	0
  8380  004C48  A4D8               	btfss	status,2,c
  8381  004C4A  D7E6               	goto	l6122
  8382  004C4C  5008               	movf	strlen@a^0,w,c
  8383  004C4E  5C06               	subwf	strlen@s^0,w,c
  8384  004C50  6E06               	movwf	?_strlen^0,c
  8385  004C52  5009               	movf	(strlen@a+1)^0,w,c
  8386  004C54  5807               	subwfb	(strlen@s+1)^0,w,c
  8387  004C56  6E07               	movwf	(?_strlen+1)^0,c
  8388  004C58  0012               	return		;funcret
  8389  004C5A                     __end_of_strlen:
  8390                           	opt callstack 0
  8391                           
  8392 ;; *************** function _fputs *****************
  8393 ;; Defined at:
  8394 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8397 ;;		 -> dbuf(32), 
  8398 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8399 ;;		 -> sprintf@f(6), NULL(0), 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  i               2   21[COMRAM] int 
  8402 ;;  c               1   20[COMRAM] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  2   16[COMRAM] int 
  8405 ;; Registers used:
  8406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/2
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8413 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8415 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8416 ;;Total ram usage:        7 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    7
  8419 ;; This function calls:
  8420 ;;		_fputc
  8421 ;; This function is called by:
  8422 ;;		_pad
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text53
  8427  004DFE                     __ptext53:
  8428                           	opt callstack 0
  8429  004DFE                     _fputs:
  8430                           	opt callstack 17
  8431                           
  8432                           ;incstack = 0
  8433  004DFE  0E00               	movlw	0
  8434  004E00  6E17               	movwf	(fputs@i+1)^0,c
  8435  004E02  0E00               	movlw	0
  8436  004E04  6E16               	movwf	fputs@i^0,c
  8437  004E06  D00E               	goto	l6136
  8438  004E08                     l6132:
  8439  004E08  0060  F054  F008   	movff	fputs@c,fputc@c
  8440  004E0E  6A09               	clrf	(fputc@c+1)^0,c
  8441  004E10  0060  F04C  F00A   	movff	fputs@fp,fputc@fp
  8442  004E16  0060  F050  F00B   	movff	fputs@fp+1,fputc@fp+1
  8443  004E1C  EC59  F022         	call	_fputc	;wreg free
  8444  004E20  4A16               	infsnz	fputs@i^0,f,c
  8445  004E22  2A17               	incf	(fputs@i+1)^0,f,c
  8446  004E24                     l6136:
  8447  004E24  5016               	movf	fputs@i^0,w,c
  8448  004E26  2411               	addwf	fputs@s^0,w,c
  8449  004E28  6ED9               	movwf	fsr2l,c
  8450  004E2A  5017               	movf	(fputs@i+1)^0,w,c
  8451  004E2C  2012               	addwfc	(fputs@s+1)^0,w,c
  8452  004E2E  6EDA               	movwf	fsr2h,c
  8453  004E30  50DF               	movf	indf2,w,c
  8454  004E32  6E15               	movwf	fputs@c^0,c
  8455  004E34  5015               	movf	fputs@c^0,w,c
  8456  004E36  B4D8               	btfsc	status,2,c
  8457  004E38  0012               	return	
  8458  004E3A  D7E6               	goto	l6132
  8459  004E3C                     __end_of_fputs:
  8460                           	opt callstack 0
  8461                           
  8462 ;; *************** function _fputc *****************
  8463 ;; Defined at:
  8464 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;  c               2    7[COMRAM] int 
  8467 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8468 ;;		 -> sprintf@f(6), NULL(0), 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;		None
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  2    7[COMRAM] int 
  8473 ;; Registers used:
  8474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8482 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8483 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8484 ;;Total ram usage:        9 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:    6
  8487 ;; This function calls:
  8488 ;;		_putch
  8489 ;; This function is called by:
  8490 ;;		_pad
  8491 ;;		_stoa
  8492 ;;		_vfpfcnvrt
  8493 ;;		_fputs
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text54
  8498  0044B2                     __ptext54:
  8499                           	opt callstack 0
  8500  0044B2                     _fputc:
  8501                           	opt callstack 19
  8502                           
  8503                           ;incstack = 0
  8504  0044B2  500A               	movf	fputc@fp^0,w,c
  8505  0044B4  100B               	iorwf	(fputc@fp+1)^0,w,c
  8506  0044B6  B4D8               	btfsc	status,2,c
  8507  0044B8  D004               	goto	u6030
  8508  0044BA  500A               	movf	fputc@fp^0,w,c
  8509  0044BC  100B               	iorwf	(fputc@fp+1)^0,w,c
  8510  0044BE  A4D8               	btfss	status,2,c
  8511  0044C0  D004               	goto	l6112
  8512  0044C2                     u6030:
  8513  0044C2  5008               	movf	fputc@c^0,w,c
  8514  0044C4  EC6A  F02A         	call	_putch
  8515  0044C8  0012               	return	
  8516  0044CA                     l6112:
  8517  0044CA  EE20 F004          	lfsr	2,4
  8518  0044CE  500A               	movf	fputc@fp^0,w,c
  8519  0044D0  26D9               	addwf	fsr2l,f,c
  8520  0044D2  500B               	movf	(fputc@fp+1)^0,w,c
  8521  0044D4  22DA               	addwfc	fsr2h,f,c
  8522  0044D6  50DE               	movf	postinc2,w,c
  8523  0044D8  10DE               	iorwf	postinc2,w,c
  8524  0044DA  B4D8               	btfsc	status,2,c
  8525  0044DC  D016               	goto	u6050
  8526  0044DE  EE20 F004          	lfsr	2,4
  8527  0044E2  500A               	movf	fputc@fp^0,w,c
  8528  0044E4  26D9               	addwf	fsr2l,f,c
  8529  0044E6  500B               	movf	(fputc@fp+1)^0,w,c
  8530  0044E8  22DA               	addwfc	fsr2h,f,c
  8531  0044EA  EE10 F002          	lfsr	1,2
  8532  0044EE  500A               	movf	fputc@fp^0,w,c
  8533  0044F0  26E1               	addwf	fsr1l,f,c
  8534  0044F2  500B               	movf	(fputc@fp+1)^0,w,c
  8535  0044F4  22E2               	addwfc	fsr1h,f,c
  8536  0044F6  50DE               	movf	postinc2,w,c
  8537  0044F8  5CE6               	subwf	postinc1,w,c
  8538  0044FA  50E6               	movf	postinc1,w,c
  8539  0044FC  0A80               	xorlw	128
  8540  0044FE  6E10               	movwf	(??_fputc+4)^0,c
  8541  004500  50DE               	movf	postinc2,w,c
  8542  004502  0A80               	xorlw	128
  8543  004504  5810               	subwfb	(??_fputc+4)^0,w,c
  8544  004506  B0D8               	btfsc	status,0,c
  8545  004508  0012               	return	
  8546  00450A                     u6050:
  8547  00450A  EE20 F002          	lfsr	2,2
  8548  00450E  500A               	movf	fputc@fp^0,w,c
  8549  004510  26D9               	addwf	fsr2l,f,c
  8550  004512  500B               	movf	(fputc@fp+1)^0,w,c
  8551  004514  22DA               	addwfc	fsr2h,f,c
  8552  004516  006F FF78  F00C    	movff	postinc2,??_fputc
  8553  00451C  006F FF74  F00D    	movff	postdec2,??_fputc+1
  8554  004522  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  8555  004528  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  8556  00452E  006F FF78  F00E    	movff	postinc2,??_fputc+2
  8557  004534  006F FF74  F00F    	movff	postdec2,??_fputc+3
  8558  00453A  500C               	movf	??_fputc^0,w,c
  8559  00453C  240E               	addwf	(??_fputc+2)^0,w,c
  8560  00453E  6ED9               	movwf	fsr2l,c
  8561  004540  500D               	movf	(??_fputc+1)^0,w,c
  8562  004542  200F               	addwfc	(??_fputc+3)^0,w,c
  8563  004544  6EDA               	movwf	fsr2h,c
  8564  004546  0060  F023  FFDF   	movff	fputc@c,indf2
  8565  00454C  EE20 F002          	lfsr	2,2
  8566  004550  500A               	movf	fputc@fp^0,w,c
  8567  004552  26D9               	addwf	fsr2l,f,c
  8568  004554  500B               	movf	(fputc@fp+1)^0,w,c
  8569  004556  22DA               	addwfc	fsr2h,f,c
  8570  004558  2ADE               	incf	postinc2,f,c
  8571  00455A  0E00               	movlw	0
  8572  00455C  22DD               	addwfc	postdec2,f,c
  8573  00455E  0012               	return		;funcret
  8574  004560                     __end_of_fputc:
  8575                           	opt callstack 0
  8576                           
  8577 ;; *************** function _putch *****************
  8578 ;; Defined at:
  8579 ;;		line 221 in file "mcc_generated_files/uart2.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  txData          1    wreg     unsigned char 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;  txData          1    6[COMRAM] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 3F/39
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8597 ;;Total ram usage:        1 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    5
  8600 ;; This function calls:
  8601 ;;		_UART2_Write
  8602 ;; This function is called by:
  8603 ;;		_fputc
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text55
  8608  0054D4                     __ptext55:
  8609                           	opt callstack 0
  8610  0054D4                     _putch:
  8611                           	opt callstack 19
  8612                           
  8613                           ;incstack = 0
  8614                           ;putch@txData stored from wreg
  8615  0054D4  6E07               	movwf	putch@txData^0,c
  8616                           
  8617                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  8618  0054D6  5007               	movf	putch@txData^0,w,c
  8619  0054D8  ECDE  F026         	call	_UART2_Write
  8620                           
  8621                           ; BSR set to: 57
  8622  0054DC  0012               	return		;funcret
  8623  0054DE                     __end_of_putch:
  8624                           	opt callstack 0
  8625                           
  8626 ;; *************** function _UART2_Write *****************
  8627 ;; Defined at:
  8628 ;;		line 193 in file "mcc_generated_files/uart2.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  txData          1    wreg     unsigned char 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  txData          1    5[COMRAM] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      void 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 3F/39
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8646 ;;Total ram usage:        1 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    4
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_putch
  8653 ;;		_Digital232_RW
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text56
  8658  004DBC                     __ptext56:
  8659                           	opt callstack 0
  8660  004DBC                     _UART2_Write:
  8661                           	opt callstack 19
  8662                           
  8663                           ; BSR set to: 57
  8664                           ;incstack = 0
  8665                           ;UART2_Write@txData stored from wreg
  8666  004DBC  6E06               	movwf	UART2_Write@txData^0,c
  8667  004DBE                     
  8668                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8669                           
  8670                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8671  004DBE  0100               	movlb	0	; () banked
  8672  004DC0  51A4               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  8673  004DC2  B4D8               	btfsc	status,2,c
  8674  004DC4  D7FC               	goto	l6086
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  8678  004DC6  0139               	movlb	57	; () banked
  8679  004DC8  B796               	btfsc	150,3,b	;volatile
  8680  004DCA  D004               	goto	l494
  8681                           
  8682                           ; BSR set to: 57
  8683                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  8684  004DCC  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  8685                           
  8686                           ;mcc_generated_files/uart2.c: 202:     }
  8687  004DD2  D012               	goto	l6102
  8688  004DD4                     l494:
  8689                           
  8690                           ; BSR set to: 57
  8691                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  8692  004DD4  9796               	bcf	150,3,b	;volatile
  8693                           
  8694                           ; BSR set to: 57
  8695                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  8696  004DD6  0E42               	movlw	low _uart2TxBuffer
  8697  004DD8  0100               	movlb	0	; () banked
  8698  004DDA  25A6               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  8699  004DDC  6ED9               	movwf	fsr2l,c
  8700  004DDE  6ADA               	clrf	fsr2h,c
  8701  004DE0  0E01               	movlw	high _uart2TxBuffer
  8702  004DE2  22DA               	addwfc	fsr2h,f,c
  8703  004DE4  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  8704                           
  8705                           ; BSR set to: 0
  8706  004DEA  2BA6               	incf	_uart2TxHead& (0+255),f,b	;volatile
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  8710  004DEC  0E07               	movlw	7
  8711  004DEE  65A6               	cpfsgt	_uart2TxHead& (0+255),b
  8712  004DF0  D002               	goto	l6100
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  8716  004DF2  0E00               	movlw	0
  8717  004DF4  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  8718  004DF6                     l6100:
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  8722  004DF6  07A4               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  8723  004DF8                     l6102:
  8724                           
  8725                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  8726  004DF8  0139               	movlb	57	; () banked
  8727  004DFA  8796               	bsf	150,3,b	;volatile
  8728                           
  8729                           ; BSR set to: 57
  8730  004DFC  0012               	return		;funcret
  8731  004DFE                     __end_of_UART2_Write:
  8732                           	opt callstack 0
  8733                           
  8734 ;; *************** function _abs *****************
  8735 ;; Defined at:
  8736 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  a               2   23[COMRAM] int 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  2   23[COMRAM] int 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/2
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8754 ;;Total ram usage:        4 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    4
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_dtoa
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text57
  8765  004E3C                     __ptext57:
  8766                           	opt callstack 0
  8767  004E3C                     _abs:
  8768                           	opt callstack 21
  8769                           
  8770                           ; BSR set to: 57
  8771                           ;incstack = 0
  8772  004E3C  BE19               	btfsc	(abs@a+1)^0,7,c
  8773  004E3E  D005               	goto	u6130
  8774  004E40  5019               	movf	(abs@a+1)^0,w,c
  8775  004E42  E114               	bnz	l2105
  8776  004E44  0418               	decf	abs@a^0,w,c
  8777  004E46  B0D8               	btfsc	status,0,c
  8778  004E48  D011               	goto	l2105
  8779  004E4A                     u6130:
  8780  004E4A  0060  F060  F01A   	movff	abs@a,??_abs
  8781  004E50  0060  F064  F01B   	movff	abs@a+1,??_abs+1
  8782  004E56  1E1A               	comf	??_abs^0,f,c
  8783  004E58  1E1B               	comf	(??_abs+1)^0,f,c
  8784  004E5A  4A1A               	infsnz	??_abs^0,f,c
  8785  004E5C  2A1B               	incf	(??_abs+1)^0,f,c
  8786  004E5E  0060  F068  F018   	movff	??_abs,?_abs
  8787  004E64  0060  F06C  F019   	movff	??_abs+1,?_abs+1
  8788  004E6A  0012               	return	
  8789  004E6C                     l2105:
  8790  004E6C  0060  F060  F018   	movff	abs@a,?_abs
  8791  004E72  0060  F064  F019   	movff	abs@a+1,?_abs+1
  8792  004E78  0012               	return		;funcret
  8793  004E7A                     __end_of_abs:
  8794                           	opt callstack 0
  8795                           
  8796 ;; *************** function ___aomod *****************
  8797 ;; Defined at:
  8798 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  dividend        8    5[COMRAM] long long 
  8801 ;;  divisor         8   13[COMRAM] long long 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  sign            1   22[COMRAM] unsigned char 
  8804 ;;  counter         1   21[COMRAM] unsigned char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  8    5[COMRAM] long long 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/2
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8814 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8817 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8818 ;;Total ram usage:       18 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    4
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_dtoa
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text58
  8829  003E1E                     __ptext58:
  8830                           	opt callstack 0
  8831  003E1E                     ___aomod:
  8832                           	opt callstack 21
  8833                           
  8834                           ;incstack = 0
  8835  003E1E  0E00               	movlw	0
  8836  003E20  6E17               	movwf	___aomod@sign^0,c
  8837  003E22  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  8838  003E24  D012               	goto	l6216
  8839  003E26  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  8840  003E28  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  8841  003E2A  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  8842  003E2C  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  8843  003E2E  1E09               	comf	(___aomod@dividend+3)^0,f,c
  8844  003E30  1E08               	comf	(___aomod@dividend+2)^0,f,c
  8845  003E32  1E07               	comf	(___aomod@dividend+1)^0,f,c
  8846  003E34  6C06               	negf	___aomod@dividend^0,c
  8847  003E36  0E00               	movlw	0
  8848  003E38  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  8849  003E3A  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  8850  003E3C  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  8851  003E3E  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  8852  003E40  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  8853  003E42  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  8854  003E44  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  8855  003E46  0E01               	movlw	1
  8856  003E48  6E17               	movwf	___aomod@sign^0,c
  8857  003E4A                     l6216:
  8858  003E4A  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8859  003E4C  D010               	goto	l6220
  8860  003E4E  1E15               	comf	(___aomod@divisor+7)^0,f,c
  8861  003E50  1E14               	comf	(___aomod@divisor+6)^0,f,c
  8862  003E52  1E13               	comf	(___aomod@divisor+5)^0,f,c
  8863  003E54  1E12               	comf	(___aomod@divisor+4)^0,f,c
  8864  003E56  1E11               	comf	(___aomod@divisor+3)^0,f,c
  8865  003E58  1E10               	comf	(___aomod@divisor+2)^0,f,c
  8866  003E5A  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  8867  003E5C  6C0E               	negf	___aomod@divisor^0,c
  8868  003E5E  0E00               	movlw	0
  8869  003E60  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  8870  003E62  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  8871  003E64  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  8872  003E66  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  8873  003E68  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  8874  003E6A  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  8875  003E6C  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  8876  003E6E                     l6220:
  8877  003E6E  500E               	movf	___aomod@divisor^0,w,c
  8878  003E70  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  8879  003E72  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  8880  003E74  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  8881  003E76  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  8882  003E78  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  8883  003E7A  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  8884  003E7C  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  8885  003E7E  B4D8               	btfsc	status,2,c
  8886  003E80  D03C               	goto	l6236
  8887  003E82  0E01               	movlw	1
  8888  003E84  6E16               	movwf	___aomod@counter^0,c
  8889  003E86  D00A               	goto	l6226
  8890  003E88                     l6224:
  8891  003E88  90D8               	bcf	status,0,c
  8892  003E8A  360E               	rlcf	___aomod@divisor^0,f,c
  8893  003E8C  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  8894  003E8E  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  8895  003E90  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  8896  003E92  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  8897  003E94  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  8898  003E96  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  8899  003E98  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  8900  003E9A  2A16               	incf	___aomod@counter^0,f,c
  8901  003E9C                     l6226:
  8902  003E9C  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8903  003E9E  D7F4               	goto	l6224
  8904  003EA0                     u6240:
  8905  003EA0  500E               	movf	___aomod@divisor^0,w,c
  8906  003EA2  5C06               	subwf	___aomod@dividend^0,w,c
  8907  003EA4  500F               	movf	(___aomod@divisor+1)^0,w,c
  8908  003EA6  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  8909  003EA8  5010               	movf	(___aomod@divisor+2)^0,w,c
  8910  003EAA  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  8911  003EAC  5011               	movf	(___aomod@divisor+3)^0,w,c
  8912  003EAE  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  8913  003EB0  5012               	movf	(___aomod@divisor+4)^0,w,c
  8914  003EB2  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  8915  003EB4  5013               	movf	(___aomod@divisor+5)^0,w,c
  8916  003EB6  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  8917  003EB8  5014               	movf	(___aomod@divisor+6)^0,w,c
  8918  003EBA  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  8919  003EBC  5015               	movf	(___aomod@divisor+7)^0,w,c
  8920  003EBE  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  8921  003EC0  A0D8               	btfss	status,0,c
  8922  003EC2  D010               	goto	l6232
  8923  003EC4  500E               	movf	___aomod@divisor^0,w,c
  8924  003EC6  5E06               	subwf	___aomod@dividend^0,f,c
  8925  003EC8  500F               	movf	(___aomod@divisor+1)^0,w,c
  8926  003ECA  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  8927  003ECC  5010               	movf	(___aomod@divisor+2)^0,w,c
  8928  003ECE  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  8929  003ED0  5011               	movf	(___aomod@divisor+3)^0,w,c
  8930  003ED2  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  8931  003ED4  5012               	movf	(___aomod@divisor+4)^0,w,c
  8932  003ED6  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  8933  003ED8  5013               	movf	(___aomod@divisor+5)^0,w,c
  8934  003EDA  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  8935  003EDC  5014               	movf	(___aomod@divisor+6)^0,w,c
  8936  003EDE  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  8937  003EE0  5015               	movf	(___aomod@divisor+7)^0,w,c
  8938  003EE2  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  8939  003EE4                     l6232:
  8940  003EE4  90D8               	bcf	status,0,c
  8941  003EE6  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  8942  003EE8  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  8943  003EEA  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  8944  003EEC  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  8945  003EEE  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  8946  003EF0  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  8947  003EF2  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  8948  003EF4  320E               	rrcf	___aomod@divisor^0,f,c
  8949  003EF6  2E16               	decfsz	___aomod@counter^0,f,c
  8950  003EF8  D7D3               	goto	u6240
  8951  003EFA                     l6236:
  8952  003EFA  5017               	movf	___aomod@sign^0,w,c
  8953  003EFC  B4D8               	btfsc	status,2,c
  8954  003EFE  D010               	goto	l6240
  8955  003F00  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  8956  003F02  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  8957  003F04  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  8958  003F06  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  8959  003F08  1E09               	comf	(___aomod@dividend+3)^0,f,c
  8960  003F0A  1E08               	comf	(___aomod@dividend+2)^0,f,c
  8961  003F0C  1E07               	comf	(___aomod@dividend+1)^0,f,c
  8962  003F0E  6C06               	negf	___aomod@dividend^0,c
  8963  003F10  0E00               	movlw	0
  8964  003F12  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  8965  003F14  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  8966  003F16  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  8967  003F18  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  8968  003F1A  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  8969  003F1C  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  8970  003F1E  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  8971  003F20                     l6240:
  8972  003F20  0060  F018  F006   	movff	___aomod@dividend,?___aomod
  8973  003F26  0060  F01C  F007   	movff	___aomod@dividend+1,?___aomod+1
  8974  003F2C  0060  F020  F008   	movff	___aomod@dividend+2,?___aomod+2
  8975  003F32  0060  F024  F009   	movff	___aomod@dividend+3,?___aomod+3
  8976  003F38  0060  F028  F00A   	movff	___aomod@dividend+4,?___aomod+4
  8977  003F3E  0060  F02C  F00B   	movff	___aomod@dividend+5,?___aomod+5
  8978  003F44  0060  F030  F00C   	movff	___aomod@dividend+6,?___aomod+6
  8979  003F4A  0060  F034  F00D   	movff	___aomod@dividend+7,?___aomod+7
  8980  003F50  0012               	return		;funcret
  8981  003F52                     __end_of___aomod:
  8982                           	opt callstack 0
  8983                           
  8984 ;; *************** function ___aodiv *****************
  8985 ;; Defined at:
  8986 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  dividend        8    5[COMRAM] long long 
  8989 ;;  divisor         8   13[COMRAM] long long 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  quotient        8   23[COMRAM] long long 
  8992 ;;  sign            1   22[COMRAM] unsigned char 
  8993 ;;  counter         1   21[COMRAM] unsigned char 
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  8    5[COMRAM] long long 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/2
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9003 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9006 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9007 ;;Total ram usage:       26 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    4
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_dtoa
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text59
  9018  003CC6                     __ptext59:
  9019                           	opt callstack 0
  9020  003CC6                     ___aodiv:
  9021                           	opt callstack 21
  9022                           
  9023                           ;incstack = 0
  9024  003CC6  0E00               	movlw	0
  9025  003CC8  6E17               	movwf	___aodiv@sign^0,c
  9026  003CCA  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9027  003CCC  D012               	goto	l6172
  9028  003CCE  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  9029  003CD0  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  9030  003CD2  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  9031  003CD4  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  9032  003CD6  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  9033  003CD8  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  9034  003CDA  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  9035  003CDC  6C0E               	negf	___aodiv@divisor^0,c
  9036  003CDE  0E00               	movlw	0
  9037  003CE0  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  9038  003CE2  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  9039  003CE4  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  9040  003CE6  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  9041  003CE8  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  9042  003CEA  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  9043  003CEC  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  9044  003CEE  0E01               	movlw	1
  9045  003CF0  6E17               	movwf	___aodiv@sign^0,c
  9046  003CF2                     l6172:
  9047  003CF2  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  9048  003CF4  D012               	goto	l6178
  9049  003CF6  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  9050  003CF8  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  9051  003CFA  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  9052  003CFC  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  9053  003CFE  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  9054  003D00  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  9055  003D02  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  9056  003D04  6C06               	negf	___aodiv@dividend^0,c
  9057  003D06  0E00               	movlw	0
  9058  003D08  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  9059  003D0A  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  9060  003D0C  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  9061  003D0E  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  9062  003D10  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  9063  003D12  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  9064  003D14  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  9065  003D16  0E01               	movlw	1
  9066  003D18  1A17               	xorwf	___aodiv@sign^0,f,c
  9067  003D1A                     l6178:
  9068  003D1A  EE20  F018         	lfsr	2,___aodiv@quotient
  9069  003D1E  0E07               	movlw	7
  9070  003D20                     u6161:
  9071  003D20  6ADE               	clrf	postinc2,c
  9072  003D22  06E8               	decf	wreg,f,c
  9073  003D24  E2FD               	bc	u6161
  9074  003D26  500E               	movf	___aodiv@divisor^0,w,c
  9075  003D28  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  9076  003D2A  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  9077  003D2C  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  9078  003D2E  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  9079  003D30  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  9080  003D32  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  9081  003D34  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  9082  003D36  B4D8               	btfsc	status,2,c
  9083  003D38  D046               	goto	l6200
  9084  003D3A  0E01               	movlw	1
  9085  003D3C  6E16               	movwf	___aodiv@counter^0,c
  9086  003D3E  D00A               	goto	l6186
  9087  003D40                     l6184:
  9088  003D40  90D8               	bcf	status,0,c
  9089  003D42  360E               	rlcf	___aodiv@divisor^0,f,c
  9090  003D44  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  9091  003D46  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  9092  003D48  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  9093  003D4A  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  9094  003D4C  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  9095  003D4E  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  9096  003D50  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  9097  003D52  2A16               	incf	___aodiv@counter^0,f,c
  9098  003D54                     l6186:
  9099  003D54  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9100  003D56  D7F4               	goto	l6184
  9101  003D58                     u6180:
  9102  003D58  90D8               	bcf	status,0,c
  9103  003D5A  3618               	rlcf	___aodiv@quotient^0,f,c
  9104  003D5C  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  9105  003D5E  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  9106  003D60  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  9107  003D62  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  9108  003D64  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  9109  003D66  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  9110  003D68  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  9111  003D6A  500E               	movf	___aodiv@divisor^0,w,c
  9112  003D6C  5C06               	subwf	___aodiv@dividend^0,w,c
  9113  003D6E  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9114  003D70  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  9115  003D72  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9116  003D74  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  9117  003D76  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9118  003D78  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  9119  003D7A  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9120  003D7C  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  9121  003D7E  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9122  003D80  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  9123  003D82  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9124  003D84  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  9125  003D86  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9126  003D88  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  9127  003D8A  A0D8               	btfss	status,0,c
  9128  003D8C  D011               	goto	l6196
  9129  003D8E  500E               	movf	___aodiv@divisor^0,w,c
  9130  003D90  5E06               	subwf	___aodiv@dividend^0,f,c
  9131  003D92  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9132  003D94  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  9133  003D96  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9134  003D98  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  9135  003D9A  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9136  003D9C  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  9137  003D9E  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9138  003DA0  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  9139  003DA2  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9140  003DA4  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  9141  003DA6  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9142  003DA8  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  9143  003DAA  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9144  003DAC  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  9145  003DAE  8018               	bsf	___aodiv@quotient^0,0,c
  9146  003DB0                     l6196:
  9147  003DB0  90D8               	bcf	status,0,c
  9148  003DB2  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  9149  003DB4  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  9150  003DB6  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  9151  003DB8  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  9152  003DBA  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  9153  003DBC  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  9154  003DBE  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  9155  003DC0  320E               	rrcf	___aodiv@divisor^0,f,c
  9156  003DC2  2E16               	decfsz	___aodiv@counter^0,f,c
  9157  003DC4  D7C9               	goto	u6180
  9158  003DC6                     l6200:
  9159  003DC6  5017               	movf	___aodiv@sign^0,w,c
  9160  003DC8  B4D8               	btfsc	status,2,c
  9161  003DCA  D010               	goto	l6204
  9162  003DCC  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  9163  003DCE  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  9164  003DD0  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  9165  003DD2  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  9166  003DD4  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  9167  003DD6  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  9168  003DD8  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  9169  003DDA  6C18               	negf	___aodiv@quotient^0,c
  9170  003DDC  0E00               	movlw	0
  9171  003DDE  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  9172  003DE0  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  9173  003DE2  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  9174  003DE4  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  9175  003DE6  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  9176  003DE8  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  9177  003DEA  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  9178  003DEC                     l6204:
  9179  003DEC  0060  F060  F006   	movff	___aodiv@quotient,?___aodiv
  9180  003DF2  0060  F064  F007   	movff	___aodiv@quotient+1,?___aodiv+1
  9181  003DF8  0060  F068  F008   	movff	___aodiv@quotient+2,?___aodiv+2
  9182  003DFE  0060  F06C  F009   	movff	___aodiv@quotient+3,?___aodiv+3
  9183  003E04  0060  F070  F00A   	movff	___aodiv@quotient+4,?___aodiv+4
  9184  003E0A  0060  F074  F00B   	movff	___aodiv@quotient+5,?___aodiv+5
  9185  003E10  0060  F078  F00C   	movff	___aodiv@quotient+6,?___aodiv+6
  9186  003E16  0060  F07C  F00D   	movff	___aodiv@quotient+7,?___aodiv+7
  9187  003E1C  0012               	return		;funcret
  9188  003E1E                     __end_of___aodiv:
  9189                           	opt callstack 0
  9190                           
  9191 ;; *************** function _calc_pot *****************
  9192 ;; Defined at:
  9193 ;;		line 57 in file "d232.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  value           2   26[BANK0 ] unsigned short 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;		None
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  2   26[BANK0 ] short 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : 3F/3E
  9204 ;;		On exit  : 3F/1
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9210 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9211 ;;Total ram usage:        4 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:    7
  9214 ;; This function calls:
  9215 ;;		___flmul
  9216 ;;		___fltol
  9217 ;;		___xxtofl
  9218 ;;		_lp_filter
  9219 ;; This function is called by:
  9220 ;;		_Digital232_RW
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text60
  9225  003F52                     __ptext60:
  9226                           	opt callstack 0
  9227  003F52                     _calc_pot:
  9228                           	opt callstack 22
  9229                           
  9230                           ; BSR set to: 62
  9231                           ;d232.c: 57: int16_t calc_pot(adc_result_t value);d232.c: 58: {;d232.c: 59:  if (value <
      +                           otto_b1.offset)
  9232                           
  9233                           ;incstack = 0
  9234  003F52  0101               	movlb	1	; () banked
  9235  003F54  51D2               	movf	_otto_b1& (0+255),w,b
  9236  003F56  0100               	movlb	0	; () banked
  9237  003F58  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9238  003F5A  0101               	movlb	1	; () banked
  9239  003F5C  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9240  003F5E  0100               	movlb	0	; () banked
  9241  003F60  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9242  003F62  B0D8               	btfsc	status,0,c
  9243  003F64  D006               	goto	l7318
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;d232.c: 60:   value = otto_b1.offset;
  9247  003F66  0060  F748  F07A   	movff	_otto_b1,calc_pot@value
  9248  003F6C  0060  F74C  F07B   	movff	_otto_b1+1,calc_pot@value+1
  9249  003F72                     l7318:
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;d232.c: 61:  otto_b1.result = (adc_result_t) ((float) (value - otto_b1.offset) * otto_b
      +                          1.scalar);
  9253  003F72  0060  F760  F01A   	movff	_otto_b1+6,___flmul@a
  9254  003F78  0060  F764  F01B   	movff	_otto_b1+7,___flmul@a+1
  9255  003F7E  0060  F768  F01C   	movff	_otto_b1+8,___flmul@a+2
  9256  003F84  0060  F76C  F01D   	movff	_otto_b1+9,___flmul@a+3
  9257  003F8A  0101               	movlb	1	; () banked
  9258  003F8C  51D2               	movf	_otto_b1& (0+255),w,b
  9259  003F8E  0100               	movlb	0	; () banked
  9260  003F90  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9261  003F92  6F7C               	movwf	??_calc_pot& (0+255),b
  9262  003F94  0101               	movlb	1	; () banked
  9263  003F96  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9264  003F98  0100               	movlb	0	; () banked
  9265  003F9A  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9266  003F9C  6F7D               	movwf	(??_calc_pot+1)& (0+255),b
  9267  003F9E  0060  F1F0  F006   	movff	??_calc_pot,___xxtofl@val
  9268  003FA4  0060  F1F4  F007   	movff	??_calc_pot+1,___xxtofl@val+1
  9269  003FAA  6A08               	clrf	(___xxtofl@val+2)^0,c
  9270  003FAC  6A09               	clrf	(___xxtofl@val+3)^0,c
  9271  003FAE  0E00               	movlw	0
  9272  003FB0  ECB1  F01D         	call	___xxtofl
  9273  003FB4  0060  F018  F016   	movff	?___xxtofl,___flmul@b
  9274  003FBA  0060  F01C  F017   	movff	?___xxtofl+1,___flmul@b+1
  9275  003FC0  0060  F020  F018   	movff	?___xxtofl+2,___flmul@b+2
  9276  003FC6  0060  F024  F019   	movff	?___xxtofl+3,___flmul@b+3
  9277  003FCC  EC14  F012         	call	___flmul	;wreg free
  9278  003FD0  0060  F058  F074   	movff	?___flmul,___fltol@f1
  9279  003FD6  0060  F05C  F075   	movff	?___flmul+1,___fltol@f1+1
  9280  003FDC  0060  F060  F076   	movff	?___flmul+2,___fltol@f1+2
  9281  003FE2  0060  F064  F077   	movff	?___flmul+3,___fltol@f1+3
  9282  003FE8  EC3E  F021         	call	___fltol	;wreg free
  9283  003FEC  0060  F1D0  F1DE   	movff	?___fltol,_otto_b1+12
  9284  003FF2  0060  F1D4  F1DF   	movff	?___fltol+1,_otto_b1+13
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;d232.c: 62:  otto_b1.result = -127 + otto_b1.result + (int8_t) lp_filter((float) IO.rnd
      +                          , 0, 1);
  9288  003FF8  0E00               	movlw	0
  9289  003FFA  6F67               	movwf	(lp_filter@slow+1)& (0+255),b
  9290  003FFC  0E01               	movlw	1
  9291  003FFE  6F66               	movwf	lp_filter@slow& (0+255),b
  9292  004000  0E00               	movlw	0
  9293  004002  6F65               	movwf	(lp_filter@bn+1)& (0+255),b
  9294  004004  0E00               	movlw	0
  9295  004006  6F64               	movwf	lp_filter@bn& (0+255),b
  9296  004008  0101               	movlb	1	; () banked
  9297  00400A  51D1               	movf	(_IO+40)& (0+255),w,b
  9298  00400C  6E06               	movwf	___xxtofl@val^0,c
  9299  00400E  0E00               	movlw	0
  9300  004010  BE06               	btfsc	___xxtofl@val^0,7,c
  9301  004012  0EFF               	movlw	-1
  9302  004014  6E07               	movwf	(___xxtofl@val+1)^0,c
  9303  004016  6E08               	movwf	(___xxtofl@val+2)^0,c
  9304  004018  6E09               	movwf	(___xxtofl@val+3)^0,c
  9305  00401A  0E01               	movlw	1
  9306  00401C  ECB1  F01D         	call	___xxtofl
  9307  004020  0060  F018  F060   	movff	?___xxtofl,lp_filter@new
  9308  004026  0060  F01C  F061   	movff	?___xxtofl+1,lp_filter@new+1
  9309  00402C  0060  F020  F062   	movff	?___xxtofl+2,lp_filter@new+2
  9310  004032  0060  F024  F063   	movff	?___xxtofl+3,lp_filter@new+3
  9311  004038  ECD4  F016         	call	_lp_filter	;wreg free
  9312  00403C  0060  F180  F074   	movff	?_lp_filter,___fltol@f1
  9313  004042  0060  F184  F075   	movff	?_lp_filter+1,___fltol@f1+1
  9314  004048  0060  F188  F076   	movff	?_lp_filter+2,___fltol@f1+2
  9315  00404E  0060  F18C  F077   	movff	?_lp_filter+3,___fltol@f1+3
  9316  004054  EC3E  F021         	call	___fltol	;wreg free
  9317  004058  5174               	movf	?___fltol& (0+255),w,b
  9318  00405A  6F7C               	movwf	??_calc_pot& (0+255),b
  9319  00405C  6B7D               	clrf	(??_calc_pot+1)& (0+255),b
  9320  00405E  BF7C               	btfsc	??_calc_pot& (0+255),7,b
  9321  004060  077D               	decf	(??_calc_pot+1)& (0+255),f,b
  9322  004062  0101               	movlb	1	; () banked
  9323  004064  51DE               	movf	(_otto_b1+12)& (0+255),w,b
  9324  004066  0100               	movlb	0	; () banked
  9325  004068  277C               	addwf	??_calc_pot& (0+255),f,b
  9326  00406A  0101               	movlb	1	; () banked
  9327  00406C  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  9328  00406E  0100               	movlb	0	; () banked
  9329  004070  237D               	addwfc	(??_calc_pot+1)& (0+255),f,b
  9330  004072  0E81               	movlw	129
  9331  004074  257C               	addwf	??_calc_pot& (0+255),w,b
  9332  004076  0101               	movlb	1	; () banked
  9333  004078  6FDE               	movwf	(_otto_b1+12)& (0+255),b
  9334  00407A  0EFF               	movlw	255
  9335  00407C  0100               	movlb	0	; () banked
  9336  00407E  217D               	addwfc	(??_calc_pot+1)& (0+255),w,b
  9337  004080  0101               	movlb	1	; () banked
  9338  004082  6FDF               	movwf	(_otto_b1+13)& (0+255),b
  9339                           
  9340                           ; BSR set to: 1
  9341  004084  0012               	return		;funcret
  9342  004086                     __end_of_calc_pot:
  9343                           	opt callstack 0
  9344                           
  9345 ;; *************** function _lp_filter *****************
  9346 ;; Defined at:
  9347 ;;		line 36 in file "d232.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  new             4    0[BANK0 ] float 
  9350 ;;  bn              2    4[BANK0 ] short 
  9351 ;;  slow            2    6[BANK0 ] short 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  lp_x            4   16[BANK0 ] float 
  9354 ;;  lp_speed        4   12[BANK0 ] float 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  4    0[BANK0 ] float 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/1
  9361 ;;		On exit  : 3F/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9364 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9365 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;Total ram usage:       22 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    6
  9371 ;; This function calls:
  9372 ;;		___fladd
  9373 ;;		___fldiv
  9374 ;;		___flmul
  9375 ;;		___flsub
  9376 ;; This function is called by:
  9377 ;;		_calc_pot
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           	psect	text61
  9382  002DA8                     __ptext61:
  9383                           	opt callstack 0
  9384  002DA8                     _lp_filter:
  9385                           	opt callstack 22
  9386                           
  9387                           ;d232.c: 36: float lp_filter(float new, int16_t bn, int16_t slow);d232.c: 37: {;d232.c: 
      +                          38:  float lp_speed, lp_x;;d232.c: 39:  static float smooth[8];;d232.c: 41:  if (bn > 7)
  9388                           
  9389                           ; BSR set to: 1
  9390                           ;incstack = 0
  9391  002DA8  0100               	movlb	0	; () banked
  9392  002DAA  BF65               	btfsc	(lp_filter@bn+1)& (0+255),7,b
  9393  002DAC  D013               	goto	l6932
  9394  002DAE  5165               	movf	(lp_filter@bn+1)& (0+255),w,b
  9395  002DB0  E104               	bnz	u7400
  9396  002DB2  0E08               	movlw	8
  9397  002DB4  5D64               	subwf	lp_filter@bn& (0+255),w,b
  9398  002DB6  A0D8               	btfss	status,0,c
  9399  002DB8  D00D               	goto	l6932
  9400  002DBA                     u7400:
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;d232.c: 42:   return new;
  9404  002DBA  0060  F180  F060   	movff	lp_filter@new,?_lp_filter
  9405  002DC0  0060  F184  F061   	movff	lp_filter@new+1,?_lp_filter+1
  9406  002DC6  0060  F188  F062   	movff	lp_filter@new+2,?_lp_filter+2
  9407  002DCC  0060  F18C  F063   	movff	lp_filter@new+3,?_lp_filter+3
  9408  002DD2  0012               	return	
  9409  002DD4                     l6932:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;d232.c: 43:  if (slow) {
  9413  002DD4  5166               	movf	lp_filter@slow& (0+255),w,b
  9414  002DD6  1167               	iorwf	(lp_filter@slow+1)& (0+255),w,b
  9415  002DD8  B4D8               	btfsc	status,2,c
  9416  002DDA  D008               	goto	l6936
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;d232.c: 44:   lp_speed = 0.01;
  9420  002DDC  0E0A               	movlw	10
  9421  002DDE  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9422  002DE0  0ED7               	movlw	215
  9423  002DE2  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9424  002DE4  0E23               	movlw	35
  9425  002DE6  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9426  002DE8  0E3C               	movlw	60
  9427  002DEA  D007               	goto	L11
  9428  002DEC                     l6936:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;d232.c: 46:   lp_speed = 0.250;
  9432  002DEC  0E00               	movlw	0
  9433  002DEE  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9434  002DF0  0E00               	movlw	0
  9435  002DF2  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9436  002DF4  0E80               	movlw	128
  9437  002DF6  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9438  002DF8  0E3E               	movlw	62
  9439  002DFA                     L11:
  9440  002DFA  6F6F               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9444  002DFC  0E00               	movlw	0
  9445  002DFE  6E1A               	movwf	___flmul@a^0,c
  9446  002E00  0E00               	movlw	0
  9447  002E02  6E1B               	movwf	(___flmul@a+1)^0,c
  9448  002E04  0EC8               	movlw	200
  9449  002E06  6E1C               	movwf	(___flmul@a+2)^0,c
  9450  002E08  0E42               	movlw	66
  9451  002E0A  6E1D               	movwf	(___flmul@a+3)^0,c
  9452  002E0C  0E00               	movlw	low lp_filter@smooth
  9453  002E0E  6E50               	movwf	??_lp_filter^0,c
  9454  002E10  0E01               	movlw	high lp_filter@smooth
  9455  002E12  6E51               	movwf	(??_lp_filter+1)^0,c
  9456  002E14  90D8               	bcf	status,0,c
  9457  002E16  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9458  002E18  6ED9               	movwf	fsr2l,c
  9459  002E1A  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9460  002E1C  6EDA               	movwf	fsr2h,c
  9461  002E1E  90D8               	bcf	status,0,c
  9462  002E20  36D9               	rlcf	fsr2l,f,c
  9463  002E22  36DA               	rlcf	fsr2h,f,c
  9464  002E24  5050               	movf	??_lp_filter^0,w,c
  9465  002E26  26D9               	addwf	fsr2l,f,c
  9466  002E28  5051               	movf	(??_lp_filter+1)^0,w,c
  9467  002E2A  22DA               	addwfc	fsr2h,f,c
  9468  002E2C  006F FF78  F016    	movff	postinc2,___flmul@b
  9469  002E32  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9470  002E38  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9471  002E3E  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9472  002E44  EC14  F012         	call	___flmul	;wreg free
  9473  002E48  0060  F058  F033   	movff	?___flmul,___flsub@a
  9474  002E4E  0060  F05C  F034   	movff	?___flmul+1,___flsub@a+1
  9475  002E54  0060  F060  F035   	movff	?___flmul+2,___flsub@a+2
  9476  002E5A  0060  F064  F036   	movff	?___flmul+3,___flsub@a+3
  9477  002E60  0E00               	movlw	0
  9478  002E62  6E1A               	movwf	___flmul@a^0,c
  9479  002E64  0E00               	movlw	0
  9480  002E66  6E1B               	movwf	(___flmul@a+1)^0,c
  9481  002E68  0EC8               	movlw	200
  9482  002E6A  6E1C               	movwf	(___flmul@a+2)^0,c
  9483  002E6C  0E42               	movlw	66
  9484  002E6E  6E1D               	movwf	(___flmul@a+3)^0,c
  9485  002E70  0060  F180  F016   	movff	lp_filter@new,___flmul@b
  9486  002E76  0060  F184  F017   	movff	lp_filter@new+1,___flmul@b+1
  9487  002E7C  0060  F188  F018   	movff	lp_filter@new+2,___flmul@b+2
  9488  002E82  0060  F18C  F019   	movff	lp_filter@new+3,___flmul@b+3
  9489  002E88  EC14  F012         	call	___flmul	;wreg free
  9490  002E8C  0060  F058  F02F   	movff	?___flmul,___flsub@b
  9491  002E92  0060  F05C  F030   	movff	?___flmul+1,___flsub@b+1
  9492  002E98  0060  F060  F031   	movff	?___flmul+2,___flsub@b+2
  9493  002E9E  0060  F064  F032   	movff	?___flmul+3,___flsub@b+3
  9494  002EA4  EC7A  F025         	call	___flsub	;wreg free
  9495  002EA8  0060  F0BC  F068   	movff	?___flsub,_lp_filter$3690
  9496  002EAE  0060  F0C0  F069   	movff	?___flsub+1,_lp_filter$3690+1
  9497  002EB4  0060  F0C4  F06A   	movff	?___flsub+2,_lp_filter$3690+2
  9498  002EBA  0060  F0C8  F06B   	movff	?___flsub+3,_lp_filter$3690+3
  9499                           
  9500                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9501  002EC0  0060  F1B0  F01A   	movff	lp_filter@lp_speed,___flmul@a
  9502  002EC6  0060  F1B4  F01B   	movff	lp_filter@lp_speed+1,___flmul@a+1
  9503  002ECC  0060  F1B8  F01C   	movff	lp_filter@lp_speed+2,___flmul@a+2
  9504  002ED2  0060  F1BC  F01D   	movff	lp_filter@lp_speed+3,___flmul@a+3
  9505  002ED8  0060  F1A0  F016   	movff	_lp_filter$3690,___flmul@b
  9506  002EDE  0060  F1A4  F017   	movff	_lp_filter$3690+1,___flmul@b+1
  9507  002EE4  0060  F1A8  F018   	movff	_lp_filter$3690+2,___flmul@b+2
  9508  002EEA  0060  F1AC  F019   	movff	_lp_filter$3690+3,___flmul@b+3
  9509  002EF0  EC14  F012         	call	___flmul	;wreg free
  9510  002EF4  0060  F058  F00A   	movff	?___flmul,___fladd@a
  9511  002EFA  0060  F05C  F00B   	movff	?___flmul+1,___fladd@a+1
  9512  002F00  0060  F060  F00C   	movff	?___flmul+2,___fladd@a+2
  9513  002F06  0060  F064  F00D   	movff	?___flmul+3,___fladd@a+3
  9514  002F0C  0E00               	movlw	0
  9515  002F0E  6E1A               	movwf	___flmul@a^0,c
  9516  002F10  0E00               	movlw	0
  9517  002F12  6E1B               	movwf	(___flmul@a+1)^0,c
  9518  002F14  0EC8               	movlw	200
  9519  002F16  6E1C               	movwf	(___flmul@a+2)^0,c
  9520  002F18  0E42               	movlw	66
  9521  002F1A  6E1D               	movwf	(___flmul@a+3)^0,c
  9522  002F1C  0E00               	movlw	low lp_filter@smooth
  9523  002F1E  6E50               	movwf	??_lp_filter^0,c
  9524  002F20  0E01               	movlw	high lp_filter@smooth
  9525  002F22  6E51               	movwf	(??_lp_filter+1)^0,c
  9526  002F24  90D8               	bcf	status,0,c
  9527  002F26  0100               	movlb	0	; () banked
  9528  002F28  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9529  002F2A  6ED9               	movwf	fsr2l,c
  9530  002F2C  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9531  002F2E  6EDA               	movwf	fsr2h,c
  9532  002F30  90D8               	bcf	status,0,c
  9533  002F32  36D9               	rlcf	fsr2l,f,c
  9534  002F34  36DA               	rlcf	fsr2h,f,c
  9535  002F36  5050               	movf	??_lp_filter^0,w,c
  9536  002F38  26D9               	addwf	fsr2l,f,c
  9537  002F3A  5051               	movf	(??_lp_filter+1)^0,w,c
  9538  002F3C  22DA               	addwfc	fsr2h,f,c
  9539  002F3E  006F FF78  F016    	movff	postinc2,___flmul@b
  9540  002F44  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9541  002F4A  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9542  002F50  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9543  002F56  EC14  F012         	call	___flmul	;wreg free
  9544  002F5A  0060  F058  F006   	movff	?___flmul,___fladd@b
  9545  002F60  0060  F05C  F007   	movff	?___flmul+1,___fladd@b+1
  9546  002F66  0060  F060  F008   	movff	?___flmul+2,___fladd@b+2
  9547  002F6C  0060  F064  F009   	movff	?___flmul+3,___fladd@b+3
  9548  002F72  ECD6  F013         	call	___fladd	;wreg free
  9549  002F76  0060  F018  F037   	movff	?___fladd,___fldiv@b
  9550  002F7C  0060  F01C  F038   	movff	?___fladd+1,___fldiv@b+1
  9551  002F82  0060  F020  F039   	movff	?___fladd+2,___fldiv@b+2
  9552  002F88  0060  F024  F03A   	movff	?___fladd+3,___fldiv@b+3
  9553  002F8E  0E00               	movlw	0
  9554  002F90  6E3B               	movwf	___fldiv@a^0,c
  9555  002F92  0E00               	movlw	0
  9556  002F94  6E3C               	movwf	(___fldiv@a+1)^0,c
  9557  002F96  0EC8               	movlw	200
  9558  002F98  6E3D               	movwf	(___fldiv@a+2)^0,c
  9559  002F9A  0E42               	movlw	66
  9560  002F9C  6E3E               	movwf	(___fldiv@a+3)^0,c
  9561  002F9E  EC82  F019         	call	___fldiv	;wreg free
  9562  002FA2  0060  F0DC  F070   	movff	?___fldiv,lp_filter@lp_x
  9563  002FA8  0060  F0E0  F071   	movff	?___fldiv+1,lp_filter@lp_x+1
  9564  002FAE  0060  F0E4  F072   	movff	?___fldiv+2,lp_filter@lp_x+2
  9565  002FB4  0060  F0E8  F073   	movff	?___fldiv+3,lp_filter@lp_x+3
  9566                           
  9567                           ;d232.c: 49:  smooth[bn] = lp_x;
  9568  002FBA  0E00               	movlw	low lp_filter@smooth
  9569  002FBC  6E50               	movwf	??_lp_filter^0,c
  9570  002FBE  0E01               	movlw	high lp_filter@smooth
  9571  002FC0  6E51               	movwf	(??_lp_filter+1)^0,c
  9572  002FC2  90D8               	bcf	status,0,c
  9573  002FC4  0100               	movlb	0	; () banked
  9574  002FC6  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9575  002FC8  6ED9               	movwf	fsr2l,c
  9576  002FCA  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9577  002FCC  6EDA               	movwf	fsr2h,c
  9578  002FCE  90D8               	bcf	status,0,c
  9579  002FD0  36D9               	rlcf	fsr2l,f,c
  9580  002FD2  36DA               	rlcf	fsr2h,f,c
  9581  002FD4  5050               	movf	??_lp_filter^0,w,c
  9582  002FD6  26D9               	addwf	fsr2l,f,c
  9583  002FD8  5051               	movf	(??_lp_filter+1)^0,w,c
  9584  002FDA  22DA               	addwfc	fsr2h,f,c
  9585  002FDC  0060  F1C3  FFDE   	movff	lp_filter@lp_x,postinc2
  9586  002FE2  0060  F1C7  FFDE   	movff	lp_filter@lp_x+1,postinc2
  9587  002FE8  0060  F1CB  FFDE   	movff	lp_filter@lp_x+2,postinc2
  9588  002FEE  0060  F1CF  FFDE   	movff	lp_filter@lp_x+3,postinc2
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;d232.c: 50:  if (slow == (-1)) {
  9592  002FF4  2966               	incf	lp_filter@slow& (0+255),w,b
  9593  002FF6  E123               	bnz	l6950
  9594  002FF8  2967               	incf	(lp_filter@slow+1)& (0+255),w,b
  9595  002FFA  A4D8               	btfss	status,2,c
  9596  002FFC  D020               	goto	l6950
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;d232.c: 51:   lp_x = 0.0;
  9600  002FFE  0E00               	movlw	0
  9601  003000  6F70               	movwf	lp_filter@lp_x& (0+255),b
  9602  003002  0E00               	movlw	0
  9603  003004  6F71               	movwf	(lp_filter@lp_x+1)& (0+255),b
  9604  003006  0E00               	movlw	0
  9605  003008  6F72               	movwf	(lp_filter@lp_x+2)& (0+255),b
  9606  00300A  0E00               	movlw	0
  9607  00300C  6F73               	movwf	(lp_filter@lp_x+3)& (0+255),b
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;d232.c: 52:   smooth[bn] = 0.0;
  9611  00300E  0E00               	movlw	low lp_filter@smooth
  9612  003010  6E50               	movwf	??_lp_filter^0,c
  9613  003012  0E01               	movlw	high lp_filter@smooth
  9614  003014  6E51               	movwf	(??_lp_filter+1)^0,c
  9615  003016  90D8               	bcf	status,0,c
  9616  003018  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9617  00301A  6ED9               	movwf	fsr2l,c
  9618  00301C  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9619  00301E  6EDA               	movwf	fsr2h,c
  9620  003020  90D8               	bcf	status,0,c
  9621  003022  36D9               	rlcf	fsr2l,f,c
  9622  003024  36DA               	rlcf	fsr2h,f,c
  9623  003026  5050               	movf	??_lp_filter^0,w,c
  9624  003028  26D9               	addwf	fsr2l,f,c
  9625  00302A  5051               	movf	(??_lp_filter+1)^0,w,c
  9626  00302C  22DA               	addwfc	fsr2h,f,c
  9627  00302E  0E00               	movlw	0
  9628  003030  6EDE               	movwf	postinc2,c
  9629  003032  0E00               	movlw	0
  9630  003034  6EDE               	movwf	postinc2,c
  9631  003036  0E00               	movlw	0
  9632  003038  6EDE               	movwf	postinc2,c
  9633  00303A  0E00               	movlw	0
  9634  00303C  6EDD               	movwf	postdec2,c
  9635  00303E                     l6950:
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;d232.c: 54:  return lp_x;
  9639  00303E  0060  F1C0  F060   	movff	lp_filter@lp_x,?_lp_filter
  9640  003044  0060  F1C4  F061   	movff	lp_filter@lp_x+1,?_lp_filter+1
  9641  00304A  0060  F1C8  F062   	movff	lp_filter@lp_x+2,?_lp_filter+2
  9642  003050  0060  F1CC  F063   	movff	lp_filter@lp_x+3,?_lp_filter+3
  9643                           
  9644                           ; BSR set to: 0
  9645  003056  0012               	return		;funcret
  9646  003058                     __end_of_lp_filter:
  9647                           	opt callstack 0
  9648                           
  9649 ;; *************** function ___flsub *****************
  9650 ;; Defined at:
  9651 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  b               4   46[COMRAM] float 
  9654 ;;  a               4   50[COMRAM] float 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;		None
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  4   46[COMRAM] float 
  9659 ;; Registers used:
  9660 ;;		wreg, status,2, status,0, cstack
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9666 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9669 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9670 ;;Total ram usage:        8 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:    5
  9673 ;; This function calls:
  9674 ;;		___fladd
  9675 ;; This function is called by:
  9676 ;;		_lp_filter
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           	psect	text62
  9681  004AF4                     __ptext62:
  9682                           	opt callstack 0
  9683  004AF4                     ___flsub:
  9684                           	opt callstack 22
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;incstack = 0
  9688  004AF4  0E00               	movlw	0
  9689  004AF6  1A33               	xorwf	___flsub@a^0,f,c
  9690  004AF8  0E00               	movlw	0
  9691  004AFA  1A34               	xorwf	(___flsub@a+1)^0,f,c
  9692  004AFC  0E00               	movlw	0
  9693  004AFE  1A35               	xorwf	(___flsub@a+2)^0,f,c
  9694  004B00  0E80               	movlw	128
  9695  004B02  1A36               	xorwf	(___flsub@a+3)^0,f,c
  9696  004B04  0060  F0BC  F006   	movff	___flsub@b,___fladd@b
  9697  004B0A  0060  F0C0  F007   	movff	___flsub@b+1,___fladd@b+1
  9698  004B10  0060  F0C4  F008   	movff	___flsub@b+2,___fladd@b+2
  9699  004B16  0060  F0C8  F009   	movff	___flsub@b+3,___fladd@b+3
  9700  004B1C  0060  F0CC  F00A   	movff	___flsub@a,___fladd@a
  9701  004B22  0060  F0D0  F00B   	movff	___flsub@a+1,___fladd@a+1
  9702  004B28  0060  F0D4  F00C   	movff	___flsub@a+2,___fladd@a+2
  9703  004B2E  0060  F0D8  F00D   	movff	___flsub@a+3,___fladd@a+3
  9704  004B34  ECD6  F013         	call	___fladd	;wreg free
  9705  004B38  0060  F018  F02F   	movff	?___fladd,?___flsub
  9706  004B3E  0060  F01C  F030   	movff	?___fladd+1,?___flsub+1
  9707  004B44  0060  F020  F031   	movff	?___fladd+2,?___flsub+2
  9708  004B4A  0060  F024  F032   	movff	?___fladd+3,?___flsub+3
  9709  004B50  0012               	return		;funcret
  9710  004B52                     __end_of___flsub:
  9711                           	opt callstack 0
  9712                           
  9713 ;; *************** function ___fladd *****************
  9714 ;; Defined at:
  9715 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  b               4    5[COMRAM] float 
  9718 ;;  a               4    9[COMRAM] float 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  grs             1   20[COMRAM] unsigned char 
  9721 ;;  bexp            1   19[COMRAM] unsigned char 
  9722 ;;  aexp            1   18[COMRAM] unsigned char 
  9723 ;;  signs           1   17[COMRAM] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  4    5[COMRAM] unsigned char 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9733 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9734 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9736 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9737 ;;Total ram usage:       16 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:    4
  9740 ;; This function calls:
  9741 ;;		Nothing
  9742 ;; This function is called by:
  9743 ;;		_lp_filter
  9744 ;;		___flsub
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text63
  9749  0027AC                     __ptext63:
  9750                           	opt callstack 0
  9751  0027AC                     ___fladd:
  9752                           	opt callstack 22
  9753                           
  9754                           ;incstack = 0
  9755  0027AC  5009               	movf	(___fladd@b+3)^0,w,c
  9756  0027AE  0B80               	andlw	128
  9757  0027B0  6E12               	movwf	___fladd@signs^0,c
  9758  0027B2  5009               	movf	(___fladd@b+3)^0,w,c
  9759  0027B4  2409               	addwf	(___fladd@b+3)^0,w,c
  9760  0027B6  6E14               	movwf	___fladd@bexp^0,c
  9761  0027B8  BE08               	btfsc	(___fladd@b+2)^0,7,c
  9762  0027BA  8014               	bsf	___fladd@bexp^0,0,c
  9763  0027BC  5014               	movf	___fladd@bexp^0,w,c
  9764  0027BE  B4D8               	btfsc	status,2,c
  9765  0027C0  D00D               	goto	l6364
  9766  0027C2  2814               	incf	___fladd@bexp^0,w,c
  9767  0027C4  A4D8               	btfss	status,2,c
  9768  0027C6  D008               	goto	l6360
  9769  0027C8  0E00               	movlw	0
  9770  0027CA  6E06               	movwf	___fladd@b^0,c
  9771  0027CC  0E00               	movlw	0
  9772  0027CE  6E07               	movwf	(___fladd@b+1)^0,c
  9773  0027D0  0E00               	movlw	0
  9774  0027D2  6E08               	movwf	(___fladd@b+2)^0,c
  9775  0027D4  0E00               	movlw	0
  9776  0027D6  6E09               	movwf	(___fladd@b+3)^0,c
  9777  0027D8                     l6360:
  9778  0027D8  8E08               	bsf	(___fladd@b+2)^0,7,c
  9779  0027DA  D006               	goto	L12
  9780  0027DC                     l6364:
  9781  0027DC  0E00               	movlw	0
  9782  0027DE  6E06               	movwf	___fladd@b^0,c
  9783  0027E0  0E00               	movlw	0
  9784  0027E2  6E07               	movwf	(___fladd@b+1)^0,c
  9785  0027E4  0E00               	movlw	0
  9786  0027E6  6E08               	movwf	(___fladd@b+2)^0,c
  9787  0027E8                     L12:
  9788  0027E8  0E00               	movlw	0
  9789  0027EA  6E09               	movwf	(___fladd@b+3)^0,c
  9790  0027EC  500D               	movf	(___fladd@a+3)^0,w,c
  9791  0027EE  0B80               	andlw	128
  9792  0027F0  6E13               	movwf	___fladd@aexp^0,c
  9793  0027F2  5012               	movf	___fladd@signs^0,w,c
  9794  0027F4  1813               	xorwf	___fladd@aexp^0,w,c
  9795  0027F6  A4D8               	btfss	status,2,c
  9796  0027F8  8C12               	bsf	___fladd@signs^0,6,c
  9797  0027FA  500D               	movf	(___fladd@a+3)^0,w,c
  9798  0027FC  240D               	addwf	(___fladd@a+3)^0,w,c
  9799  0027FE  6E13               	movwf	___fladd@aexp^0,c
  9800  002800  BE0C               	btfsc	(___fladd@a+2)^0,7,c
  9801  002802  8013               	bsf	___fladd@aexp^0,0,c
  9802  002804  5013               	movf	___fladd@aexp^0,w,c
  9803  002806  B4D8               	btfsc	status,2,c
  9804  002808  D00D               	goto	l6388
  9805  00280A  2813               	incf	___fladd@aexp^0,w,c
  9806  00280C  A4D8               	btfss	status,2,c
  9807  00280E  D008               	goto	l6384
  9808  002810  0E00               	movlw	0
  9809  002812  6E0A               	movwf	___fladd@a^0,c
  9810  002814  0E00               	movlw	0
  9811  002816  6E0B               	movwf	(___fladd@a+1)^0,c
  9812  002818  0E00               	movlw	0
  9813  00281A  6E0C               	movwf	(___fladd@a+2)^0,c
  9814  00281C  0E00               	movlw	0
  9815  00281E  6E0D               	movwf	(___fladd@a+3)^0,c
  9816  002820                     l6384:
  9817  002820  8E0C               	bsf	(___fladd@a+2)^0,7,c
  9818  002822  D006               	goto	L13
  9819  002824                     l6388:
  9820  002824  0E00               	movlw	0
  9821  002826  6E0A               	movwf	___fladd@a^0,c
  9822  002828  0E00               	movlw	0
  9823  00282A  6E0B               	movwf	(___fladd@a+1)^0,c
  9824  00282C  0E00               	movlw	0
  9825  00282E  6E0C               	movwf	(___fladd@a+2)^0,c
  9826  002830                     L13:
  9827  002830  0E00               	movlw	0
  9828  002832  6E0D               	movwf	(___fladd@a+3)^0,c
  9829  002834  5014               	movf	___fladd@bexp^0,w,c
  9830  002836  5C13               	subwf	___fladd@aexp^0,w,c
  9831  002838  B0D8               	btfsc	status,0,c
  9832  00283A  D031               	goto	l6426
  9833  00283C  AC12               	btfss	___fladd@signs^0,6,c
  9834  00283E  D002               	goto	l6396
  9835  002840  0E80               	movlw	128
  9836  002842  1A12               	xorwf	___fladd@signs^0,f,c
  9837  002844                     l6396:
  9838  002844  0060  F050  F015   	movff	___fladd@bexp,___fladd@grs
  9839  00284A  0060  F04C  F014   	movff	___fladd@aexp,___fladd@bexp
  9840  002850  0060  F054  F013   	movff	___fladd@grs,___fladd@aexp
  9841  002856  0060  F018  F015   	movff	___fladd@b,___fladd@grs
  9842  00285C  0060  F028  F006   	movff	___fladd@a,___fladd@b
  9843  002862  0060  F054  F00A   	movff	___fladd@grs,___fladd@a
  9844  002868  0060  F01C  F015   	movff	___fladd@b+1,___fladd@grs
  9845  00286E  0060  F02C  F007   	movff	___fladd@a+1,___fladd@b+1
  9846  002874  0060  F054  F00B   	movff	___fladd@grs,___fladd@a+1
  9847  00287A  0060  F020  F015   	movff	___fladd@b+2,___fladd@grs
  9848  002880  0060  F030  F008   	movff	___fladd@a+2,___fladd@b+2
  9849  002886  0060  F054  F00C   	movff	___fladd@grs,___fladd@a+2
  9850  00288C  0060  F024  F015   	movff	___fladd@b+3,___fladd@grs
  9851  002892  0060  F034  F009   	movff	___fladd@a+3,___fladd@b+3
  9852  002898  0060  F054  F00D   	movff	___fladd@grs,___fladd@a+3
  9853  00289E                     l6426:
  9854  00289E  0E00               	movlw	0
  9855  0028A0  6E15               	movwf	___fladd@grs^0,c
  9856  0028A2  5014               	movf	___fladd@bexp^0,w,c
  9857  0028A4  0060  F04C  F00E   	movff	___fladd@aexp,??___fladd
  9858  0028AA  6A0F               	clrf	(??___fladd+1)^0,c
  9859  0028AC  5E0E               	subwf	??___fladd^0,f,c
  9860  0028AE  0E00               	movlw	0
  9861  0028B0  5A0F               	subwfb	(??___fladd+1)^0,f,c
  9862  0028B2  BE0F               	btfsc	(??___fladd+1)^0,7,c
  9863  0028B4  D02D               	goto	l1959
  9864  0028B6  500F               	movf	(??___fladd+1)^0,w,c
  9865  0028B8  E104               	bnz	u6610
  9866  0028BA  0E1A               	movlw	26
  9867  0028BC  5C0E               	subwf	??___fladd^0,w,c
  9868  0028BE  A0D8               	btfss	status,0,c
  9869  0028C0  D027               	goto	l1959
  9870  0028C2                     u6610:
  9871  0028C2  5006               	movf	___fladd@b^0,w,c
  9872  0028C4  1007               	iorwf	(___fladd@b+1)^0,w,c
  9873  0028C6  1008               	iorwf	(___fladd@b+2)^0,w,c
  9874  0028C8  1009               	iorwf	(___fladd@b+3)^0,w,c
  9875  0028CA  B4D8               	btfsc	status,2,c
  9876  0028CC  D002               	goto	u6620
  9877  0028CE  0E01               	movlw	1
  9878  0028D0  D001               	goto	u6630
  9879  0028D2                     u6620:
  9880  0028D2  0E00               	movlw	0
  9881  0028D4                     u6630:
  9882  0028D4  6E15               	movwf	___fladd@grs^0,c
  9883  0028D6  0E00               	movlw	0
  9884  0028D8  6E06               	movwf	___fladd@b^0,c
  9885  0028DA  0E00               	movlw	0
  9886  0028DC  6E07               	movwf	(___fladd@b+1)^0,c
  9887  0028DE  0E00               	movlw	0
  9888  0028E0  6E08               	movwf	(___fladd@b+2)^0,c
  9889  0028E2  0E00               	movlw	0
  9890  0028E4  6E09               	movwf	(___fladd@b+3)^0,c
  9891  0028E6  0060  F04C  F014   	movff	___fladd@aexp,___fladd@bexp
  9892  0028EC  D015               	goto	u6660
  9893  0028EE                     l1960:
  9894  0028EE  A015               	btfss	___fladd@grs^0,0,c
  9895  0028F0  D005               	goto	l6438
  9896  0028F2  90D8               	bcf	status,0,c
  9897  0028F4  3015               	rrcf	___fladd@grs^0,w,c
  9898  0028F6  0901               	iorlw	1
  9899  0028F8  6E15               	movwf	___fladd@grs^0,c
  9900  0028FA  D002               	goto	l6440
  9901  0028FC                     l6438:
  9902  0028FC  90D8               	bcf	status,0,c
  9903  0028FE  3215               	rrcf	___fladd@grs^0,f,c
  9904  002900                     l6440:
  9905  002900  B006               	btfsc	___fladd@b^0,0,c
  9906  002902  8E15               	bsf	___fladd@grs^0,7,c
  9907  002904  3409               	rlcf	(___fladd@b+3)^0,w,c
  9908  002906  3209               	rrcf	(___fladd@b+3)^0,f,c
  9909  002908  3208               	rrcf	(___fladd@b+2)^0,f,c
  9910  00290A  3207               	rrcf	(___fladd@b+1)^0,f,c
  9911  00290C  3206               	rrcf	___fladd@b^0,f,c
  9912  00290E  2A14               	incf	___fladd@bexp^0,f,c
  9913  002910                     l1959:
  9914  002910  5013               	movf	___fladd@aexp^0,w,c
  9915  002912  5C14               	subwf	___fladd@bexp^0,w,c
  9916  002914  A0D8               	btfss	status,0,c
  9917  002916  D7EB               	goto	l1960
  9918  002918                     u6660:
  9919  002918  BC12               	btfsc	___fladd@signs^0,6,c
  9920  00291A  D028               	goto	l6472
  9921  00291C  5014               	movf	___fladd@bexp^0,w,c
  9922  00291E  A4D8               	btfss	status,2,c
  9923  002920  D009               	goto	l6454
  9924  002922  0E00               	movlw	0
  9925  002924  6E06               	movwf	?___fladd^0,c
  9926  002926  0E00               	movlw	0
  9927  002928  6E07               	movwf	(?___fladd+1)^0,c
  9928  00292A  0E00               	movlw	0
  9929  00292C  6E08               	movwf	(?___fladd+2)^0,c
  9930  00292E  0E00               	movlw	0
  9931  002930  6E09               	movwf	(?___fladd+3)^0,c
  9932  002932  0012               	return	
  9933  002934                     l6454:
  9934  002934  500A               	movf	___fladd@a^0,w,c
  9935  002936  2606               	addwf	___fladd@b^0,f,c
  9936  002938  500B               	movf	(___fladd@a+1)^0,w,c
  9937  00293A  2207               	addwfc	(___fladd@b+1)^0,f,c
  9938  00293C  500C               	movf	(___fladd@a+2)^0,w,c
  9939  00293E  2208               	addwfc	(___fladd@b+2)^0,f,c
  9940  002940  500D               	movf	(___fladd@a+3)^0,w,c
  9941  002942  2209               	addwfc	(___fladd@b+3)^0,f,c
  9942  002944  A009               	btfss	(___fladd@b+3)^0,0,c
  9943  002946  D071               	goto	u6790
  9944  002948  A015               	btfss	___fladd@grs^0,0,c
  9945  00294A  D005               	goto	l6462
  9946  00294C  90D8               	bcf	status,0,c
  9947  00294E  3015               	rrcf	___fladd@grs^0,w,c
  9948  002950  0901               	iorlw	1
  9949  002952  6E15               	movwf	___fladd@grs^0,c
  9950  002954  D002               	goto	l6464
  9951  002956                     l6462:
  9952  002956  90D8               	bcf	status,0,c
  9953  002958  3215               	rrcf	___fladd@grs^0,f,c
  9954  00295A                     l6464:
  9955  00295A  B006               	btfsc	___fladd@b^0,0,c
  9956  00295C  8E15               	bsf	___fladd@grs^0,7,c
  9957  00295E  3409               	rlcf	(___fladd@b+3)^0,w,c
  9958  002960  3209               	rrcf	(___fladd@b+3)^0,f,c
  9959  002962  3208               	rrcf	(___fladd@b+2)^0,f,c
  9960  002964  3207               	rrcf	(___fladd@b+1)^0,f,c
  9961  002966  3206               	rrcf	___fladd@b^0,f,c
  9962  002968  2A14               	incf	___fladd@bexp^0,f,c
  9963  00296A  D05F               	goto	u6790
  9964  00296C                     l6472:
  9965  00296C  500A               	movf	___fladd@a^0,w,c
  9966  00296E  5C06               	subwf	___fladd@b^0,w,c
  9967  002970  500B               	movf	(___fladd@a+1)^0,w,c
  9968  002972  5807               	subwfb	(___fladd@b+1)^0,w,c
  9969  002974  500C               	movf	(___fladd@a+2)^0,w,c
  9970  002976  5808               	subwfb	(___fladd@b+2)^0,w,c
  9971  002978  5009               	movf	(___fladd@b+3)^0,w,c
  9972  00297A  0A80               	xorlw	128
  9973  00297C  6E0E               	movwf	??___fladd^0,c
  9974  00297E  500D               	movf	(___fladd@a+3)^0,w,c
  9975  002980  0A80               	xorlw	128
  9976  002982  580E               	subwfb	??___fladd^0,w,c
  9977  002984  B0D8               	btfsc	status,0,c
  9978  002986  D025               	goto	l6482
  9979  002988  5006               	movf	___fladd@b^0,w,c
  9980  00298A  5C0A               	subwf	___fladd@a^0,w,c
  9981  00298C  6E0E               	movwf	??___fladd^0,c
  9982  00298E  5007               	movf	(___fladd@b+1)^0,w,c
  9983  002990  580B               	subwfb	(___fladd@a+1)^0,w,c
  9984  002992  6E0F               	movwf	(??___fladd+1)^0,c
  9985  002994  5008               	movf	(___fladd@b+2)^0,w,c
  9986  002996  580C               	subwfb	(___fladd@a+2)^0,w,c
  9987  002998  6E10               	movwf	(??___fladd+2)^0,c
  9988  00299A  5009               	movf	(___fladd@b+3)^0,w,c
  9989  00299C  580D               	subwfb	(___fladd@a+3)^0,w,c
  9990  00299E  6E11               	movwf	(??___fladd+3)^0,c
  9991  0029A0  0EFF               	movlw	255
  9992  0029A2  240E               	addwf	??___fladd^0,w,c
  9993  0029A4  6E06               	movwf	___fladd@b^0,c
  9994  0029A6  0EFF               	movlw	255
  9995  0029A8  200F               	addwfc	(??___fladd+1)^0,w,c
  9996  0029AA  6E07               	movwf	(___fladd@b+1)^0,c
  9997  0029AC  0EFF               	movlw	255
  9998  0029AE  2010               	addwfc	(??___fladd+2)^0,w,c
  9999  0029B0  6E08               	movwf	(___fladd@b+2)^0,c
 10000  0029B2  0EFF               	movlw	255
 10001  0029B4  2011               	addwfc	(??___fladd+3)^0,w,c
 10002  0029B6  6E09               	movwf	(___fladd@b+3)^0,c
 10003  0029B8  0E80               	movlw	128
 10004  0029BA  1A12               	xorwf	___fladd@signs^0,f,c
 10005  0029BC  6C15               	negf	___fladd@grs^0,c
 10006  0029BE  5015               	movf	___fladd@grs^0,w,c
 10007  0029C0  A4D8               	btfss	status,2,c
 10008  0029C2  D00F               	goto	l1975
 10009  0029C4  0E01               	movlw	1
 10010  0029C6  2606               	addwf	___fladd@b^0,f,c
 10011  0029C8  0E00               	movlw	0
 10012  0029CA  2207               	addwfc	(___fladd@b+1)^0,f,c
 10013  0029CC  2208               	addwfc	(___fladd@b+2)^0,f,c
 10014  0029CE  2209               	addwfc	(___fladd@b+3)^0,f,c
 10015  0029D0  D008               	goto	l1975
 10016  0029D2                     l6482:
 10017  0029D2  500A               	movf	___fladd@a^0,w,c
 10018  0029D4  5E06               	subwf	___fladd@b^0,f,c
 10019  0029D6  500B               	movf	(___fladd@a+1)^0,w,c
 10020  0029D8  5A07               	subwfb	(___fladd@b+1)^0,f,c
 10021  0029DA  500C               	movf	(___fladd@a+2)^0,w,c
 10022  0029DC  5A08               	subwfb	(___fladd@b+2)^0,f,c
 10023  0029DE  500D               	movf	(___fladd@a+3)^0,w,c
 10024  0029E0  5A09               	subwfb	(___fladd@b+3)^0,f,c
 10025  0029E2                     l1975:
 10026  0029E2  5006               	movf	___fladd@b^0,w,c
 10027  0029E4  1007               	iorwf	(___fladd@b+1)^0,w,c
 10028  0029E6  1008               	iorwf	(___fladd@b+2)^0,w,c
 10029  0029E8  1009               	iorwf	(___fladd@b+3)^0,w,c
 10030  0029EA  A4D8               	btfss	status,2,c
 10031  0029EC  D01C               	goto	l6506
 10032  0029EE  5015               	movf	___fladd@grs^0,w,c
 10033  0029F0  A4D8               	btfss	status,2,c
 10034  0029F2  D019               	goto	l6506
 10035  0029F4  0E00               	movlw	0
 10036  0029F6  6E06               	movwf	?___fladd^0,c
 10037  0029F8  0E00               	movlw	0
 10038  0029FA  6E07               	movwf	(?___fladd+1)^0,c
 10039  0029FC  0E00               	movlw	0
 10040  0029FE  6E08               	movwf	(?___fladd+2)^0,c
 10041  002A00  0E00               	movlw	0
 10042  002A02  6E09               	movwf	(?___fladd+3)^0,c
 10043  002A04  0012               	return	
 10044  002A06                     l6490:
 10045  002A06  90D8               	bcf	status,0,c
 10046  002A08  3606               	rlcf	___fladd@b^0,f,c
 10047  002A0A  3607               	rlcf	(___fladd@b+1)^0,f,c
 10048  002A0C  3608               	rlcf	(___fladd@b+2)^0,f,c
 10049  002A0E  3609               	rlcf	(___fladd@b+3)^0,f,c
 10050  002A10  BE15               	btfsc	___fladd@grs^0,7,c
 10051  002A12  8006               	bsf	___fladd@b^0,0,c
 10052  002A14  A015               	btfss	___fladd@grs^0,0,c
 10053  002A16  D002               	goto	l6500
 10054  002A18  80D8               	bsf	status,0,c
 10055  002A1A  D001               	goto	L14
 10056  002A1C                     l6500:
 10057  002A1C  90D8               	bcf	status,0,c
 10058  002A1E                     L14:
 10059  002A1E  3615               	rlcf	___fladd@grs^0,f,c
 10060  002A20  5014               	movf	___fladd@bexp^0,w,c
 10061  002A22  A4D8               	btfss	status,2,c
 10062  002A24  0614               	decf	___fladd@bexp^0,f,c
 10063  002A26                     l6506:
 10064  002A26  AE08               	btfss	(___fladd@b+2)^0,7,c
 10065  002A28  D7EE               	goto	l6490
 10066  002A2A                     u6790:
 10067  002A2A  0E00               	movlw	0
 10068  002A2C  6E13               	movwf	___fladd@aexp^0,c
 10069  002A2E  AE15               	btfss	___fladd@grs^0,7,c
 10070  002A30  D00C               	goto	l1984
 10071  002A32  0060  F054  F00E   	movff	___fladd@grs,??___fladd
 10072  002A38  0E7F               	movlw	127
 10073  002A3A  160E               	andwf	??___fladd^0,f,c
 10074  002A3C  B4D8               	btfsc	status,2,c
 10075  002A3E  D003               	goto	l1985
 10076  002A40                     u6810:
 10077  002A40  0E01               	movlw	1
 10078  002A42  6E13               	movwf	___fladd@aexp^0,c
 10079  002A44  D002               	goto	l1984
 10080  002A46                     l1985:
 10081  002A46  B006               	btfsc	___fladd@b^0,0,c
 10082  002A48  D7FB               	goto	u6810
 10083  002A4A                     l1984:
 10084  002A4A  5013               	movf	___fladd@aexp^0,w,c
 10085  002A4C  B4D8               	btfsc	status,2,c
 10086  002A4E  D028               	goto	l6526
 10087  002A50  0E01               	movlw	1
 10088  002A52  2606               	addwf	___fladd@b^0,f,c
 10089  002A54  0E00               	movlw	0
 10090  002A56  2207               	addwfc	(___fladd@b+1)^0,f,c
 10091  002A58  2208               	addwfc	(___fladd@b+2)^0,f,c
 10092  002A5A  2209               	addwfc	(___fladd@b+3)^0,f,c
 10093  002A5C  A009               	btfss	(___fladd@b+3)^0,0,c
 10094  002A5E  D020               	goto	l6526
 10095  002A60  0060  F018  F00E   	movff	___fladd@b,??___fladd
 10096  002A66  0060  F01C  F00F   	movff	___fladd@b+1,??___fladd+1
 10097  002A6C  0060  F020  F010   	movff	___fladd@b+2,??___fladd+2
 10098  002A72  0060  F024  F011   	movff	___fladd@b+3,??___fladd+3
 10099  002A78  3411               	rlcf	(??___fladd+3)^0,w,c
 10100  002A7A  3211               	rrcf	(??___fladd+3)^0,f,c
 10101  002A7C  3210               	rrcf	(??___fladd+2)^0,f,c
 10102  002A7E  320F               	rrcf	(??___fladd+1)^0,f,c
 10103  002A80  320E               	rrcf	??___fladd^0,f,c
 10104  002A82  0060  F038  F006   	movff	??___fladd,___fladd@b
 10105  002A88  0060  F03C  F007   	movff	??___fladd+1,___fladd@b+1
 10106  002A8E  0060  F040  F008   	movff	??___fladd+2,___fladd@b+2
 10107  002A94  0060  F044  F009   	movff	??___fladd+3,___fladd@b+3
 10108  002A9A  2814               	incf	___fladd@bexp^0,w,c
 10109  002A9C  A4D8               	btfss	status,2,c
 10110  002A9E  2A14               	incf	___fladd@bexp^0,f,c
 10111  002AA0                     l6526:
 10112  002AA0  2814               	incf	___fladd@bexp^0,w,c
 10113  002AA2  B4D8               	btfsc	status,2,c
 10114  002AA4  D003               	goto	u6870
 10115  002AA6  5014               	movf	___fladd@bexp^0,w,c
 10116  002AA8  A4D8               	btfss	status,2,c
 10117  002AAA  D00D               	goto	l6534
 10118  002AAC                     u6870:
 10119  002AAC  0E00               	movlw	0
 10120  002AAE  6E06               	movwf	___fladd@b^0,c
 10121  002AB0  0E00               	movlw	0
 10122  002AB2  6E07               	movwf	(___fladd@b+1)^0,c
 10123  002AB4  0E00               	movlw	0
 10124  002AB6  6E08               	movwf	(___fladd@b+2)^0,c
 10125  002AB8  0E00               	movlw	0
 10126  002ABA  6E09               	movwf	(___fladd@b+3)^0,c
 10127  002ABC  5014               	movf	___fladd@bexp^0,w,c
 10128  002ABE  A4D8               	btfss	status,2,c
 10129  002AC0  D002               	goto	l6534
 10130  002AC2  0E00               	movlw	0
 10131  002AC4  6E12               	movwf	___fladd@signs^0,c
 10132  002AC6                     l6534:
 10133  002AC6  A014               	btfss	___fladd@bexp^0,0,c
 10134  002AC8  D002               	goto	l6538
 10135  002ACA  8E08               	bsf	(___fladd@b+2)^0,7,c
 10136  002ACC  D001               	goto	l6540
 10137  002ACE                     l6538:
 10138  002ACE  9E08               	bcf	(___fladd@b+2)^0,7,c
 10139  002AD0                     l6540:
 10140  002AD0  90D8               	bcf	status,0,c
 10141  002AD2  3014               	rrcf	___fladd@bexp^0,w,c
 10142  002AD4  6E09               	movwf	(___fladd@b+3)^0,c
 10143  002AD6  BE12               	btfsc	___fladd@signs^0,7,c
 10144  002AD8  8E09               	bsf	(___fladd@b+3)^0,7,c
 10145  002ADA  0060  F018  F006   	movff	___fladd@b,?___fladd
 10146  002AE0  0060  F01C  F007   	movff	___fladd@b+1,?___fladd+1
 10147  002AE6  0060  F020  F008   	movff	___fladd@b+2,?___fladd+2
 10148  002AEC  0060  F024  F009   	movff	___fladd@b+3,?___fladd+3
 10149  002AF2  0012               	return		;funcret
 10150  002AF4                     __end_of___fladd:
 10151                           	opt callstack 0
 10152                           
 10153 ;; *************** function ___flmul *****************
 10154 ;; Defined at:
 10155 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  b               4   21[COMRAM] unsigned char 
 10158 ;;  a               4   25[COMRAM] unsigned char 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  prod            4   40[COMRAM] struct .
 10161 ;;  grs             4   36[COMRAM] unsigned long 
 10162 ;;  temp            2   44[COMRAM] struct .
 10163 ;;  bexp            1   35[COMRAM] unsigned char 
 10164 ;;  aexp            1   34[COMRAM] unsigned char 
 10165 ;;  sign            1   33[COMRAM] unsigned char 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  4   21[COMRAM] unsigned char 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0, prodl, prodh
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10175 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10176 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10178 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10179 ;;Total ram usage:       25 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    4
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_lp_filter
 10186 ;;		_calc_pot
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text64
 10191  002428                     __ptext64:
 10192                           	opt callstack 0
 10193  002428                     ___flmul:
 10194                           	opt callstack 23
 10195                           
 10196                           ;incstack = 0
 10197  002428  5019               	movf	(___flmul@b+3)^0,w,c
 10198  00242A  0B80               	andlw	128
 10199  00242C  6E22               	movwf	___flmul@sign^0,c
 10200  00242E  5019               	movf	(___flmul@b+3)^0,w,c
 10201  002430  2419               	addwf	(___flmul@b+3)^0,w,c
 10202  002432  6E24               	movwf	___flmul@bexp^0,c
 10203  002434  BE18               	btfsc	(___flmul@b+2)^0,7,c
 10204  002436  8024               	bsf	___flmul@bexp^0,0,c
 10205  002438  5024               	movf	___flmul@bexp^0,w,c
 10206  00243A  B4D8               	btfsc	status,2,c
 10207  00243C  D00D               	goto	l6768
 10208  00243E  2824               	incf	___flmul@bexp^0,w,c
 10209  002440  A4D8               	btfss	status,2,c
 10210  002442  D008               	goto	l6766
 10211  002444  0E00               	movlw	0
 10212  002446  6E16               	movwf	___flmul@b^0,c
 10213  002448  0E00               	movlw	0
 10214  00244A  6E17               	movwf	(___flmul@b+1)^0,c
 10215  00244C  0E00               	movlw	0
 10216  00244E  6E18               	movwf	(___flmul@b+2)^0,c
 10217  002450  0E00               	movlw	0
 10218  002452  6E19               	movwf	(___flmul@b+3)^0,c
 10219  002454                     l6766:
 10220  002454  8E18               	bsf	(___flmul@b+2)^0,7,c
 10221  002456  D008               	goto	l6770
 10222  002458                     l6768:
 10223  002458  0E00               	movlw	0
 10224  00245A  6E16               	movwf	___flmul@b^0,c
 10225  00245C  0E00               	movlw	0
 10226  00245E  6E17               	movwf	(___flmul@b+1)^0,c
 10227  002460  0E00               	movlw	0
 10228  002462  6E18               	movwf	(___flmul@b+2)^0,c
 10229  002464  0E00               	movlw	0
 10230  002466  6E19               	movwf	(___flmul@b+3)^0,c
 10231  002468                     l6770:
 10232  002468  501D               	movf	(___flmul@a+3)^0,w,c
 10233  00246A  0B80               	andlw	128
 10234  00246C  1A22               	xorwf	___flmul@sign^0,f,c
 10235  00246E  501D               	movf	(___flmul@a+3)^0,w,c
 10236  002470  241D               	addwf	(___flmul@a+3)^0,w,c
 10237  002472  6E23               	movwf	___flmul@aexp^0,c
 10238  002474  BE1C               	btfsc	(___flmul@a+2)^0,7,c
 10239  002476  8023               	bsf	___flmul@aexp^0,0,c
 10240  002478  5023               	movf	___flmul@aexp^0,w,c
 10241  00247A  B4D8               	btfsc	status,2,c
 10242  00247C  D00D               	goto	l6786
 10243  00247E  2823               	incf	___flmul@aexp^0,w,c
 10244  002480  A4D8               	btfss	status,2,c
 10245  002482  D008               	goto	l6784
 10246  002484  0E00               	movlw	0
 10247  002486  6E1A               	movwf	___flmul@a^0,c
 10248  002488  0E00               	movlw	0
 10249  00248A  6E1B               	movwf	(___flmul@a+1)^0,c
 10250  00248C  0E00               	movlw	0
 10251  00248E  6E1C               	movwf	(___flmul@a+2)^0,c
 10252  002490  0E00               	movlw	0
 10253  002492  6E1D               	movwf	(___flmul@a+3)^0,c
 10254  002494                     l6784:
 10255  002494  8E1C               	bsf	(___flmul@a+2)^0,7,c
 10256  002496  D008               	goto	l2044
 10257  002498                     l6786:
 10258  002498  0E00               	movlw	0
 10259  00249A  6E1A               	movwf	___flmul@a^0,c
 10260  00249C  0E00               	movlw	0
 10261  00249E  6E1B               	movwf	(___flmul@a+1)^0,c
 10262  0024A0  0E00               	movlw	0
 10263  0024A2  6E1C               	movwf	(___flmul@a+2)^0,c
 10264  0024A4  0E00               	movlw	0
 10265  0024A6  6E1D               	movwf	(___flmul@a+3)^0,c
 10266  0024A8                     l2044:
 10267  0024A8  5023               	movf	___flmul@aexp^0,w,c
 10268  0024AA  B4D8               	btfsc	status,2,c
 10269  0024AC  D003               	goto	u7280
 10270  0024AE  5024               	movf	___flmul@bexp^0,w,c
 10271  0024B0  A4D8               	btfss	status,2,c
 10272  0024B2  D009               	goto	l6794
 10273  0024B4                     u7280:
 10274  0024B4  0E00               	movlw	0
 10275  0024B6  6E16               	movwf	?___flmul^0,c
 10276  0024B8  0E00               	movlw	0
 10277  0024BA  6E17               	movwf	(?___flmul+1)^0,c
 10278  0024BC  0E00               	movlw	0
 10279  0024BE  6E18               	movwf	(?___flmul+2)^0,c
 10280  0024C0  0E00               	movlw	0
 10281  0024C2  6E19               	movwf	(?___flmul+3)^0,c
 10282  0024C4  0012               	return	
 10283  0024C6                     l6794:
 10284  0024C6  501C               	movf	(___flmul@a+2)^0,w,c
 10285  0024C8  0216               	mulwf	___flmul@b^0,c
 10286  0024CA  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10287  0024D0  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10288  0024D6  502D               	movf	___flmul@temp^0,w,c
 10289  0024D8  6E25               	movwf	___flmul@grs^0,c
 10290  0024DA  6A26               	clrf	(___flmul@grs+1)^0,c
 10291  0024DC  6A27               	clrf	(___flmul@grs+2)^0,c
 10292  0024DE  6A28               	clrf	(___flmul@grs+3)^0,c
 10293  0024E0  502E               	movf	(___flmul@temp+1)^0,w,c
 10294  0024E2  6E29               	movwf	___flmul@prod^0,c
 10295  0024E4  6A2A               	clrf	(___flmul@prod+1)^0,c
 10296  0024E6  6A2B               	clrf	(___flmul@prod+2)^0,c
 10297  0024E8  6A2C               	clrf	(___flmul@prod+3)^0,c
 10298  0024EA  501B               	movf	(___flmul@a+1)^0,w,c
 10299  0024EC  0217               	mulwf	(___flmul@b+1)^0,c
 10300  0024EE  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10301  0024F4  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10302  0024FA  502D               	movf	___flmul@temp^0,w,c
 10303  0024FC  2625               	addwf	___flmul@grs^0,f,c
 10304  0024FE  0E00               	movlw	0
 10305  002500  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10306  002502  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10307  002504  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10308  002506  502E               	movf	(___flmul@temp+1)^0,w,c
 10309  002508  2629               	addwf	___flmul@prod^0,f,c
 10310  00250A  0E00               	movlw	0
 10311  00250C  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10312  00250E  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10313  002510  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10314  002512  501A               	movf	___flmul@a^0,w,c
 10315  002514  0218               	mulwf	(___flmul@b+2)^0,c
 10316  002516  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10317  00251C  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10318  002522  502D               	movf	___flmul@temp^0,w,c
 10319  002524  2625               	addwf	___flmul@grs^0,f,c
 10320  002526  0E00               	movlw	0
 10321  002528  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10322  00252A  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10323  00252C  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10324  00252E  502E               	movf	(___flmul@temp+1)^0,w,c
 10325  002530  2629               	addwf	___flmul@prod^0,f,c
 10326  002532  0E00               	movlw	0
 10327  002534  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10328  002536  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10329  002538  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10330  00253A  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10331  002540  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10332  002546  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10333  00254C  6A25               	clrf	___flmul@grs^0,c
 10334  00254E  501A               	movf	___flmul@a^0,w,c
 10335  002550  0217               	mulwf	(___flmul@b+1)^0,c
 10336  002552  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10337  002558  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10338  00255E  502D               	movf	___flmul@temp^0,w,c
 10339  002560  2625               	addwf	___flmul@grs^0,f,c
 10340  002562  502E               	movf	(___flmul@temp+1)^0,w,c
 10341  002564  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10342  002566  0E00               	movlw	0
 10343  002568  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10344  00256A  0E00               	movlw	0
 10345  00256C  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10346  00256E  501B               	movf	(___flmul@a+1)^0,w,c
 10347  002570  0216               	mulwf	___flmul@b^0,c
 10348  002572  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10349  002578  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10350  00257E  502D               	movf	___flmul@temp^0,w,c
 10351  002580  2625               	addwf	___flmul@grs^0,f,c
 10352  002582  502E               	movf	(___flmul@temp+1)^0,w,c
 10353  002584  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10354  002586  0E00               	movlw	0
 10355  002588  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10356  00258A  0E00               	movlw	0
 10357  00258C  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10358  00258E  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10359  002594  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10360  00259A  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10361  0025A0  6A25               	clrf	___flmul@grs^0,c
 10362  0025A2  501A               	movf	___flmul@a^0,w,c
 10363  0025A4  0216               	mulwf	___flmul@b^0,c
 10364  0025A6  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10365  0025AC  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10366  0025B2  502D               	movf	___flmul@temp^0,w,c
 10367  0025B4  2625               	addwf	___flmul@grs^0,f,c
 10368  0025B6  502E               	movf	(___flmul@temp+1)^0,w,c
 10369  0025B8  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10370  0025BA  0E00               	movlw	0
 10371  0025BC  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10372  0025BE  0E00               	movlw	0
 10373  0025C0  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10374  0025C2  501C               	movf	(___flmul@a+2)^0,w,c
 10375  0025C4  0217               	mulwf	(___flmul@b+1)^0,c
 10376  0025C6  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10377  0025CC  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10378  0025D2  502D               	movf	___flmul@temp^0,w,c
 10379  0025D4  2629               	addwf	___flmul@prod^0,f,c
 10380  0025D6  502E               	movf	(___flmul@temp+1)^0,w,c
 10381  0025D8  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10382  0025DA  0E00               	movlw	0
 10383  0025DC  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10384  0025DE  0E00               	movlw	0
 10385  0025E0  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10386  0025E2  501B               	movf	(___flmul@a+1)^0,w,c
 10387  0025E4  0218               	mulwf	(___flmul@b+2)^0,c
 10388  0025E6  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10389  0025EC  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10390  0025F2  502D               	movf	___flmul@temp^0,w,c
 10391  0025F4  2629               	addwf	___flmul@prod^0,f,c
 10392  0025F6  502E               	movf	(___flmul@temp+1)^0,w,c
 10393  0025F8  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10394  0025FA  0E00               	movlw	0
 10395  0025FC  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10396  0025FE  0E00               	movlw	0
 10397  002600  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10398  002602  501C               	movf	(___flmul@a+2)^0,w,c
 10399  002604  0218               	mulwf	(___flmul@b+2)^0,c
 10400  002606  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10401  00260C  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10402  002612  502D               	movf	___flmul@temp^0,w,c
 10403  002614  6E1E               	movwf	??___flmul^0,c
 10404  002616  502E               	movf	(___flmul@temp+1)^0,w,c
 10405  002618  6E1F               	movwf	(??___flmul+1)^0,c
 10406  00261A  6A20               	clrf	(??___flmul+2)^0,c
 10407  00261C  6A21               	clrf	(??___flmul+3)^0,c
 10408  00261E  0060  F080  F021   	movff	??___flmul+2,??___flmul+3
 10409  002624  0060  F07C  F020   	movff	??___flmul+1,??___flmul+2
 10410  00262A  0060  F078  F01F   	movff	??___flmul,??___flmul+1
 10411  002630  6A1E               	clrf	??___flmul^0,c
 10412  002632  501E               	movf	??___flmul^0,w,c
 10413  002634  2629               	addwf	___flmul@prod^0,f,c
 10414  002636  501F               	movf	(??___flmul+1)^0,w,c
 10415  002638  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10416  00263A  5020               	movf	(??___flmul+2)^0,w,c
 10417  00263C  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10418  00263E  5021               	movf	(??___flmul+3)^0,w,c
 10419  002640  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10420  002642  5028               	movf	(___flmul@grs+3)^0,w,c
 10421  002644  2629               	addwf	___flmul@prod^0,f,c
 10422  002646  0E00               	movlw	0
 10423  002648  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10424  00264A  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10425  00264C  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10426  00264E  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10427  002654  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10428  00265A  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10429  002660  6A25               	clrf	___flmul@grs^0,c
 10430  002662  5023               	movf	___flmul@aexp^0,w,c
 10431  002664  0060  F090  F01E   	movff	___flmul@bexp,??___flmul
 10432  00266A  6A1F               	clrf	(??___flmul+1)^0,c
 10433  00266C  261E               	addwf	??___flmul^0,f,c
 10434  00266E  0E00               	movlw	0
 10435  002670  221F               	addwfc	(??___flmul+1)^0,f,c
 10436  002672  0E82               	movlw	130
 10437  002674  241E               	addwf	??___flmul^0,w,c
 10438  002676  6E2D               	movwf	___flmul@temp^0,c
 10439  002678  0EFF               	movlw	255
 10440  00267A  201F               	addwfc	(??___flmul+1)^0,w,c
 10441  00267C  6E2E               	movwf	(___flmul@temp+1)^0,c
 10442  00267E  D00F               	goto	l6842
 10443  002680                     l6836:
 10444  002680  90D8               	bcf	status,0,c
 10445  002682  3629               	rlcf	___flmul@prod^0,f,c
 10446  002684  362A               	rlcf	(___flmul@prod+1)^0,f,c
 10447  002686  362B               	rlcf	(___flmul@prod+2)^0,f,c
 10448  002688  362C               	rlcf	(___flmul@prod+3)^0,f,c
 10449  00268A  BE28               	btfsc	(___flmul@grs+3)^0,7,c
 10450  00268C  8029               	bsf	___flmul@prod^0,0,c
 10451  00268E  90D8               	bcf	status,0,c
 10452  002690  3625               	rlcf	___flmul@grs^0,f,c
 10453  002692  3626               	rlcf	(___flmul@grs+1)^0,f,c
 10454  002694  3627               	rlcf	(___flmul@grs+2)^0,f,c
 10455  002696  3628               	rlcf	(___flmul@grs+3)^0,f,c
 10456  002698  062D               	decf	___flmul@temp^0,f,c
 10457  00269A  A0D8               	btfss	status,0,c
 10458  00269C  062E               	decf	(___flmul@temp+1)^0,f,c
 10459  00269E                     l6842:
 10460  00269E  AE2B               	btfss	(___flmul@prod+2)^0,7,c
 10461  0026A0  D7EF               	goto	l6836
 10462  0026A2  0E00               	movlw	0
 10463  0026A4  6E23               	movwf	___flmul@aexp^0,c
 10464  0026A6  AE28               	btfss	(___flmul@grs+3)^0,7,c
 10465  0026A8  D017               	goto	l2053
 10466  0026AA  0EFF               	movlw	255
 10467  0026AC  1425               	andwf	___flmul@grs^0,w,c
 10468  0026AE  6E1E               	movwf	??___flmul^0,c
 10469  0026B0  0EFF               	movlw	255
 10470  0026B2  1426               	andwf	(___flmul@grs+1)^0,w,c
 10471  0026B4  6E1F               	movwf	(??___flmul+1)^0,c
 10472  0026B6  0EFF               	movlw	255
 10473  0026B8  1427               	andwf	(___flmul@grs+2)^0,w,c
 10474  0026BA  6E20               	movwf	(??___flmul+2)^0,c
 10475  0026BC  0E7F               	movlw	127
 10476  0026BE  1428               	andwf	(___flmul@grs+3)^0,w,c
 10477  0026C0  6E21               	movwf	(??___flmul+3)^0,c
 10478  0026C2  501E               	movf	??___flmul^0,w,c
 10479  0026C4  101F               	iorwf	(??___flmul+1)^0,w,c
 10480  0026C6  1020               	iorwf	(??___flmul+2)^0,w,c
 10481  0026C8  1021               	iorwf	(??___flmul+3)^0,w,c
 10482  0026CA  B4D8               	btfsc	status,2,c
 10483  0026CC  D003               	goto	l2054
 10484  0026CE                     u7320:
 10485  0026CE  0E01               	movlw	1
 10486  0026D0  6E23               	movwf	___flmul@aexp^0,c
 10487  0026D2  D002               	goto	l2053
 10488  0026D4                     l2054:
 10489  0026D4  B029               	btfsc	___flmul@prod^0,0,c
 10490  0026D6  D7FB               	goto	u7320
 10491  0026D8                     l2053:
 10492  0026D8  5023               	movf	___flmul@aexp^0,w,c
 10493  0026DA  B4D8               	btfsc	status,2,c
 10494  0026DC  D027               	goto	l6862
 10495  0026DE  0E01               	movlw	1
 10496  0026E0  2629               	addwf	___flmul@prod^0,f,c
 10497  0026E2  0E00               	movlw	0
 10498  0026E4  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10499  0026E6  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10500  0026E8  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10501  0026EA  A02C               	btfss	(___flmul@prod+3)^0,0,c
 10502  0026EC  D01F               	goto	l6862
 10503  0026EE  0060  F0A4  F01E   	movff	___flmul@prod,??___flmul
 10504  0026F4  0060  F0A8  F01F   	movff	___flmul@prod+1,??___flmul+1
 10505  0026FA  0060  F0AC  F020   	movff	___flmul@prod+2,??___flmul+2
 10506  002700  0060  F0B0  F021   	movff	___flmul@prod+3,??___flmul+3
 10507  002706  3421               	rlcf	(??___flmul+3)^0,w,c
 10508  002708  3221               	rrcf	(??___flmul+3)^0,f,c
 10509  00270A  3220               	rrcf	(??___flmul+2)^0,f,c
 10510  00270C  321F               	rrcf	(??___flmul+1)^0,f,c
 10511  00270E  321E               	rrcf	??___flmul^0,f,c
 10512  002710  0060  F078  F029   	movff	??___flmul,___flmul@prod
 10513  002716  0060  F07C  F02A   	movff	??___flmul+1,___flmul@prod+1
 10514  00271C  0060  F080  F02B   	movff	??___flmul+2,___flmul@prod+2
 10515  002722  0060  F084  F02C   	movff	??___flmul+3,___flmul@prod+3
 10516  002728  4A2D               	infsnz	___flmul@temp^0,f,c
 10517  00272A  2A2E               	incf	(___flmul@temp+1)^0,f,c
 10518  00272C                     l6862:
 10519  00272C  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10520  00272E  D00D               	goto	l6866
 10521  002730  502E               	movf	(___flmul@temp+1)^0,w,c
 10522  002732  E103               	bnz	u7360
 10523  002734  282D               	incf	___flmul@temp^0,w,c
 10524  002736  A0D8               	btfss	status,0,c
 10525  002738  D008               	goto	l6866
 10526  00273A                     u7360:
 10527  00273A  0E00               	movlw	0
 10528  00273C  6E29               	movwf	___flmul@prod^0,c
 10529  00273E  0E00               	movlw	0
 10530  002740  6E2A               	movwf	(___flmul@prod+1)^0,c
 10531  002742  0E80               	movlw	128
 10532  002744  6E2B               	movwf	(___flmul@prod+2)^0,c
 10533  002746  0E7F               	movlw	127
 10534  002748  D021               	goto	L15
 10535  00274A                     l6866:
 10536  00274A  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10537  00274C  D005               	goto	u7370
 10538  00274E  502E               	movf	(___flmul@temp+1)^0,w,c
 10539  002750  E10E               	bnz	l2061
 10540  002752  042D               	decf	___flmul@temp^0,w,c
 10541  002754  B0D8               	btfsc	status,0,c
 10542  002756  D00B               	goto	l2061
 10543  002758                     u7370:
 10544  002758  0E00               	movlw	0
 10545  00275A  6E29               	movwf	___flmul@prod^0,c
 10546  00275C  0E00               	movlw	0
 10547  00275E  6E2A               	movwf	(___flmul@prod+1)^0,c
 10548  002760  0E00               	movlw	0
 10549  002762  6E2B               	movwf	(___flmul@prod+2)^0,c
 10550  002764  0E00               	movlw	0
 10551  002766  6E2C               	movwf	(___flmul@prod+3)^0,c
 10552  002768  0E00               	movlw	0
 10553  00276A  6E22               	movwf	___flmul@sign^0,c
 10554  00276C  D010               	goto	l6878
 10555  00276E                     l2061:
 10556  00276E  0060  F0B4  F024   	movff	___flmul@temp,___flmul@bexp
 10557  002774  0EFF               	movlw	255
 10558  002776  1629               	andwf	___flmul@prod^0,f,c
 10559  002778  0EFF               	movlw	255
 10560  00277A  162A               	andwf	(___flmul@prod+1)^0,f,c
 10561  00277C  0E7F               	movlw	127
 10562  00277E  162B               	andwf	(___flmul@prod+2)^0,f,c
 10563  002780  0E00               	movlw	0
 10564  002782  162C               	andwf	(___flmul@prod+3)^0,f,c
 10565  002784  B024               	btfsc	___flmul@bexp^0,0,c
 10566  002786  8E2B               	bsf	(___flmul@prod+2)^0,7,c
 10567  002788  90D8               	bcf	status,0,c
 10568  00278A  3024               	rrcf	___flmul@bexp^0,w,c
 10569  00278C                     L15:
 10570  00278C  6E2C               	movwf	(___flmul@prod+3)^0,c
 10571  00278E                     l6878:
 10572  00278E  5022               	movf	___flmul@sign^0,w,c
 10573  002790  122C               	iorwf	(___flmul@prod+3)^0,f,c
 10574  002792  0060  F0A4  F016   	movff	___flmul@prod,?___flmul
 10575  002798  0060  F0A8  F017   	movff	___flmul@prod+1,?___flmul+1
 10576  00279E  0060  F0AC  F018   	movff	___flmul@prod+2,?___flmul+2
 10577  0027A4  0060  F0B0  F019   	movff	___flmul@prod+3,?___flmul+3
 10578  0027AA  0012               	return		;funcret
 10579  0027AC                     __end_of___flmul:
 10580                           	opt callstack 0
 10581                           
 10582 ;; *************** function ___fldiv *****************
 10583 ;; Defined at:
 10584 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 10585 ;; Parameters:    Size  Location     Type
 10586 ;;  b               4   54[COMRAM] unsigned char 
 10587 ;;  a               4   58[COMRAM] unsigned char 
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;  grs             4   73[COMRAM] unsigned long 
 10590 ;;  rem             4   66[COMRAM] unsigned long 
 10591 ;;  new_exp         2   71[COMRAM] short 
 10592 ;;  aexp            1   78[COMRAM] unsigned char 
 10593 ;;  bexp            1   77[COMRAM] unsigned char 
 10594 ;;  sign            1   70[COMRAM] unsigned char 
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  4   54[COMRAM] unsigned char 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2, status,0
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/1
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10604 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10607 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10608 ;;Total ram usage:       25 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    4
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_main
 10615 ;;		_lp_filter
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text65
 10620  003304                     __ptext65:
 10621                           	opt callstack 0
 10622  003304                     ___fldiv:
 10623                           	opt callstack 26
 10624                           
 10625                           ;incstack = 0
 10626  003304  503A               	movf	(___fldiv@b+3)^0,w,c
 10627  003306  0B80               	andlw	128
 10628  003308  6E47               	movwf	___fldiv@sign^0,c
 10629  00330A  503A               	movf	(___fldiv@b+3)^0,w,c
 10630  00330C  243A               	addwf	(___fldiv@b+3)^0,w,c
 10631  00330E  6E4E               	movwf	___fldiv@bexp^0,c
 10632  003310  BE39               	btfsc	(___fldiv@b+2)^0,7,c
 10633  003312  804E               	bsf	___fldiv@bexp^0,0,c
 10634  003314  504E               	movf	___fldiv@bexp^0,w,c
 10635  003316  B4D8               	btfsc	status,2,c
 10636  003318  D00D               	goto	l6632
 10637  00331A  284E               	incf	___fldiv@bexp^0,w,c
 10638  00331C  A4D8               	btfss	status,2,c
 10639  00331E  D008               	goto	l6628
 10640  003320  0E00               	movlw	0
 10641  003322  6E37               	movwf	___fldiv@b^0,c
 10642  003324  0E00               	movlw	0
 10643  003326  6E38               	movwf	(___fldiv@b+1)^0,c
 10644  003328  0E00               	movlw	0
 10645  00332A  6E39               	movwf	(___fldiv@b+2)^0,c
 10646  00332C  0E00               	movlw	0
 10647  00332E  6E3A               	movwf	(___fldiv@b+3)^0,c
 10648  003330                     l6628:
 10649  003330  8E39               	bsf	(___fldiv@b+2)^0,7,c
 10650  003332  D006               	goto	L16
 10651  003334                     l6632:
 10652  003334  0E00               	movlw	0
 10653  003336  6E37               	movwf	___fldiv@b^0,c
 10654  003338  0E00               	movlw	0
 10655  00333A  6E38               	movwf	(___fldiv@b+1)^0,c
 10656  00333C  0E00               	movlw	0
 10657  00333E  6E39               	movwf	(___fldiv@b+2)^0,c
 10658  003340                     L16:
 10659  003340  0E00               	movlw	0
 10660  003342  6E3A               	movwf	(___fldiv@b+3)^0,c
 10661  003344  503E               	movf	(___fldiv@a+3)^0,w,c
 10662  003346  0B80               	andlw	128
 10663  003348  1A47               	xorwf	___fldiv@sign^0,f,c
 10664  00334A  503E               	movf	(___fldiv@a+3)^0,w,c
 10665  00334C  243E               	addwf	(___fldiv@a+3)^0,w,c
 10666  00334E  6E4F               	movwf	___fldiv@aexp^0,c
 10667  003350  BE3D               	btfsc	(___fldiv@a+2)^0,7,c
 10668  003352  804F               	bsf	___fldiv@aexp^0,0,c
 10669  003354  504F               	movf	___fldiv@aexp^0,w,c
 10670  003356  B4D8               	btfsc	status,2,c
 10671  003358  D00D               	goto	l6652
 10672  00335A  284F               	incf	___fldiv@aexp^0,w,c
 10673  00335C  A4D8               	btfss	status,2,c
 10674  00335E  D008               	goto	l6648
 10675  003360  0E00               	movlw	0
 10676  003362  6E3B               	movwf	___fldiv@a^0,c
 10677  003364  0E00               	movlw	0
 10678  003366  6E3C               	movwf	(___fldiv@a+1)^0,c
 10679  003368  0E00               	movlw	0
 10680  00336A  6E3D               	movwf	(___fldiv@a+2)^0,c
 10681  00336C  0E00               	movlw	0
 10682  00336E  6E3E               	movwf	(___fldiv@a+3)^0,c
 10683  003370                     l6648:
 10684  003370  8E3D               	bsf	(___fldiv@a+2)^0,7,c
 10685  003372  D006               	goto	L17
 10686  003374                     l6652:
 10687  003374  0E00               	movlw	0
 10688  003376  6E3B               	movwf	___fldiv@a^0,c
 10689  003378  0E00               	movlw	0
 10690  00337A  6E3C               	movwf	(___fldiv@a+1)^0,c
 10691  00337C  0E00               	movlw	0
 10692  00337E  6E3D               	movwf	(___fldiv@a+2)^0,c
 10693  003380                     L17:
 10694  003380  0E00               	movlw	0
 10695  003382  6E3E               	movwf	(___fldiv@a+3)^0,c
 10696  003384  503B               	movf	___fldiv@a^0,w,c
 10697  003386  103C               	iorwf	(___fldiv@a+1)^0,w,c
 10698  003388  103D               	iorwf	(___fldiv@a+2)^0,w,c
 10699  00338A  103E               	iorwf	(___fldiv@a+3)^0,w,c
 10700  00338C  A4D8               	btfss	status,2,c
 10701  00338E  D01B               	goto	l6666
 10702  003390  0E00               	movlw	0
 10703  003392  6E37               	movwf	___fldiv@b^0,c
 10704  003394  0E00               	movlw	0
 10705  003396  6E38               	movwf	(___fldiv@b+1)^0,c
 10706  003398  0E00               	movlw	0
 10707  00339A  6E39               	movwf	(___fldiv@b+2)^0,c
 10708  00339C  0E00               	movlw	0
 10709  00339E  6E3A               	movwf	(___fldiv@b+3)^0,c
 10710  0033A0  0E80               	movlw	128
 10711  0033A2  1239               	iorwf	(___fldiv@b+2)^0,f,c
 10712  0033A4  0E7F               	movlw	127
 10713  0033A6  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10714  0033A8                     l6660:
 10715  0033A8  5047               	movf	___fldiv@sign^0,w,c
 10716  0033AA  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10717  0033AC  0060  F0DC  F037   	movff	___fldiv@b,?___fldiv
 10718  0033B2  0060  F0E0  F038   	movff	___fldiv@b+1,?___fldiv+1
 10719  0033B8  0060  F0E4  F039   	movff	___fldiv@b+2,?___fldiv+2
 10720  0033BE  0060  F0E8  F03A   	movff	___fldiv@b+3,?___fldiv+3
 10721  0033C4  0012               	return	
 10722  0033C6                     l6666:
 10723  0033C6  504E               	movf	___fldiv@bexp^0,w,c
 10724  0033C8  A4D8               	btfss	status,2,c
 10725  0033CA  D009               	goto	l6674
 10726  0033CC  0E00               	movlw	0
 10727  0033CE  6E37               	movwf	?___fldiv^0,c
 10728  0033D0  0E00               	movlw	0
 10729  0033D2  6E38               	movwf	(?___fldiv+1)^0,c
 10730  0033D4  0E00               	movlw	0
 10731  0033D6  6E39               	movwf	(?___fldiv+2)^0,c
 10732  0033D8  0E00               	movlw	0
 10733  0033DA  6E3A               	movwf	(?___fldiv+3)^0,c
 10734  0033DC  0012               	return	
 10735  0033DE                     l6674:
 10736  0033DE  504F               	movf	___fldiv@aexp^0,w,c
 10737  0033E0  0060  F138  F03F   	movff	___fldiv@bexp,??___fldiv
 10738  0033E6  6A40               	clrf	(??___fldiv+1)^0,c
 10739  0033E8  5E3F               	subwf	??___fldiv^0,f,c
 10740  0033EA  0E00               	movlw	0
 10741  0033EC  5A40               	subwfb	(??___fldiv+1)^0,f,c
 10742  0033EE  0E7F               	movlw	127
 10743  0033F0  243F               	addwf	??___fldiv^0,w,c
 10744  0033F2  6E48               	movwf	___fldiv@new_exp^0,c
 10745  0033F4  0E00               	movlw	0
 10746  0033F6  2040               	addwfc	(??___fldiv+1)^0,w,c
 10747  0033F8  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10748  0033FA  0060  F0DC  F043   	movff	___fldiv@b,___fldiv@rem
 10749  003400  0060  F0E0  F044   	movff	___fldiv@b+1,___fldiv@rem+1
 10750  003406  0060  F0E4  F045   	movff	___fldiv@b+2,___fldiv@rem+2
 10751  00340C  0060  F0E8  F046   	movff	___fldiv@b+3,___fldiv@rem+3
 10752  003412  0E00               	movlw	0
 10753  003414  6E37               	movwf	___fldiv@b^0,c
 10754  003416  0E00               	movlw	0
 10755  003418  6E38               	movwf	(___fldiv@b+1)^0,c
 10756  00341A  0E00               	movlw	0
 10757  00341C  6E39               	movwf	(___fldiv@b+2)^0,c
 10758  00341E  0E00               	movlw	0
 10759  003420  6E3A               	movwf	(___fldiv@b+3)^0,c
 10760  003422  0E00               	movlw	0
 10761  003424  6E4A               	movwf	___fldiv@grs^0,c
 10762  003426  0E00               	movlw	0
 10763  003428  6E4B               	movwf	(___fldiv@grs+1)^0,c
 10764  00342A  0E00               	movlw	0
 10765  00342C  6E4C               	movwf	(___fldiv@grs+2)^0,c
 10766  00342E  0E00               	movlw	0
 10767  003430  6E4D               	movwf	(___fldiv@grs+3)^0,c
 10768  003432  0E00               	movlw	0
 10769  003434  6E4F               	movwf	___fldiv@aexp^0,c
 10770  003436  D028               	goto	l2014
 10771  003438                     l6684:
 10772  003438  504F               	movf	___fldiv@aexp^0,w,c
 10773  00343A  B4D8               	btfsc	status,2,c
 10774  00343C  D011               	goto	l6692
 10775  00343E  90D8               	bcf	status,0,c
 10776  003440  3643               	rlcf	___fldiv@rem^0,f,c
 10777  003442  3644               	rlcf	(___fldiv@rem+1)^0,f,c
 10778  003444  3645               	rlcf	(___fldiv@rem+2)^0,f,c
 10779  003446  3646               	rlcf	(___fldiv@rem+3)^0,f,c
 10780  003448  90D8               	bcf	status,0,c
 10781  00344A  3637               	rlcf	___fldiv@b^0,f,c
 10782  00344C  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10783  00344E  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10784  003450  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10785  003452  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10786  003454  8037               	bsf	___fldiv@b^0,0,c
 10787  003456  90D8               	bcf	status,0,c
 10788  003458  364A               	rlcf	___fldiv@grs^0,f,c
 10789  00345A  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10790  00345C  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10791  00345E  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10792  003460                     l6692:
 10793  003460  503B               	movf	___fldiv@a^0,w,c
 10794  003462  5C43               	subwf	___fldiv@rem^0,w,c
 10795  003464  503C               	movf	(___fldiv@a+1)^0,w,c
 10796  003466  5844               	subwfb	(___fldiv@rem+1)^0,w,c
 10797  003468  503D               	movf	(___fldiv@a+2)^0,w,c
 10798  00346A  5845               	subwfb	(___fldiv@rem+2)^0,w,c
 10799  00346C  503E               	movf	(___fldiv@a+3)^0,w,c
 10800  00346E  5846               	subwfb	(___fldiv@rem+3)^0,w,c
 10801  003470  A0D8               	btfss	status,0,c
 10802  003472  D009               	goto	l6698
 10803  003474  8C4D               	bsf	(___fldiv@grs+3)^0,6,c
 10804  003476  503B               	movf	___fldiv@a^0,w,c
 10805  003478  5E43               	subwf	___fldiv@rem^0,f,c
 10806  00347A  503C               	movf	(___fldiv@a+1)^0,w,c
 10807  00347C  5A44               	subwfb	(___fldiv@rem+1)^0,f,c
 10808  00347E  503D               	movf	(___fldiv@a+2)^0,w,c
 10809  003480  5A45               	subwfb	(___fldiv@rem+2)^0,f,c
 10810  003482  503E               	movf	(___fldiv@a+3)^0,w,c
 10811  003484  5A46               	subwfb	(___fldiv@rem+3)^0,f,c
 10812  003486                     l6698:
 10813  003486  2A4F               	incf	___fldiv@aexp^0,f,c
 10814  003488                     l2014:
 10815  003488  0E19               	movlw	25
 10816  00348A  644F               	cpfsgt	___fldiv@aexp^0,c
 10817  00348C  D7D5               	goto	l6684
 10818  00348E  5043               	movf	___fldiv@rem^0,w,c
 10819  003490  1044               	iorwf	(___fldiv@rem+1)^0,w,c
 10820  003492  1045               	iorwf	(___fldiv@rem+2)^0,w,c
 10821  003494  1046               	iorwf	(___fldiv@rem+3)^0,w,c
 10822  003496  B4D8               	btfsc	status,2,c
 10823  003498  D011               	goto	l6710
 10824  00349A  804A               	bsf	___fldiv@grs^0,0,c
 10825  00349C  D00F               	goto	l6710
 10826  00349E                     l6704:
 10827  00349E  90D8               	bcf	status,0,c
 10828  0034A0  3637               	rlcf	___fldiv@b^0,f,c
 10829  0034A2  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10830  0034A4  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10831  0034A6  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10832  0034A8  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10833  0034AA  8037               	bsf	___fldiv@b^0,0,c
 10834  0034AC  90D8               	bcf	status,0,c
 10835  0034AE  364A               	rlcf	___fldiv@grs^0,f,c
 10836  0034B0  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10837  0034B2  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10838  0034B4  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10839  0034B6  0648               	decf	___fldiv@new_exp^0,f,c
 10840  0034B8  A0D8               	btfss	status,0,c
 10841  0034BA  0649               	decf	(___fldiv@new_exp+1)^0,f,c
 10842  0034BC                     l6710:
 10843  0034BC  AE39               	btfss	(___fldiv@b+2)^0,7,c
 10844  0034BE  D7EF               	goto	l6704
 10845  0034C0  0E00               	movlw	0
 10846  0034C2  6E4F               	movwf	___fldiv@aexp^0,c
 10847  0034C4  AE4D               	btfss	(___fldiv@grs+3)^0,7,c
 10848  0034C6  D017               	goto	l2025
 10849  0034C8  0EFF               	movlw	255
 10850  0034CA  144A               	andwf	___fldiv@grs^0,w,c
 10851  0034CC  6E3F               	movwf	??___fldiv^0,c
 10852  0034CE  0EFF               	movlw	255
 10853  0034D0  144B               	andwf	(___fldiv@grs+1)^0,w,c
 10854  0034D2  6E40               	movwf	(??___fldiv+1)^0,c
 10855  0034D4  0EFF               	movlw	255
 10856  0034D6  144C               	andwf	(___fldiv@grs+2)^0,w,c
 10857  0034D8  6E41               	movwf	(??___fldiv+2)^0,c
 10858  0034DA  0E7F               	movlw	127
 10859  0034DC  144D               	andwf	(___fldiv@grs+3)^0,w,c
 10860  0034DE  6E42               	movwf	(??___fldiv+3)^0,c
 10861  0034E0  503F               	movf	??___fldiv^0,w,c
 10862  0034E2  1040               	iorwf	(??___fldiv+1)^0,w,c
 10863  0034E4  1041               	iorwf	(??___fldiv+2)^0,w,c
 10864  0034E6  1042               	iorwf	(??___fldiv+3)^0,w,c
 10865  0034E8  B4D8               	btfsc	status,2,c
 10866  0034EA  D003               	goto	l2026
 10867  0034EC                     u7140:
 10868  0034EC  0E01               	movlw	1
 10869  0034EE  6E4F               	movwf	___fldiv@aexp^0,c
 10870  0034F0  D002               	goto	l2025
 10871  0034F2                     l2026:
 10872  0034F2  B037               	btfsc	___fldiv@b^0,0,c
 10873  0034F4  D7FB               	goto	u7140
 10874  0034F6                     l2025:
 10875  0034F6  504F               	movf	___fldiv@aexp^0,w,c
 10876  0034F8  B4D8               	btfsc	status,2,c
 10877  0034FA  D027               	goto	l6730
 10878  0034FC  0E01               	movlw	1
 10879  0034FE  2637               	addwf	___fldiv@b^0,f,c
 10880  003500  0E00               	movlw	0
 10881  003502  2238               	addwfc	(___fldiv@b+1)^0,f,c
 10882  003504  2239               	addwfc	(___fldiv@b+2)^0,f,c
 10883  003506  223A               	addwfc	(___fldiv@b+3)^0,f,c
 10884  003508  A03A               	btfss	(___fldiv@b+3)^0,0,c
 10885  00350A  D01F               	goto	l6730
 10886  00350C  0060  F0DC  F03F   	movff	___fldiv@b,??___fldiv
 10887  003512  0060  F0E0  F040   	movff	___fldiv@b+1,??___fldiv+1
 10888  003518  0060  F0E4  F041   	movff	___fldiv@b+2,??___fldiv+2
 10889  00351E  0060  F0E8  F042   	movff	___fldiv@b+3,??___fldiv+3
 10890  003524  3442               	rlcf	(??___fldiv+3)^0,w,c
 10891  003526  3242               	rrcf	(??___fldiv+3)^0,f,c
 10892  003528  3241               	rrcf	(??___fldiv+2)^0,f,c
 10893  00352A  3240               	rrcf	(??___fldiv+1)^0,f,c
 10894  00352C  323F               	rrcf	??___fldiv^0,f,c
 10895  00352E  0060  F0FC  F037   	movff	??___fldiv,___fldiv@b
 10896  003534  0060  F100  F038   	movff	??___fldiv+1,___fldiv@b+1
 10897  00353A  0060  F104  F039   	movff	??___fldiv+2,___fldiv@b+2
 10898  003540  0060  F108  F03A   	movff	??___fldiv+3,___fldiv@b+3
 10899  003546  4A48               	infsnz	___fldiv@new_exp^0,f,c
 10900  003548  2A49               	incf	(___fldiv@new_exp+1)^0,f,c
 10901  00354A                     l6730:
 10902  00354A  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10903  00354C  D010               	goto	l6734
 10904  00354E  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 10905  003550  E103               	bnz	u7180
 10906  003552  2848               	incf	___fldiv@new_exp^0,w,c
 10907  003554  A0D8               	btfss	status,0,c
 10908  003556  D00B               	goto	l6734
 10909  003558                     u7180:
 10910  003558  0E00               	movlw	0
 10911  00355A  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10912  00355C  6848               	setf	___fldiv@new_exp^0,c
 10913  00355E  0E00               	movlw	0
 10914  003560  6E37               	movwf	___fldiv@b^0,c
 10915  003562  0E00               	movlw	0
 10916  003564  6E38               	movwf	(___fldiv@b+1)^0,c
 10917  003566  0E00               	movlw	0
 10918  003568  6E39               	movwf	(___fldiv@b+2)^0,c
 10919  00356A  0E00               	movlw	0
 10920  00356C  6E3A               	movwf	(___fldiv@b+3)^0,c
 10921  00356E                     l6734:
 10922  00356E  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10923  003570  D005               	goto	u7190
 10924  003572  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 10925  003574  E111               	bnz	l6738
 10926  003576  0448               	decf	___fldiv@new_exp^0,w,c
 10927  003578  B0D8               	btfsc	status,0,c
 10928  00357A  D00E               	goto	l6738
 10929  00357C                     u7190:
 10930  00357C  0E00               	movlw	0
 10931  00357E  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10932  003580  0E00               	movlw	0
 10933  003582  6E48               	movwf	___fldiv@new_exp^0,c
 10934  003584  0E00               	movlw	0
 10935  003586  6E37               	movwf	___fldiv@b^0,c
 10936  003588  0E00               	movlw	0
 10937  00358A  6E38               	movwf	(___fldiv@b+1)^0,c
 10938  00358C  0E00               	movlw	0
 10939  00358E  6E39               	movwf	(___fldiv@b+2)^0,c
 10940  003590  0E00               	movlw	0
 10941  003592  6E3A               	movwf	(___fldiv@b+3)^0,c
 10942  003594  0E00               	movlw	0
 10943  003596  6E47               	movwf	___fldiv@sign^0,c
 10944  003598                     l6738:
 10945  003598  0060  F120  F04E   	movff	___fldiv@new_exp,___fldiv@bexp
 10946  00359E  A04E               	btfss	___fldiv@bexp^0,0,c
 10947  0035A0  D002               	goto	l6744
 10948  0035A2  8E39               	bsf	(___fldiv@b+2)^0,7,c
 10949  0035A4  D001               	goto	l6746
 10950  0035A6                     l6744:
 10951  0035A6  9E39               	bcf	(___fldiv@b+2)^0,7,c
 10952  0035A8                     l6746:
 10953  0035A8  90D8               	bcf	status,0,c
 10954  0035AA  304E               	rrcf	___fldiv@bexp^0,w,c
 10955  0035AC  6E3A               	movwf	(___fldiv@b+3)^0,c
 10956  0035AE  D6FC               	goto	l6660
 10957  0035B0                     __end_of___fldiv:
 10958                           	opt callstack 0
 10959                           
 10960 ;; *************** function ___xxtofl *****************
 10961 ;; Defined at:
 10962 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;  sign            1    wreg     unsigned char 
 10965 ;;  val             4    5[COMRAM] long 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  sign            1   13[COMRAM] unsigned char 
 10968 ;;  arg             4   15[COMRAM] unsigned long 
 10969 ;;  exp             1   14[COMRAM] unsigned char 
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  4    5[COMRAM] unsigned char 
 10972 ;; Registers used:
 10973 ;;		wreg, status,2, status,0
 10974 ;; Tracked objects:
 10975 ;;		On entry : 3E/1
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10980 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10982 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10983 ;;Total ram usage:       14 bytes
 10984 ;; Hardware stack levels used:    1
 10985 ;; Hardware stack levels required when called:    4
 10986 ;; This function calls:
 10987 ;;		Nothing
 10988 ;; This function is called by:
 10989 ;;		_main
 10990 ;;		_calc_pot
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text66
 10995  003B62                     __ptext66:
 10996                           	opt callstack 0
 10997  003B62                     ___xxtofl:
 10998                           	opt callstack 26
 10999                           
 11000                           ;incstack = 0
 11001                           ;___xxtofl@sign stored from wreg
 11002  003B62  6E0E               	movwf	___xxtofl@sign^0,c
 11003  003B64  500E               	movf	___xxtofl@sign^0,w,c
 11004  003B66  A4D8               	btfss	status,2,c
 11005  003B68  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 11006  003B6A  D022               	goto	l2085
 11007  003B6C  0060  F018  F00A   	movff	___xxtofl@val,??___xxtofl
 11008  003B72  0060  F01C  F00B   	movff	___xxtofl@val+1,??___xxtofl+1
 11009  003B78  0060  F020  F00C   	movff	___xxtofl@val+2,??___xxtofl+2
 11010  003B7E  0060  F024  F00D   	movff	___xxtofl@val+3,??___xxtofl+3
 11011  003B84  1E0A               	comf	??___xxtofl^0,f,c
 11012  003B86  1E0B               	comf	(??___xxtofl+1)^0,f,c
 11013  003B88  1E0C               	comf	(??___xxtofl+2)^0,f,c
 11014  003B8A  1E0D               	comf	(??___xxtofl+3)^0,f,c
 11015  003B8C  2A0A               	incf	??___xxtofl^0,f,c
 11016  003B8E  0E00               	movlw	0
 11017  003B90  220B               	addwfc	(??___xxtofl+1)^0,f,c
 11018  003B92  220C               	addwfc	(??___xxtofl+2)^0,f,c
 11019  003B94  220D               	addwfc	(??___xxtofl+3)^0,f,c
 11020  003B96  0060  F028  F010   	movff	??___xxtofl,___xxtofl@arg
 11021  003B9C  0060  F02C  F011   	movff	??___xxtofl+1,___xxtofl@arg+1
 11022  003BA2  0060  F030  F012   	movff	??___xxtofl+2,___xxtofl@arg+2
 11023  003BA8  0060  F034  F013   	movff	??___xxtofl+3,___xxtofl@arg+3
 11024  003BAE  D00C               	goto	l7040
 11025  003BB0                     l2085:
 11026  003BB0  0060  F018  F010   	movff	___xxtofl@val,___xxtofl@arg
 11027  003BB6  0060  F01C  F011   	movff	___xxtofl@val+1,___xxtofl@arg+1
 11028  003BBC  0060  F020  F012   	movff	___xxtofl@val+2,___xxtofl@arg+2
 11029  003BC2  0060  F024  F013   	movff	___xxtofl@val+3,___xxtofl@arg+3
 11030  003BC8                     l7040:
 11031  003BC8  5006               	movf	___xxtofl@val^0,w,c
 11032  003BCA  1007               	iorwf	(___xxtofl@val+1)^0,w,c
 11033  003BCC  1008               	iorwf	(___xxtofl@val+2)^0,w,c
 11034  003BCE  1009               	iorwf	(___xxtofl@val+3)^0,w,c
 11035  003BD0  A4D8               	btfss	status,2,c
 11036  003BD2  D009               	goto	l7046
 11037  003BD4  0E00               	movlw	0
 11038  003BD6  6E06               	movwf	?___xxtofl^0,c
 11039  003BD8  0E00               	movlw	0
 11040  003BDA  6E07               	movwf	(?___xxtofl+1)^0,c
 11041  003BDC  0E00               	movlw	0
 11042  003BDE  6E08               	movwf	(?___xxtofl+2)^0,c
 11043  003BE0  0E00               	movlw	0
 11044  003BE2  6E09               	movwf	(?___xxtofl+3)^0,c
 11045  003BE4  0012               	return	
 11046  003BE6                     l7046:
 11047  003BE6  0E96               	movlw	150
 11048  003BE8  6E0F               	movwf	___xxtofl@exp^0,c
 11049  003BEA  D006               	goto	l7050
 11050  003BEC                     l7048:
 11051  003BEC  2A0F               	incf	___xxtofl@exp^0,f,c
 11052  003BEE  90D8               	bcf	status,0,c
 11053  003BF0  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11054  003BF2  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11055  003BF4  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11056  003BF6  3210               	rrcf	___xxtofl@arg^0,f,c
 11057  003BF8                     l7050:
 11058  003BF8  0E00               	movlw	0
 11059  003BFA  1410               	andwf	___xxtofl@arg^0,w,c
 11060  003BFC  6E0A               	movwf	??___xxtofl^0,c
 11061  003BFE  0E00               	movlw	0
 11062  003C00  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11063  003C02  6E0B               	movwf	(??___xxtofl+1)^0,c
 11064  003C04  0E00               	movlw	0
 11065  003C06  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11066  003C08  6E0C               	movwf	(??___xxtofl+2)^0,c
 11067  003C0A  0EFE               	movlw	254
 11068  003C0C  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11069  003C0E  6E0D               	movwf	(??___xxtofl+3)^0,c
 11070  003C10  500A               	movf	??___xxtofl^0,w,c
 11071  003C12  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11072  003C14  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11073  003C16  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11074  003C18  B4D8               	btfsc	status,2,c
 11075  003C1A  D00D               	goto	l2092
 11076  003C1C  D7E7               	goto	l7048
 11077  003C1E                     l7052:
 11078  003C1E  2A0F               	incf	___xxtofl@exp^0,f,c
 11079  003C20  0E01               	movlw	1
 11080  003C22  2610               	addwf	___xxtofl@arg^0,f,c
 11081  003C24  0E00               	movlw	0
 11082  003C26  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
 11083  003C28  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
 11084  003C2A  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
 11085  003C2C  90D8               	bcf	status,0,c
 11086  003C2E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11087  003C30  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11088  003C32  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11089  003C34  3210               	rrcf	___xxtofl@arg^0,f,c
 11090  003C36                     l2092:
 11091  003C36  0E00               	movlw	0
 11092  003C38  1410               	andwf	___xxtofl@arg^0,w,c
 11093  003C3A  6E0A               	movwf	??___xxtofl^0,c
 11094  003C3C  0E00               	movlw	0
 11095  003C3E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11096  003C40  6E0B               	movwf	(??___xxtofl+1)^0,c
 11097  003C42  0E00               	movlw	0
 11098  003C44  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11099  003C46  6E0C               	movwf	(??___xxtofl+2)^0,c
 11100  003C48  0EFF               	movlw	255
 11101  003C4A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11102  003C4C  6E0D               	movwf	(??___xxtofl+3)^0,c
 11103  003C4E  500A               	movf	??___xxtofl^0,w,c
 11104  003C50  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11105  003C52  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11106  003C54  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11107  003C56  B4D8               	btfsc	status,2,c
 11108  003C58  D007               	goto	l7060
 11109  003C5A  D7E1               	goto	l7052
 11110  003C5C                     l7058:
 11111  003C5C  060F               	decf	___xxtofl@exp^0,f,c
 11112  003C5E  90D8               	bcf	status,0,c
 11113  003C60  3610               	rlcf	___xxtofl@arg^0,f,c
 11114  003C62  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
 11115  003C64  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
 11116  003C66  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
 11117  003C68                     l7060:
 11118  003C68  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
 11119  003C6A  D003               	goto	u7590
 11120  003C6C  0E02               	movlw	2
 11121  003C6E  600F               	cpfslt	___xxtofl@exp^0,c
 11122  003C70  D7F5               	goto	l7058
 11123  003C72                     u7590:
 11124  003C72  A00F               	btfss	___xxtofl@exp^0,0,c
 11125  003C74  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
 11126  003C76  90D8               	bcf	status,0,c
 11127  003C78  320F               	rrcf	___xxtofl@exp^0,f,c
 11128  003C7A  0060  F03C  F00A   	movff	___xxtofl@exp,??___xxtofl
 11129  003C80  6A0B               	clrf	(??___xxtofl+1)^0,c
 11130  003C82  6A0C               	clrf	(??___xxtofl+2)^0,c
 11131  003C84  6A0D               	clrf	(??___xxtofl+3)^0,c
 11132  003C86  0060  F028  F00D   	movff	??___xxtofl,??___xxtofl+3
 11133  003C8C  6A0C               	clrf	(??___xxtofl+2)^0,c
 11134  003C8E  6A0B               	clrf	(??___xxtofl+1)^0,c
 11135  003C90  6A0A               	clrf	??___xxtofl^0,c
 11136  003C92  500A               	movf	??___xxtofl^0,w,c
 11137  003C94  1210               	iorwf	___xxtofl@arg^0,f,c
 11138  003C96  500B               	movf	(??___xxtofl+1)^0,w,c
 11139  003C98  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
 11140  003C9A  500C               	movf	(??___xxtofl+2)^0,w,c
 11141  003C9C  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
 11142  003C9E  500D               	movf	(??___xxtofl+3)^0,w,c
 11143  003CA0  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
 11144  003CA2  500E               	movf	___xxtofl@sign^0,w,c
 11145  003CA4  A4D8               	btfss	status,2,c
 11146  003CA6  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 11147  003CA8  D001               	goto	l7076
 11148  003CAA  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
 11149  003CAC                     l7076:
 11150  003CAC  0060  F040  F006   	movff	___xxtofl@arg,?___xxtofl
 11151  003CB2  0060  F044  F007   	movff	___xxtofl@arg+1,?___xxtofl+1
 11152  003CB8  0060  F048  F008   	movff	___xxtofl@arg+2,?___xxtofl+2
 11153  003CBE  0060  F04C  F009   	movff	___xxtofl@arg+3,?___xxtofl+3
 11154  003CC4  0012               	return		;funcret
 11155  003CC6                     __end_of___xxtofl:
 11156                           	opt callstack 0
 11157                           
 11158 ;; *************** function ___fltol *****************
 11159 ;; Defined at:
 11160 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;  f1              4   20[BANK0 ] unsigned char 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  exp1            1   25[BANK0 ] unsigned char 
 11165 ;;  sign1           1   24[BANK0 ] unsigned char 
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  4   20[BANK0 ] long 
 11168 ;; Registers used:
 11169 ;;		wreg, status,2, status,0
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 3F/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11175 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11176 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11178 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11179 ;;Total ram usage:       10 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:    4
 11182 ;; This function calls:
 11183 ;;		Nothing
 11184 ;; This function is called by:
 11185 ;;		_calc_pot
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189                           	psect	text67
 11190  00427C                     __ptext67:
 11191                           	opt callstack 0
 11192  00427C                     ___fltol:
 11193                           	opt callstack 24
 11194                           
 11195                           ;incstack = 0
 11196  00427C  0100               	movlb	0	; () banked
 11197  00427E  3576               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11198  004280  3577               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11199  004282  6F79               	movwf	___fltol@exp1& (0+255),b
 11200  004284  5179               	movf	___fltol@exp1& (0+255),w,b
 11201  004286  A4D8               	btfss	status,2,c
 11202  004288  D009               	goto	l6996
 11203  00428A                     u7460:
 11204                           
 11205                           ; BSR set to: 0
 11206  00428A  0E00               	movlw	0
 11207  00428C  6F74               	movwf	?___fltol& (0+255),b
 11208  00428E  0E00               	movlw	0
 11209  004290  6F75               	movwf	(?___fltol+1)& (0+255),b
 11210  004292  0E00               	movlw	0
 11211  004294  6F76               	movwf	(?___fltol+2)& (0+255),b
 11212  004296  0E00               	movlw	0
 11213  004298  6F77               	movwf	(?___fltol+3)& (0+255),b
 11214  00429A  0012               	return	
 11215  00429C                     l6996:
 11216                           
 11217                           ; BSR set to: 0
 11218  00429C  0060  F1D0  F052   	movff	___fltol@f1,??___fltol
 11219  0042A2  0060  F1D4  F053   	movff	___fltol@f1+1,??___fltol+1
 11220  0042A8  0060  F1D8  F054   	movff	___fltol@f1+2,??___fltol+2
 11221  0042AE  0060  F1DC  F055   	movff	___fltol@f1+3,??___fltol+3
 11222  0042B4  0E20               	movlw	32
 11223  0042B6  D005               	goto	u7470
 11224  0042B8                     u7475:
 11225  0042B8  90D8               	bcf	status,0,c
 11226  0042BA  3255               	rrcf	(??___fltol+3)^0,f,c
 11227  0042BC  3254               	rrcf	(??___fltol+2)^0,f,c
 11228  0042BE  3253               	rrcf	(??___fltol+1)^0,f,c
 11229  0042C0  3252               	rrcf	??___fltol^0,f,c
 11230  0042C2                     u7470:
 11231  0042C2  2EE8               	decfsz	wreg,f,c
 11232  0042C4  D7F9               	goto	u7475
 11233  0042C6  5052               	movf	??___fltol^0,w,c
 11234  0042C8  6F78               	movwf	___fltol@sign1& (0+255),b
 11235                           
 11236                           ; BSR set to: 0
 11237  0042CA  8F76               	bsf	(___fltol@f1+2)& (0+255),7,b
 11238                           
 11239                           ; BSR set to: 0
 11240  0042CC  0EFF               	movlw	255
 11241  0042CE  1774               	andwf	___fltol@f1& (0+255),f,b
 11242  0042D0  0EFF               	movlw	255
 11243  0042D2  1775               	andwf	(___fltol@f1+1)& (0+255),f,b
 11244  0042D4  0EFF               	movlw	255
 11245  0042D6  1776               	andwf	(___fltol@f1+2)& (0+255),f,b
 11246  0042D8  0E00               	movlw	0
 11247  0042DA  1777               	andwf	(___fltol@f1+3)& (0+255),f,b
 11248                           
 11249                           ; BSR set to: 0
 11250  0042DC  0E96               	movlw	150
 11251  0042DE  5F79               	subwf	___fltol@exp1& (0+255),f,b
 11252                           
 11253                           ; BSR set to: 0
 11254  0042E0  AF79               	btfss	___fltol@exp1& (0+255),7,b
 11255  0042E2  D00D               	goto	l7016
 11256                           
 11257                           ; BSR set to: 0
 11258  0042E4  5179               	movf	___fltol@exp1& (0+255),w,b
 11259  0042E6  0A80               	xorlw	128
 11260  0042E8  0F97               	addlw	151
 11261  0042EA  A0D8               	btfss	status,0,c
 11262  0042EC  D7CE               	goto	u7460
 11263  0042EE                     l7012:
 11264                           
 11265                           ; BSR set to: 0
 11266  0042EE  90D8               	bcf	status,0,c
 11267  0042F0  3377               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11268  0042F2  3376               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11269  0042F4  3375               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11270  0042F6  3374               	rrcf	___fltol@f1& (0+255),f,b
 11271                           
 11272                           ; BSR set to: 0
 11273  0042F8  3F79               	incfsz	___fltol@exp1& (0+255),f,b
 11274  0042FA  D7F9               	goto	l7012
 11275  0042FC  D00D               	goto	u7510
 11276  0042FE                     l7016:
 11277                           
 11278                           ; BSR set to: 0
 11279  0042FE  0E1F               	movlw	31
 11280  004300  6579               	cpfsgt	___fltol@exp1& (0+255),b
 11281  004302  D007               	goto	l7024
 11282  004304  D7C2               	goto	u7460
 11283  004306                     l7022:
 11284                           
 11285                           ; BSR set to: 0
 11286  004306  90D8               	bcf	status,0,c
 11287  004308  3774               	rlcf	___fltol@f1& (0+255),f,b
 11288  00430A  3775               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11289  00430C  3776               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11290  00430E  3777               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11291  004310  0779               	decf	___fltol@exp1& (0+255),f,b
 11292  004312                     l7024:
 11293                           
 11294                           ; BSR set to: 0
 11295  004312  5179               	movf	___fltol@exp1& (0+255),w,b
 11296  004314  A4D8               	btfss	status,2,c
 11297  004316  D7F7               	goto	l7022
 11298  004318                     u7510:
 11299                           
 11300                           ; BSR set to: 0
 11301  004318  5178               	movf	___fltol@sign1& (0+255),w,b
 11302  00431A  B4D8               	btfsc	status,2,c
 11303  00431C  D008               	goto	l7030
 11304                           
 11305                           ; BSR set to: 0
 11306  00431E  1F77               	comf	(___fltol@f1+3)& (0+255),f,b
 11307  004320  1F76               	comf	(___fltol@f1+2)& (0+255),f,b
 11308  004322  1F75               	comf	(___fltol@f1+1)& (0+255),f,b
 11309  004324  6D74               	negf	___fltol@f1& (0+255),b
 11310  004326  0E00               	movlw	0
 11311  004328  2375               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11312  00432A  2376               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11313  00432C  2377               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11314  00432E                     l7030:
 11315                           
 11316                           ; BSR set to: 0
 11317  00432E  0060  F1D0  F074   	movff	___fltol@f1,?___fltol
 11318  004334  0060  F1D4  F075   	movff	___fltol@f1+1,?___fltol+1
 11319  00433A  0060  F1D8  F076   	movff	___fltol@f1+2,?___fltol+2
 11320  004340  0060  F1DC  F077   	movff	___fltol@f1+3,?___fltol+3
 11321                           
 11322                           ; BSR set to: 0
 11323  004346  0012               	return		;funcret
 11324  004348                     __end_of___fltol:
 11325                           	opt callstack 0
 11326                           
 11327 ;; *************** function _UART2_is_rx_ready *****************
 11328 ;; Defined at:
 11329 ;;		line 152 in file "mcc_generated_files/uart2.c"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;		None
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;		None
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  1    wreg      unsigned char 
 11336 ;; Registers used:
 11337 ;;		wreg, status,2
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/1
 11340 ;;		On exit  : 3F/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11347 ;;Total ram usage:        0 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:    4
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_Digital232_init
 11354 ;;		_Digital232_RW
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text68
 11359  0054E6                     __ptext68:
 11360                           	opt callstack 0
 11361  0054E6                     _UART2_is_rx_ready:
 11362                           	opt callstack 25
 11363                           
 11364                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;incstack = 0
 11368  0054E6  0100               	movlb	0	; () banked
 11369  0054E8  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11370                           
 11371                           ; BSR set to: 0
 11372  0054EA  0012               	return		;funcret
 11373  0054EC                     __end_of_UART2_is_rx_ready:
 11374                           	opt callstack 0
 11375                           
 11376 ;; *************** function _UART2_Read *****************
 11377 ;; Defined at:
 11378 ;;		line 171 in file "mcc_generated_files/uart2.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;		None
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;  readValue       1    5[COMRAM] unsigned char 
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  1    wreg      unsigned char 
 11385 ;; Registers used:
 11386 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11387 ;; Tracked objects:
 11388 ;;		On entry : 3F/0
 11389 ;;		On exit  : 3F/39
 11390 ;;		Unchanged: 0/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11396 ;;Total ram usage:        1 bytes
 11397 ;; Hardware stack levels used:    1
 11398 ;; Hardware stack levels required when called:    4
 11399 ;; This function calls:
 11400 ;;		Nothing
 11401 ;; This function is called by:
 11402 ;;		_Digital232_init
 11403 ;;		_Digital232_RW
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text69
 11408  004D36                     __ptext69:
 11409                           	opt callstack 0
 11410  004D36                     _UART2_Read:
 11411                           	opt callstack 25
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;incstack = 0
 11421  004D36  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11422  004D38  B4D8               	btfsc	status,2,c
 11423  004D3A  D7FD               	goto	_UART2_Read
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
 11427  004D3C  0E32               	movlw	low _uart2RxStatusBuffer
 11428  004D3E  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11429  004D40  6ED9               	movwf	fsr2l,c
 11430  004D42  6ADA               	clrf	fsr2h,c
 11431  004D44  0E01               	movlw	high _uart2RxStatusBuffer
 11432  004D46  22DA               	addwfc	fsr2h,f,c
 11433  004D48  50DF               	movf	indf2,w,c
 11434  004D4A  0101               	movlb	1	; () banked
 11435  004D4C  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
 11436                           
 11437                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
 11438  004D4E  0E3A               	movlw	low _uart2RxBuffer
 11439  004D50  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11440  004D52  6ED9               	movwf	fsr2l,c
 11441  004D54  6ADA               	clrf	fsr2h,c
 11442  004D56  0E01               	movlw	high _uart2RxBuffer
 11443  004D58  22DA               	addwfc	fsr2h,f,c
 11444  004D5A  50DF               	movf	indf2,w,c
 11445  004D5C  6E06               	movwf	UART2_Read@readValue^0,c
 11446                           
 11447                           ; BSR set to: 1
 11448  004D5E  2A58               	incf	_uart2RxTail^0,f,c	;volatile
 11449                           
 11450                           ; BSR set to: 1
 11451                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 11452  004D60  0E07               	movlw	7
 11453  004D62  6458               	cpfsgt	_uart2RxTail^0,c
 11454  004D64  D002               	goto	l7262
 11455                           
 11456                           ; BSR set to: 1
 11457                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
 11458  004D66  0E00               	movlw	0
 11459  004D68  6E58               	movwf	_uart2RxTail^0,c	;volatile
 11460  004D6A                     l7262:
 11461                           
 11462                           ; BSR set to: 1
 11463                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
 11464  004D6A  0139               	movlb	57	; () banked
 11465  004D6C  9596               	bcf	150,2,b	;volatile
 11466                           
 11467                           ; BSR set to: 57
 11468                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
 11469  004D6E  0100               	movlb	0	; () banked
 11470  004D70  07A3               	decf	_uart2RxCount& (0+255),f,b	;volatile
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
 11474  004D72  0139               	movlb	57	; () banked
 11475  004D74  8596               	bsf	150,2,b	;volatile
 11476                           
 11477                           ; BSR set to: 57
 11478                           ;mcc_generated_files/uart2.c: 190:     return readValue;
 11479  004D76  5006               	movf	UART2_Read@readValue^0,w,c
 11480                           
 11481                           ; BSR set to: 57
 11482  004D78  0012               	return		;funcret
 11483  004D7A                     __end_of_UART2_Read:
 11484                           	opt callstack 0
 11485                           
 11486 ;; *************** function _TimerDone *****************
 11487 ;; Defined at:
 11488 ;;		line 19 in file "timers.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;  timer           1    wreg     const unsigned char 
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;  timer           1    7[COMRAM] const unsigned char 
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  1    wreg      _Bool 
 11495 ;; Registers used:
 11496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/1
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11506 ;;Total ram usage:        3 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; Hardware stack levels required when called:    4
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_work_sw
 11513 ;;		_main
 11514 ;;		_Digital232_RW
 11515 ;;		_led_lightshow
 11516 ;;		_WaitMs
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text70
 11521  005168                     __ptext70:
 11522                           	opt callstack 0
 11523  005168                     _TimerDone:
 11524                           	opt callstack 25
 11525                           
 11526                           ; BSR set to: 57
 11527                           ;incstack = 0
 11528                           ;TimerDone@timer stored from wreg
 11529  005168  6E08               	movwf	TimerDone@timer^0,c
 11530  00516A  0004               	clrwdt		;# 
 11531                           
 11532                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 11533  00516C  5008               	movf	TimerDone@timer^0,w,c
 11534  00516E  0D02               	mullw	2
 11535  005170  0E20               	movlw	low _tickCount
 11536  005172  24F3               	addwf	243,w,c
 11537  005174  6ED9               	movwf	fsr2l,c
 11538  005176  0E01               	movlw	high _tickCount
 11539  005178  20F4               	addwfc	prodh,w,c
 11540  00517A  6EDA               	movwf	fsr2h,c
 11541  00517C  50DE               	movf	postinc2,w,c
 11542  00517E  10DE               	iorwf	postinc2,w,c
 11543  005180  A4D8               	btfss	status,2,c
 11544  005182  D002               	goto	l6922
 11545                           
 11546                           ;timers.c: 23:   return 1;
 11547  005184  0E01               	movlw	1
 11548  005186  0012               	return	
 11549  005188                     l6922:
 11550                           
 11551                           ;timers.c: 25:  return 0;
 11552  005188  0E00               	movlw	0
 11553  00518A  0012               	return		;funcret
 11554  00518C                     __end_of_TimerDone:
 11555                           	opt callstack 0
 11556                           
 11557 ;; *************** function _StartTimer *****************
 11558 ;; Defined at:
 11559 ;;		line 11 in file "timers.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;  timer           1    wreg     const unsigned char 
 11562 ;;  count           2    5[COMRAM] const unsigned short 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;  timer           1    9[COMRAM] const unsigned char 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      void 
 11567 ;; Registers used:
 11568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/1
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11577 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11578 ;;Total ram usage:        5 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    4
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_work_sw
 11585 ;;		_main
 11586 ;;		_Digital232_init
 11587 ;;		_Digital232_RW
 11588 ;;		_led_lightshow
 11589 ;;		_WaitMs
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text71
 11594  005002                     __ptext71:
 11595                           	opt callstack 0
 11596  005002                     _StartTimer:
 11597                           	opt callstack 25
 11598                           
 11599                           ;incstack = 0
 11600                           ;StartTimer@timer stored from wreg
 11601  005002  6E0A               	movwf	StartTimer@timer^0,c
 11602                           
 11603                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
 11604  005004  0060  F018  F008   	movff	StartTimer@count,??_StartTimer
 11605  00500A  0060  F01C  F009   	movff	StartTimer@count+1,??_StartTimer+1
 11606  005010  90D8               	bcf	status,0,c
 11607  005012  3608               	rlcf	??_StartTimer^0,f,c
 11608  005014  3609               	rlcf	(??_StartTimer+1)^0,f,c
 11609  005016  500A               	movf	StartTimer@timer^0,w,c
 11610  005018  0D02               	mullw	2
 11611  00501A  0E20               	movlw	low _tickCount
 11612  00501C  24F3               	addwf	243,w,c
 11613  00501E  6ED9               	movwf	fsr2l,c
 11614  005020  0E01               	movlw	high _tickCount
 11615  005022  20F4               	addwfc	prodh,w,c
 11616  005024  6EDA               	movwf	fsr2h,c
 11617  005026  0060  F023  FFDE   	movff	??_StartTimer,postinc2
 11618  00502C  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
 11619  005032  0012               	return		;funcret
 11620  005034                     __end_of_StartTimer:
 11621                           	opt callstack 0
 11622                           
 11623 ;; *************** function _PWM8_LoadDutyValue *****************
 11624 ;; Defined at:
 11625 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;  dutyValue       2    5[COMRAM] unsigned short 
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;		None
 11630 ;; Return value:  Size  Location     Type
 11631 ;;                  1    wreg      void 
 11632 ;; Registers used:
 11633 ;;		wreg, status,2, status,0
 11634 ;; Tracked objects:
 11635 ;;		On entry : 0/0
 11636 ;;		On exit  : 0/0
 11637 ;;		Unchanged: 0/0
 11638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11643 ;;Total ram usage:        4 bytes
 11644 ;; Hardware stack levels used:    1
 11645 ;; Hardware stack levels required when called:    4
 11646 ;; This function calls:
 11647 ;;		Nothing
 11648 ;; This function is called by:
 11649 ;;		_Digital232_RW
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653                           	psect	text72
 11654  004F28                     __ptext72:
 11655                           	opt callstack 0
 11656  004F28                     _PWM8_LoadDutyValue:
 11657                           	opt callstack 25
 11658                           
 11659                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11660                           
 11661                           ;incstack = 0
 11662  004F28  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11663  004F2E  0060  F01C  F009   	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11664  004F34  90D8               	bcf	status,0,c
 11665  004F36  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11666  004F38  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11667  004F3A  90D8               	bcf	status,0,c
 11668  004F3C  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11669  004F3E  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11670  004F40  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11671  004F42  6E61               	movwf	97,c	;volatile
 11672                           
 11673                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11674  004F44  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11675  004F4A  0E03               	movlw	3
 11676  004F4C  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11677  004F4E  0E06               	movlw	6
 11678  004F50  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11679  004F52                     u7675:
 11680  004F52  90D8               	bcf	status,0,c
 11681  004F54  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11682  004F56  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11683  004F58  D7FC               	goto	u7675
 11684  004F5A  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11685  004F5C  6E60               	movwf	96,c	;volatile
 11686  004F5E  0012               	return		;funcret
 11687  004F60                     __end_of_PWM8_LoadDutyValue:
 11688                           	opt callstack 0
 11689                           
 11690 ;; *************** function _ADCC_StartConversion *****************
 11691 ;; Defined at:
 11692 ;;		line 113 in file "mcc_generated_files/adcc.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;  channel         1    wreg     enum E15799
 11695 ;; Auto vars:     Size  Location     Type
 11696 ;;  channel         1    5[COMRAM] enum E15799
 11697 ;; Return value:  Size  Location     Type
 11698 ;;                  1    wreg      void 
 11699 ;; Registers used:
 11700 ;;		wreg
 11701 ;; Tracked objects:
 11702 ;;		On entry : 0/1
 11703 ;;		On exit  : 3F/3E
 11704 ;;		Unchanged: 0/0
 11705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11710 ;;Total ram usage:        1 bytes
 11711 ;; Hardware stack levels used:    1
 11712 ;; Hardware stack levels required when called:    4
 11713 ;; This function calls:
 11714 ;;		Nothing
 11715 ;; This function is called by:
 11716 ;;		_Digital232_init
 11717 ;;		_Digital232_RW
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           	psect	text73
 11722  0054AC                     __ptext73:
 11723                           	opt callstack 0
 11724  0054AC                     _ADCC_StartConversion:
 11725                           	opt callstack 25
 11726                           
 11727                           ;incstack = 0
 11728                           ;ADCC_StartConversion@channel stored from wreg
 11729  0054AC  6E06               	movwf	ADCC_StartConversion@channel^0,c
 11730                           
 11731                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
 11732  0054AE  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 11733                           
 11734                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
 11735  0054B4  013E               	movlb	62	; () banked
 11736  0054B6  8FF8               	bsf	248,7,b	;volatile
 11737                           
 11738                           ; BSR set to: 62
 11739                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
 11740  0054B8  81F8               	bsf	248,0,b	;volatile
 11741                           
 11742                           ; BSR set to: 62
 11743  0054BA  0012               	return		;funcret
 11744  0054BC                     __end_of_ADCC_StartConversion:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _ADCC_IsConversionDone *****************
 11748 ;; Defined at:
 11749 ;;		line 125 in file "mcc_generated_files/adcc.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      _Bool 
 11756 ;; Registers used:
 11757 ;;		wreg
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/3E
 11760 ;;		On exit  : 3F/3E
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    4
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_Digital232_RW
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           	psect	text74
 11778  0054BC                     __ptext74:
 11779                           	opt callstack 0
 11780  0054BC                     _ADCC_IsConversionDone:
 11781                           	opt callstack 25
 11782                           
 11783                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
 11784                           
 11785                           ; BSR set to: 62
 11786                           ;incstack = 0
 11787  0054BC  013E               	movlb	62	; () banked
 11788  0054BE  B1F8               	btfsc	248,0,b	;volatile
 11789  0054C0  D002               	goto	u7680
 11790  0054C2  0E01               	movlw	1
 11791  0054C4  0012               	return	
 11792  0054C6                     u7680:
 11793  0054C6  0E00               	movlw	0
 11794                           
 11795                           ; BSR set to: 62
 11796  0054C8  0012               	return		;funcret
 11797  0054CA                     __end_of_ADCC_IsConversionDone:
 11798                           	opt callstack 0
 11799                           
 11800 ;; *************** function _ADCC_GetConversionResult *****************
 11801 ;; Defined at:
 11802 ;;		line 131 in file "mcc_generated_files/adcc.c"
 11803 ;; Parameters:    Size  Location     Type
 11804 ;;		None
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;		None
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  2    5[COMRAM] unsigned short 
 11809 ;; Registers used:
 11810 ;;		wreg, status,2, status,0
 11811 ;; Tracked objects:
 11812 ;;		On entry : 3F/3E
 11813 ;;		On exit  : 3F/3E
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;Total ram usage:        4 bytes
 11821 ;; Hardware stack levels used:    1
 11822 ;; Hardware stack levels required when called:    4
 11823 ;; This function calls:
 11824 ;;		Nothing
 11825 ;; This function is called by:
 11826 ;;		_Digital232_RW
 11827 ;; This function uses a non-reentrant model
 11828 ;;
 11829                           
 11830                           	psect	text75
 11831  005498                     __ptext75:
 11832                           	opt callstack 0
 11833  005498                     _ADCC_GetConversionResult:
 11834                           	opt callstack 25
 11835                           
 11836                           ; BSR set to: 62
 11837                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11838                           
 11839                           ; BSR set to: 62
 11840                           ;incstack = 0
 11841  005498  51F0               	movf	240,w,b	;volatile
 11842  00549A  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 11843  00549C  6A08               	clrf	??_ADCC_GetConversionResult^0,c
 11844  00549E  51EF               	movf	239,w,b	;volatile
 11845  0054A0  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
 11846  0054A2  6E06               	movwf	?_ADCC_GetConversionResult^0,c
 11847  0054A4  0E00               	movlw	0
 11848  0054A6  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 11849  0054A8  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 11850                           
 11851                           ; BSR set to: 62
 11852  0054AA  0012               	return		;funcret
 11853  0054AC                     __end_of_ADCC_GetConversionResult:
 11854                           	opt callstack 0
 11855                           
 11856 ;; *************** function _Default_ISR *****************
 11857 ;; Defined at:
 11858 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;		None
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      void 
 11865 ;; Registers used:
 11866 ;;		None
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11876 ;;Total ram usage:        0 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; This function calls:
 11879 ;;		Nothing
 11880 ;; This function is called by:
 11881 ;;		Interrupt level 2
 11882 ;; This function uses a non-reentrant model
 11883 ;;
 11884                           
 11885                           	psect	text76
 11886  0054FC                     __ptext76:
 11887                           	opt callstack 0
 11888  0054FC                     _Default_ISR:
 11889                           	opt callstack 20
 11890                           
 11891                           ; BSR set to: 62
 11892                           ;incstack = 0
 11893  0054FC  0011               	retfie		f
 11894  0054FE                     __end_of_Default_ISR:
 11895                           	opt callstack 0
 11896                           
 11897 ;; *************** function _UART1_tx_vect_isr *****************
 11898 ;; Defined at:
 11899 ;;		line 225 in file "mcc_generated_files/uart1.c"
 11900 ;; Parameters:    Size  Location     Type
 11901 ;;		None
 11902 ;; Auto vars:     Size  Location     Type
 11903 ;;		None
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      void 
 11906 ;; Registers used:
 11907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11917 ;;Total ram usage:        0 bytes
 11918 ;; Hardware stack levels used:    1
 11919 ;; Hardware stack levels required when called:    1
 11920 ;; This function calls:
 11921 ;;		Absolute function
 11922 ;;		_UART1_Transmit_ISR
 11923 ;; This function is called by:
 11924 ;;		Interrupt level 2
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           	psect	text77
 11929  00518C                     __ptext77:
 11930                           	opt callstack 0
 11931  00518C                     _UART1_tx_vect_isr:
 11932                           	opt callstack 19
 11933                           
 11934                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
 11935                           
 11936                           ;incstack = 0
 11937  00518C  0101               	movlb	1	; () banked
 11938  00518E  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11939  005190  117F               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11940  005192  1180               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 11941  005194  B4D8               	btfsc	status,2,c
 11942  005196  0011               	retfie		f
 11943                           
 11944                           ; BSR set to: 1
 11945                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
 11946  005198  D801               	call	i2u560_48
 11947  00519A  0011               	retfie		f
 11948  00519C                     i2u560_48:
 11949  00519C  0005               	push	
 11950  00519E  6EFA               	movwf	pclath,c
 11951  0051A0  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11952  0051A2  6EFD               	movwf	tosl,c
 11953  0051A4  517F               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11954  0051A6  6EFE               	movwf	tosh,c
 11955  0051A8  5180               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 11956  0051AA  6EFF               	movwf	tosu,c
 11957  0051AC  50FA               	movf	pclath,w,c
 11958  0051AE  0012               	return		;indir
 11959  0051B0                     __end_of_UART1_tx_vect_isr:
 11960                           	opt callstack 0
 11961                           
 11962 ;; *************** function _UART1_Transmit_ISR *****************
 11963 ;; Defined at:
 11964 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;		None
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;		None
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      void 
 11971 ;; Registers used:
 11972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11973 ;; Tracked objects:
 11974 ;;		On entry : 3F/1
 11975 ;;		On exit  : 6/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11982 ;;Total ram usage:        0 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; This function calls:
 11985 ;;		Nothing
 11986 ;; This function is called by:
 11987 ;;		_UART1_Initialize
 11988 ;;		_UART1_tx_vect_isr
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           	psect	text78
 11993  005034                     __ptext78:
 11994                           	opt callstack 0
 11995  005034                     _UART1_Transmit_ISR:
 11996                           	opt callstack 19
 11997                           
 11998                           ; BSR set to: 1
 11999                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 12000                           
 12001                           ;incstack = 0
 12002  005034  0E08               	movlw	8
 12003  005036  0100               	movlb	0	; () banked
 12004  005038  61A9               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 12005  00503A  D012               	goto	i2l344
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 12009  00503C  0E5A               	movlw	low _uart1TxBuffer
 12010  00503E  25AA               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 12011  005040  6ED9               	movwf	fsr2l,c
 12012  005042  6ADA               	clrf	fsr2h,c
 12013  005044  0E01               	movlw	high _uart1TxBuffer
 12014  005046  22DA               	addwfc	fsr2h,f,c
 12015  005048  50DF               	movf	indf2,w,c
 12016  00504A  013D               	movlb	61	; () banked
 12017  00504C  6FEA               	movwf	234,b	;volatile
 12018                           
 12019                           ; BSR set to: 61
 12020  00504E  0100               	movlb	0	; () banked
 12021  005050  2BAA               	incf	_uart1TxTail& (0+255),f,b	;volatile
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 12025  005052  0E07               	movlw	7
 12026  005054  65AA               	cpfsgt	_uart1TxTail& (0+255),b
 12027  005056  D002               	goto	i2l5468
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
 12031  005058  0E00               	movlw	0
 12032  00505A  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
 12033  00505C                     i2l5468:
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
 12037  00505C  2BA9               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 12038                           
 12039                           ;mcc_generated_files/uart1.c: 254:     }
 12040  00505E  0012               	return	
 12041  005060                     i2l344:
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
 12045  005060  0139               	movlb	57	; () banked
 12046  005062  9993               	bcf	147,4,b	;volatile
 12047  005064  0012               	return		;funcret
 12048  005066                     __end_of_UART1_Transmit_ISR:
 12049                           	opt callstack 0
 12050                           
 12051 ;; *************** function _UART1_rx_vect_isr *****************
 12052 ;; Defined at:
 12053 ;;		line 233 in file "mcc_generated_files/uart1.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;		None
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;		None
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  1    wreg      void 
 12060 ;; Registers used:
 12061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12062 ;; Tracked objects:
 12063 ;;		On entry : 0/0
 12064 ;;		On exit  : 0/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12071 ;;Total ram usage:        0 bytes
 12072 ;; Hardware stack levels used:    1
 12073 ;; Hardware stack levels required when called:    3
 12074 ;; This function calls:
 12075 ;;		Absolute function
 12076 ;;		_UART1_Receive_ISR
 12077 ;; This function is called by:
 12078 ;;		Interrupt level 2
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text79
 12083  0051B0                     __ptext79:
 12084                           	opt callstack 0
 12085  0051B0                     _UART1_rx_vect_isr:
 12086                           	opt callstack 17
 12087                           
 12088                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
 12089                           
 12090                           ;incstack = 0
 12091  0051B0  0101               	movlb	1	; () banked
 12092  0051B2  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12093  0051B4  1182               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12094  0051B6  1183               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12095  0051B8  B4D8               	btfsc	status,2,c
 12096  0051BA  0011               	retfie		f
 12097                           
 12098                           ; BSR set to: 1
 12099                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
 12100  0051BC  D801               	call	i2u562_48
 12101  0051BE  0011               	retfie		f
 12102  0051C0                     i2u562_48:
 12103  0051C0  0005               	push	
 12104  0051C2  6EFA               	movwf	pclath,c
 12105  0051C4  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12106  0051C6  6EFD               	movwf	tosl,c
 12107  0051C8  5182               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12108  0051CA  6EFE               	movwf	tosh,c
 12109  0051CC  5183               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12110  0051CE  6EFF               	movwf	tosu,c
 12111  0051D0  50FA               	movf	pclath,w,c
 12112  0051D2  0012               	return		;indir
 12113  0051D4                     __end_of_UART1_rx_vect_isr:
 12114                           	opt callstack 0
 12115                           
 12116 ;; *************** function _UART1_Receive_ISR *****************
 12117 ;; Defined at:
 12118 ;;		line 263 in file "mcc_generated_files/uart1.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;		None
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;		None
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      void 
 12125 ;; Registers used:
 12126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12127 ;; Tracked objects:
 12128 ;;		On entry : 3F/1
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12136 ;;Total ram usage:        0 bytes
 12137 ;; Hardware stack levels used:    1
 12138 ;; Hardware stack levels required when called:    2
 12139 ;; This function calls:
 12140 ;;		Absolute function
 12141 ;;		_UART1_DefaultErrorHandler
 12142 ;;		_UART1_DefaultFramingErrorHandler
 12143 ;;		_UART1_DefaultOverrunErrorHandler
 12144 ;;		_UART1_RxDataHandler
 12145 ;; This function is called by:
 12146 ;;		_UART1_Initialize
 12147 ;;		_UART1_rx_vect_isr
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text80
 12152  0046B8                     __ptext80:
 12153                           	opt callstack 0
 12154  0046B8                     _UART1_Receive_ISR:
 12155                           	opt callstack 17
 12156                           
 12157                           ; BSR set to: 1
 12158                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 12159                           
 12160                           ;incstack = 0
 12161  0046B8  0E4A               	movlw	low _uart1RxStatusBuffer
 12162  0046BA  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12163  0046BC  6ED9               	movwf	fsr2l,c
 12164  0046BE  6ADA               	clrf	fsr2h,c
 12165  0046C0  0E01               	movlw	high _uart1RxStatusBuffer
 12166  0046C2  22DA               	addwfc	fsr2h,f,c
 12167  0046C4  0E00               	movlw	0
 12168  0046C6  6EDF               	movwf	indf2,c
 12169                           
 12170                           ; BSR set to: 1
 12171                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
 12172  0046C8  013D               	movlb	61	; () banked
 12173  0046CA  A7F9               	btfss	249,3,b	;volatile
 12174  0046CC  D014               	goto	i2u488_49
 12175                           
 12176                           ; BSR set to: 61
 12177                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 12178  0046CE  0E4A               	movlw	low _uart1RxStatusBuffer
 12179  0046D0  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12180  0046D2  6ED9               	movwf	fsr2l,c
 12181  0046D4  6ADA               	clrf	fsr2h,c
 12182  0046D6  0E01               	movlw	high _uart1RxStatusBuffer
 12183  0046D8  22DA               	addwfc	fsr2h,f,c
 12184  0046DA  0101               	movlb	1	; () banked
 12185  0046DC  82DF               	bsf	indf2,1,c
 12186                           
 12187                           ; BSR set to: 1
 12188                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
 12189  0046DE  D801               	call	i2u488_48
 12190  0046E0  D00A               	goto	i2u488_49
 12191  0046E2                     i2u488_48:
 12192  0046E2  0005               	push	
 12193  0046E4  6EFA               	movwf	pclath,c
 12194  0046E6  517B               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 12195  0046E8  6EFD               	movwf	tosl,c
 12196  0046EA  517C               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 12197  0046EC  6EFE               	movwf	tosh,c
 12198  0046EE  517D               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 12199  0046F0  6EFF               	movwf	tosu,c
 12200  0046F2  50FA               	movf	pclath,w,c
 12201  0046F4  0012               	return		;indir
 12202  0046F6                     i2u488_49:
 12203                           
 12204                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
 12205  0046F6  013D               	movlb	61	; () banked
 12206  0046F8  A3F9               	btfss	249,1,b	;volatile
 12207  0046FA  D014               	goto	i2u490_49
 12208                           
 12209                           ; BSR set to: 61
 12210                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 12211  0046FC  0E4A               	movlw	low _uart1RxStatusBuffer
 12212  0046FE  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12213  004700  6ED9               	movwf	fsr2l,c
 12214  004702  6ADA               	clrf	fsr2h,c
 12215  004704  0E01               	movlw	high _uart1RxStatusBuffer
 12216  004706  22DA               	addwfc	fsr2h,f,c
 12217  004708  0101               	movlb	1	; () banked
 12218  00470A  84DF               	bsf	indf2,2,c
 12219                           
 12220                           ; BSR set to: 1
 12221                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
 12222  00470C  D801               	call	i2u490_48
 12223  00470E  D00A               	goto	i2u490_49
 12224  004710                     i2u490_48:
 12225  004710  0005               	push	
 12226  004712  6EFA               	movwf	pclath,c
 12227  004714  5178               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 12228  004716  6EFD               	movwf	tosl,c
 12229  004718  5179               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 12230  00471A  6EFE               	movwf	tosh,c
 12231  00471C  517A               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 12232  00471E  6EFF               	movwf	tosu,c
 12233  004720  50FA               	movf	pclath,w,c
 12234  004722  0012               	return		;indir
 12235  004724                     i2u490_49:
 12236                           
 12237                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
 12238  004724  0E4A               	movlw	low _uart1RxStatusBuffer
 12239  004726  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12240  004728  6ED9               	movwf	fsr2l,c
 12241  00472A  6ADA               	clrf	fsr2h,c
 12242  00472C  0E01               	movlw	high _uart1RxStatusBuffer
 12243  00472E  22DA               	addwfc	fsr2h,f,c
 12244  004730  50DF               	movf	indf2,w,c
 12245  004732  B4D8               	btfsc	status,2,c
 12246  004734  D00D               	goto	i2l5488
 12247                           
 12248                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
 12249  004736  D801               	call	i2u492_48
 12250  004738  0012               	return	
 12251  00473A                     i2u492_48:
 12252  00473A  0005               	push	
 12253  00473C  6EFA               	movwf	pclath,c
 12254  00473E  0101               	movlb	1	; () banked
 12255  004740  5175               	movf	_UART1_ErrorHandler& (0+255),w,b
 12256  004742  6EFD               	movwf	tosl,c
 12257  004744  5176               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 12258  004746  6EFE               	movwf	tosh,c
 12259  004748  5177               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 12260  00474A  6EFF               	movwf	tosu,c
 12261  00474C  50FA               	movf	pclath,w,c
 12262  00474E  0012               	return		;indir
 12263  004750                     i2l5488:
 12264                           
 12265                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
 12266  004750  ECEA  F028         	call	_UART1_RxDataHandler	;wreg free
 12267  004754  0012               	return		;funcret
 12268  004756                     __end_of_UART1_Receive_ISR:
 12269                           	opt callstack 0
 12270                           
 12271 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 12272 ;; Defined at:
 12273 ;;		line 299 in file "mcc_generated_files/uart1.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      void 
 12280 ;; Registers used:
 12281 ;;		None
 12282 ;; Tracked objects:
 12283 ;;		On entry : 3F/1
 12284 ;;		On exit  : 3F/1
 12285 ;;		Unchanged: 3F/0
 12286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12291 ;;Total ram usage:        0 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; This function calls:
 12294 ;;		Nothing
 12295 ;; This function is called by:
 12296 ;;		_UART1_Initialize
 12297 ;;		_UART1_Receive_ISR
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text81
 12302  0054FE                     __ptext81:
 12303                           	opt callstack 0
 12304  0054FE                     _UART1_DefaultOverrunErrorHandler:
 12305                           	opt callstack 18
 12306                           
 12307                           ; BSR set to: 1
 12308                           
 12309                           ;incstack = 0
 12310  0054FE  0012               	return		;funcret
 12311  005500                     __end_of_UART1_DefaultOverrunErrorHandler:
 12312                           	opt callstack 0
 12313                           
 12314 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 12315 ;; Defined at:
 12316 ;;		line 297 in file "mcc_generated_files/uart1.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		None
 12325 ;; Tracked objects:
 12326 ;;		On entry : 3F/1
 12327 ;;		On exit  : 3F/1
 12328 ;;		Unchanged: 3F/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12334 ;;Total ram usage:        0 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; This function calls:
 12337 ;;		Nothing
 12338 ;; This function is called by:
 12339 ;;		_UART1_Initialize
 12340 ;;		_UART1_Receive_ISR
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text82
 12345  005500                     __ptext82:
 12346                           	opt callstack 0
 12347  005500                     _UART1_DefaultFramingErrorHandler:
 12348                           	opt callstack 18
 12349                           
 12350                           ; BSR set to: 1
 12351                           
 12352                           ; BSR set to: 1
 12353                           ;incstack = 0
 12354  005500  0012               	return		;funcret
 12355  005502                     __end_of_UART1_DefaultFramingErrorHandler:
 12356                           	opt callstack 0
 12357                           
 12358 ;; *************** function _UART1_DefaultErrorHandler *****************
 12359 ;; Defined at:
 12360 ;;		line 301 in file "mcc_generated_files/uart1.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12369 ;; Tracked objects:
 12370 ;;		On entry : 3F/1
 12371 ;;		On exit  : 3F/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; Hardware stack levels required when called:    1
 12381 ;; This function calls:
 12382 ;;		_UART1_RxDataHandler
 12383 ;; This function is called by:
 12384 ;;		_UART1_Initialize
 12385 ;;		_UART1_Receive_ISR
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           	psect	text83
 12390  0054EC                     __ptext83:
 12391                           	opt callstack 0
 12392  0054EC                     _UART1_DefaultErrorHandler:
 12393                           	opt callstack 17
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
 12397                           
 12398                           ; BSR set to: 1
 12399                           ;incstack = 0
 12400  0054EC  ECEA  F028         	call	_UART1_RxDataHandler	;wreg free
 12401                           
 12402                           ; BSR set to: 0
 12403  0054F0  0012               	return		;funcret
 12404  0054F2                     __end_of_UART1_DefaultErrorHandler:
 12405                           	opt callstack 0
 12406                           
 12407 ;; *************** function _UART1_RxDataHandler *****************
 12408 ;; Defined at:
 12409 ;;		line 287 in file "mcc_generated_files/uart1.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;		None
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;		None
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      void 
 12416 ;; Registers used:
 12417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/3D
 12420 ;;		On exit  : 3F/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12427 ;;Total ram usage:        0 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; This function calls:
 12430 ;;		Nothing
 12431 ;; This function is called by:
 12432 ;;		_UART1_Receive_ISR
 12433 ;;		_UART1_DefaultErrorHandler
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           	psect	text84
 12438  0051D4                     __ptext84:
 12439                           	opt callstack 0
 12440  0051D4                     _UART1_RxDataHandler:
 12441                           	opt callstack 18
 12442                           
 12443                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;incstack = 0
 12447  0051D4  0E52               	movlw	low _uart1RxBuffer
 12448  0051D6  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12449  0051D8  6ED9               	movwf	fsr2l,c
 12450  0051DA  6ADA               	clrf	fsr2h,c
 12451  0051DC  0E01               	movlw	high _uart1RxBuffer
 12452  0051DE  22DA               	addwfc	fsr2h,f,c
 12453  0051E0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 12454  0051E6  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
 12455                           
 12456                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 12457  0051E8  0E07               	movlw	7
 12458  0051EA  645A               	cpfsgt	_uart1RxHead^0,c
 12459  0051EC  D002               	goto	i2l4944
 12460                           
 12461                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
 12462  0051EE  0E00               	movlw	0
 12463  0051F0  6E5A               	movwf	_uart1RxHead^0,c	;volatile
 12464  0051F2                     i2l4944:
 12465                           
 12466                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
 12467  0051F2  0100               	movlb	0	; () banked
 12468  0051F4  2BA7               	incf	_uart1RxCount& (0+255),f,b	;volatile
 12469                           
 12470                           ; BSR set to: 0
 12471  0051F6  0012               	return		;funcret
 12472  0051F8                     __end_of_UART1_RxDataHandler:
 12473                           	opt callstack 0
 12474                           
 12475 ;; *************** function _UART2_tx_vect_isr *****************
 12476 ;; Defined at:
 12477 ;;		line 226 in file "mcc_generated_files/uart2.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;		None
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;		None
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  1    wreg      void 
 12484 ;; Registers used:
 12485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;Total ram usage:        0 bytes
 12496 ;; Hardware stack levels used:    1
 12497 ;; Hardware stack levels required when called:    1
 12498 ;; This function calls:
 12499 ;;		Absolute function
 12500 ;;		_UART2_Transmit_ISR
 12501 ;; This function is called by:
 12502 ;;		Interrupt level 2
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           	psect	text85
 12507  0051F8                     __ptext85:
 12508                           	opt callstack 0
 12509  0051F8                     _UART2_tx_vect_isr:
 12510                           	opt callstack 19
 12511                           
 12512                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;incstack = 0
 12516  0051F8  0101               	movlb	1	; () banked
 12517  0051FA  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12518  0051FC  1185               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12519  0051FE  1186               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12520  005200  B4D8               	btfsc	status,2,c
 12521  005202  0011               	retfie		f
 12522                           
 12523                           ; BSR set to: 1
 12524                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
 12525  005204  D801               	call	i2u564_48
 12526  005206  0011               	retfie		f
 12527  005208                     i2u564_48:
 12528  005208  0005               	push	
 12529  00520A  6EFA               	movwf	pclath,c
 12530  00520C  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12531  00520E  6EFD               	movwf	tosl,c
 12532  005210  5185               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12533  005212  6EFE               	movwf	tosh,c
 12534  005214  5186               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12535  005216  6EFF               	movwf	tosu,c
 12536  005218  50FA               	movf	pclath,w,c
 12537  00521A  0012               	return		;indir
 12538  00521C                     __end_of_UART2_tx_vect_isr:
 12539                           	opt callstack 0
 12540                           
 12541 ;; *************** function _UART2_Transmit_ISR *****************
 12542 ;; Defined at:
 12543 ;;		line 244 in file "mcc_generated_files/uart2.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;		None
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;		None
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      void 
 12550 ;; Registers used:
 12551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12552 ;; Tracked objects:
 12553 ;;		On entry : 3F/1
 12554 ;;		On exit  : 6/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12561 ;;Total ram usage:        0 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; This function calls:
 12564 ;;		Nothing
 12565 ;; This function is called by:
 12566 ;;		_UART2_Initialize
 12567 ;;		_UART2_tx_vect_isr
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text86
 12572  005066                     __ptext86:
 12573                           	opt callstack 0
 12574  005066                     _UART2_Transmit_ISR:
 12575                           	opt callstack 19
 12576                           
 12577                           ; BSR set to: 1
 12578                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 12579                           
 12580                           ;incstack = 0
 12581  005066  0E08               	movlw	8
 12582  005068  0100               	movlb	0	; () banked
 12583  00506A  61A4               	cpfslt	_uart2TxBufferRemaining& (0+255),b
 12584  00506C  D012               	goto	i2l518
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 12588  00506E  0E42               	movlw	low _uart2TxBuffer
 12589  005070  25A5               	addwf	_uart2TxTail& (0+255),w,b	;volatile
 12590  005072  6ED9               	movwf	fsr2l,c
 12591  005074  6ADA               	clrf	fsr2h,c
 12592  005076  0E01               	movlw	high _uart2TxBuffer
 12593  005078  22DA               	addwfc	fsr2h,f,c
 12594  00507A  50DF               	movf	indf2,w,c
 12595  00507C  013D               	movlb	61	; () banked
 12596  00507E  6FD2               	movwf	210,b	;volatile
 12597                           
 12598                           ; BSR set to: 61
 12599  005080  0100               	movlb	0	; () banked
 12600  005082  2BA5               	incf	_uart2TxTail& (0+255),f,b	;volatile
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 12604  005084  0E07               	movlw	7
 12605  005086  65A5               	cpfsgt	_uart2TxTail& (0+255),b
 12606  005088  D002               	goto	i2l5500
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
 12610  00508A  0E00               	movlw	0
 12611  00508C  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
 12612  00508E                     i2l5500:
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
 12616  00508E  2BA4               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
 12617                           
 12618                           ;mcc_generated_files/uart2.c: 255:     }
 12619  005090  0012               	return	
 12620  005092                     i2l518:
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
 12624  005092  0139               	movlb	57	; () banked
 12625  005094  9796               	bcf	150,3,b	;volatile
 12626  005096  0012               	return		;funcret
 12627  005098                     __end_of_UART2_Transmit_ISR:
 12628                           	opt callstack 0
 12629                           
 12630 ;; *************** function _UART2_rx_vect_isr *****************
 12631 ;; Defined at:
 12632 ;;		line 234 in file "mcc_generated_files/uart2.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;		None
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;		None
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      void 
 12639 ;; Registers used:
 12640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12650 ;;Total ram usage:        0 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:    3
 12653 ;; This function calls:
 12654 ;;		Absolute function
 12655 ;;		_UART2_Receive_ISR
 12656 ;; This function is called by:
 12657 ;;		Interrupt level 2
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           	psect	text87
 12662  00521C                     __ptext87:
 12663                           	opt callstack 0
 12664  00521C                     _UART2_rx_vect_isr:
 12665                           	opt callstack 17
 12666                           
 12667                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
 12668                           
 12669                           ;incstack = 0
 12670  00521C  0101               	movlb	1	; () banked
 12671  00521E  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12672  005220  1188               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12673  005222  1189               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12674  005224  B4D8               	btfsc	status,2,c
 12675  005226  0011               	retfie		f
 12676                           
 12677                           ; BSR set to: 1
 12678                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
 12679  005228  D801               	call	i2u566_48
 12680  00522A  0011               	retfie		f
 12681  00522C                     i2u566_48:
 12682  00522C  0005               	push	
 12683  00522E  6EFA               	movwf	pclath,c
 12684  005230  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12685  005232  6EFD               	movwf	tosl,c
 12686  005234  5188               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12687  005236  6EFE               	movwf	tosh,c
 12688  005238  5189               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12689  00523A  6EFF               	movwf	tosu,c
 12690  00523C  50FA               	movf	pclath,w,c
 12691  00523E  0012               	return		;indir
 12692  005240                     __end_of_UART2_rx_vect_isr:
 12693                           	opt callstack 0
 12694                           
 12695 ;; *************** function _UART2_Receive_ISR *****************
 12696 ;; Defined at:
 12697 ;;		line 264 in file "mcc_generated_files/uart2.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;		None
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;		None
 12702 ;; Return value:  Size  Location     Type
 12703 ;;                  1    wreg      void 
 12704 ;; Registers used:
 12705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12706 ;; Tracked objects:
 12707 ;;		On entry : 3F/1
 12708 ;;		On exit  : 0/0
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12715 ;;Total ram usage:        0 bytes
 12716 ;; Hardware stack levels used:    1
 12717 ;; Hardware stack levels required when called:    2
 12718 ;; This function calls:
 12719 ;;		Absolute function
 12720 ;;		_UART2_DefaultErrorHandler
 12721 ;;		_UART2_DefaultFramingErrorHandler
 12722 ;;		_UART2_DefaultOverrunErrorHandler
 12723 ;;		_UART2_RxDataHandler
 12724 ;; This function is called by:
 12725 ;;		_UART2_Initialize
 12726 ;;		_UART2_rx_vect_isr
 12727 ;; This function uses a non-reentrant model
 12728 ;;
 12729                           
 12730                           	psect	text88
 12731  004756                     __ptext88:
 12732                           	opt callstack 0
 12733  004756                     _UART2_Receive_ISR:
 12734                           	opt callstack 17
 12735                           
 12736                           ; BSR set to: 1
 12737                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
 12738                           
 12739                           ;incstack = 0
 12740  004756  0E32               	movlw	low _uart2RxStatusBuffer
 12741  004758  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12742  00475A  6ED9               	movwf	fsr2l,c
 12743  00475C  6ADA               	clrf	fsr2h,c
 12744  00475E  0E01               	movlw	high _uart2RxStatusBuffer
 12745  004760  22DA               	addwfc	fsr2h,f,c
 12746  004762  0E00               	movlw	0
 12747  004764  6EDF               	movwf	indf2,c
 12748                           
 12749                           ; BSR set to: 1
 12750                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
 12751  004766  013D               	movlb	61	; () banked
 12752  004768  A7E1               	btfss	225,3,b	;volatile
 12753  00476A  D014               	goto	i2u496_49
 12754                           
 12755                           ; BSR set to: 61
 12756                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
 12757  00476C  0E32               	movlw	low _uart2RxStatusBuffer
 12758  00476E  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12759  004770  6ED9               	movwf	fsr2l,c
 12760  004772  6ADA               	clrf	fsr2h,c
 12761  004774  0E01               	movlw	high _uart2RxStatusBuffer
 12762  004776  22DA               	addwfc	fsr2h,f,c
 12763  004778  0101               	movlb	1	; () banked
 12764  00477A  82DF               	bsf	indf2,1,c
 12765                           
 12766                           ; BSR set to: 1
 12767                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
 12768  00477C  D801               	call	i2u496_48
 12769  00477E  D00A               	goto	i2u496_49
 12770  004780                     i2u496_48:
 12771  004780  0005               	push	
 12772  004782  6EFA               	movwf	pclath,c
 12773  004784  5172               	movf	_UART2_FramingErrorHandler& (0+255),w,b
 12774  004786  6EFD               	movwf	tosl,c
 12775  004788  5173               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
 12776  00478A  6EFE               	movwf	tosh,c
 12777  00478C  5174               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
 12778  00478E  6EFF               	movwf	tosu,c
 12779  004790  50FA               	movf	pclath,w,c
 12780  004792  0012               	return		;indir
 12781  004794                     i2u496_49:
 12782                           
 12783                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
 12784  004794  013D               	movlb	61	; () banked
 12785  004796  A3E1               	btfss	225,1,b	;volatile
 12786  004798  D014               	goto	i2u498_49
 12787                           
 12788                           ; BSR set to: 61
 12789                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
 12790  00479A  0E32               	movlw	low _uart2RxStatusBuffer
 12791  00479C  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12792  00479E  6ED9               	movwf	fsr2l,c
 12793  0047A0  6ADA               	clrf	fsr2h,c
 12794  0047A2  0E01               	movlw	high _uart2RxStatusBuffer
 12795  0047A4  22DA               	addwfc	fsr2h,f,c
 12796  0047A6  0101               	movlb	1	; () banked
 12797  0047A8  84DF               	bsf	indf2,2,c
 12798                           
 12799                           ; BSR set to: 1
 12800                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
 12801  0047AA  D801               	call	i2u498_48
 12802  0047AC  D00A               	goto	i2u498_49
 12803  0047AE                     i2u498_48:
 12804  0047AE  0005               	push	
 12805  0047B0  6EFA               	movwf	pclath,c
 12806  0047B2  516F               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
 12807  0047B4  6EFD               	movwf	tosl,c
 12808  0047B6  5170               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
 12809  0047B8  6EFE               	movwf	tosh,c
 12810  0047BA  5171               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
 12811  0047BC  6EFF               	movwf	tosu,c
 12812  0047BE  50FA               	movf	pclath,w,c
 12813  0047C0  0012               	return		;indir
 12814  0047C2                     i2u498_49:
 12815                           
 12816                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
 12817  0047C2  0E32               	movlw	low _uart2RxStatusBuffer
 12818  0047C4  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12819  0047C6  6ED9               	movwf	fsr2l,c
 12820  0047C8  6ADA               	clrf	fsr2h,c
 12821  0047CA  0E01               	movlw	high _uart2RxStatusBuffer
 12822  0047CC  22DA               	addwfc	fsr2h,f,c
 12823  0047CE  50DF               	movf	indf2,w,c
 12824  0047D0  B4D8               	btfsc	status,2,c
 12825  0047D2  D00D               	goto	i2l5520
 12826                           
 12827                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
 12828  0047D4  D801               	call	i2u500_48
 12829  0047D6  0012               	return	
 12830  0047D8                     i2u500_48:
 12831  0047D8  0005               	push	
 12832  0047DA  6EFA               	movwf	pclath,c
 12833  0047DC  0101               	movlb	1	; () banked
 12834  0047DE  516C               	movf	_UART2_ErrorHandler& (0+255),w,b
 12835  0047E0  6EFD               	movwf	tosl,c
 12836  0047E2  516D               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
 12837  0047E4  6EFE               	movwf	tosh,c
 12838  0047E6  516E               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
 12839  0047E8  6EFF               	movwf	tosu,c
 12840  0047EA  50FA               	movf	pclath,w,c
 12841  0047EC  0012               	return		;indir
 12842  0047EE                     i2l5520:
 12843                           
 12844                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
 12845  0047EE  EC20  F029         	call	_UART2_RxDataHandler	;wreg free
 12846  0047F2  0012               	return		;funcret
 12847  0047F4                     __end_of_UART2_Receive_ISR:
 12848                           	opt callstack 0
 12849                           
 12850 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
 12851 ;; Defined at:
 12852 ;;		line 300 in file "mcc_generated_files/uart2.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;		None
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;		None
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  1    wreg      void 
 12859 ;; Registers used:
 12860 ;;		None
 12861 ;; Tracked objects:
 12862 ;;		On entry : 3F/1
 12863 ;;		On exit  : 3F/1
 12864 ;;		Unchanged: 3F/0
 12865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12870 ;;Total ram usage:        0 bytes
 12871 ;; Hardware stack levels used:    1
 12872 ;; This function calls:
 12873 ;;		Nothing
 12874 ;; This function is called by:
 12875 ;;		_UART2_Initialize
 12876 ;;		_UART2_Receive_ISR
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           	psect	text89
 12881  005502                     __ptext89:
 12882                           	opt callstack 0
 12883  005502                     _UART2_DefaultOverrunErrorHandler:
 12884                           	opt callstack 18
 12885                           
 12886                           ; BSR set to: 1
 12887                           
 12888                           ;incstack = 0
 12889  005502  0012               	return		;funcret
 12890  005504                     __end_of_UART2_DefaultOverrunErrorHandler:
 12891                           	opt callstack 0
 12892                           
 12893 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
 12894 ;; Defined at:
 12895 ;;		line 298 in file "mcc_generated_files/uart2.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;		None
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;		None
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  1    wreg      void 
 12902 ;; Registers used:
 12903 ;;		None
 12904 ;; Tracked objects:
 12905 ;;		On entry : 3F/1
 12906 ;;		On exit  : 3F/1
 12907 ;;		Unchanged: 3F/0
 12908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12913 ;;Total ram usage:        0 bytes
 12914 ;; Hardware stack levels used:    1
 12915 ;; This function calls:
 12916 ;;		Nothing
 12917 ;; This function is called by:
 12918 ;;		_UART2_Initialize
 12919 ;;		_UART2_Receive_ISR
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           	psect	text90
 12924  005504                     __ptext90:
 12925                           	opt callstack 0
 12926  005504                     _UART2_DefaultFramingErrorHandler:
 12927                           	opt callstack 18
 12928                           
 12929                           ; BSR set to: 1
 12930                           
 12931                           ; BSR set to: 1
 12932                           ;incstack = 0
 12933  005504  0012               	return		;funcret
 12934  005506                     __end_of_UART2_DefaultFramingErrorHandler:
 12935                           	opt callstack 0
 12936                           
 12937 ;; *************** function _UART2_DefaultErrorHandler *****************
 12938 ;; Defined at:
 12939 ;;		line 302 in file "mcc_generated_files/uart2.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;		None
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;		None
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  1    wreg      void 
 12946 ;; Registers used:
 12947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12948 ;; Tracked objects:
 12949 ;;		On entry : 3F/1
 12950 ;;		On exit  : 3F/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12957 ;;Total ram usage:        0 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:    1
 12960 ;; This function calls:
 12961 ;;		_UART2_RxDataHandler
 12962 ;; This function is called by:
 12963 ;;		_UART2_Initialize
 12964 ;;		_UART2_Receive_ISR
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           	psect	text91
 12969  0054F2                     __ptext91:
 12970                           	opt callstack 0
 12971  0054F2                     _UART2_DefaultErrorHandler:
 12972                           	opt callstack 17
 12973                           
 12974                           ; BSR set to: 1
 12975                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
 12976                           
 12977                           ; BSR set to: 1
 12978                           ;incstack = 0
 12979  0054F2  EC20  F029         	call	_UART2_RxDataHandler	;wreg free
 12980                           
 12981                           ; BSR set to: 0
 12982  0054F6  0012               	return		;funcret
 12983  0054F8                     __end_of_UART2_DefaultErrorHandler:
 12984                           	opt callstack 0
 12985                           
 12986 ;; *************** function _UART2_RxDataHandler *****************
 12987 ;; Defined at:
 12988 ;;		line 288 in file "mcc_generated_files/uart2.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;		None
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;		None
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/3D
 12999 ;;		On exit  : 3F/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13006 ;;Total ram usage:        0 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; This function calls:
 13009 ;;		Nothing
 13010 ;; This function is called by:
 13011 ;;		_UART2_Receive_ISR
 13012 ;;		_UART2_DefaultErrorHandler
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           	psect	text92
 13017  005240                     __ptext92:
 13018                           	opt callstack 0
 13019  005240                     _UART2_RxDataHandler:
 13020                           	opt callstack 18
 13021                           
 13022                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;incstack = 0
 13026  005240  0E3A               	movlw	low _uart2RxBuffer
 13027  005242  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 13028  005244  6ED9               	movwf	fsr2l,c
 13029  005246  6ADA               	clrf	fsr2h,c
 13030  005248  0E01               	movlw	high _uart2RxBuffer
 13031  00524A  22DA               	addwfc	fsr2h,f,c
 13032  00524C  006F F743 FFDF     	movff	15824,indf2	;volatile
 13033  005252  2A59               	incf	_uart2RxHead^0,f,c	;volatile
 13034                           
 13035                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 13036  005254  0E07               	movlw	7
 13037  005256  6459               	cpfsgt	_uart2RxHead^0,c
 13038  005258  D002               	goto	i2l4964
 13039                           
 13040                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
 13041  00525A  0E00               	movlw	0
 13042  00525C  6E59               	movwf	_uart2RxHead^0,c	;volatile
 13043  00525E                     i2l4964:
 13044                           
 13045                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
 13046  00525E  0100               	movlb	0	; () banked
 13047  005260  2BA3               	incf	_uart2RxCount& (0+255),f,b	;volatile
 13048                           
 13049                           ; BSR set to: 0
 13050  005262  0012               	return		;funcret
 13051  005264                     __end_of_UART2_RxDataHandler:
 13052                           	opt callstack 0
 13053                           
 13054 ;; *************** function _TMR6_ISR *****************
 13055 ;; Defined at:
 13056 ;;		line 168 in file "mcc_generated_files/tmr6.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;		None
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13074 ;;Total ram usage:        0 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:    1
 13077 ;; This function calls:
 13078 ;;		Absolute function
 13079 ;;		_TMR6_DefaultInterruptHandler
 13080 ;; This function is called by:
 13081 ;;		Interrupt level 2
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           	psect	text93
 13086  00511C                     __ptext93:
 13087                           	opt callstack 0
 13088  00511C                     _TMR6_ISR:
 13089                           	opt callstack 19
 13090                           
 13091                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;incstack = 0
 13095  00511C  0139               	movlb	57	; () banked
 13096  00511E  91A9               	bcf	169,0,b	;volatile
 13097                           
 13098                           ; BSR set to: 57
 13099                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
 13100  005120  0101               	movlb	1	; () banked
 13101  005122  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13102  005124  116A               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13103  005126  116B               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13104  005128  B4D8               	btfsc	status,2,c
 13105  00512A  0011               	retfie		f
 13106                           
 13107                           ; BSR set to: 1
 13108                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
 13109  00512C  D801               	call	i2u568_48
 13110  00512E  0011               	retfie		f
 13111  005130                     i2u568_48:
 13112  005130  0005               	push	
 13113  005132  6EFA               	movwf	pclath,c
 13114  005134  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13115  005136  6EFD               	movwf	tosl,c
 13116  005138  516A               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13117  00513A  6EFE               	movwf	tosh,c
 13118  00513C  516B               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13119  00513E  6EFF               	movwf	tosu,c
 13120  005140  50FA               	movf	pclath,w,c
 13121  005142  0012               	return		;indir
 13122  005144                     __end_of_TMR6_ISR:
 13123                           	opt callstack 0
 13124                           
 13125 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13126 ;; Defined at:
 13127 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;		None
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;  i               1    2[COMRAM] unsigned char 
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13136 ;; Tracked objects:
 13137 ;;		On entry : 3F/1
 13138 ;;		On exit  : 3F/1
 13139 ;;		Unchanged: 3F/0
 13140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13144 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13145 ;;Total ram usage:        3 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; This function calls:
 13148 ;;		Nothing
 13149 ;; This function is called by:
 13150 ;;		_TMR6_Initialize
 13151 ;;		_TMR6_ISR
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           	psect	text94
 13156  004E7A                     __ptext94:
 13157                           	opt callstack 0
 13158  004E7A                     _TMR6_DefaultInterruptHandler:
 13159                           	opt callstack 19
 13160                           
 13161                           ; BSR set to: 1
 13162                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 13163                           
 13164                           ;incstack = 0
 13165  004E7A  0E00               	movlw	0
 13166  004E7C  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
 13167  004E7E                     i2l5528:
 13168                           
 13169                           ; BSR set to: 1
 13170                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
 13171  004E7E  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13172  004E80  0D02               	mullw	2
 13173  004E82  0E20               	movlw	low _tickCount
 13174  004E84  24F3               	addwf	243,w,c
 13175  004E86  6ED9               	movwf	fsr2l,c
 13176  004E88  0E01               	movlw	high _tickCount
 13177  004E8A  20F4               	addwfc	prodh,w,c
 13178  004E8C  6EDA               	movwf	fsr2h,c
 13179  004E8E  50DE               	movf	postinc2,w,c
 13180  004E90  10DE               	iorwf	postinc2,w,c
 13181  004E92  B4D8               	btfsc	status,2,c
 13182  004E94  D00B               	goto	i2l5532
 13183                           
 13184                           ; BSR set to: 1
 13185                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
 13186  004E96  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13187  004E98  0D02               	mullw	2
 13188  004E9A  0E20               	movlw	low _tickCount
 13189  004E9C  24F3               	addwf	243,w,c
 13190  004E9E  6ED9               	movwf	fsr2l,c
 13191  004EA0  0E01               	movlw	high _tickCount
 13192  004EA2  20F4               	addwfc	prodh,w,c
 13193  004EA4  6EDA               	movwf	fsr2h,c
 13194  004EA6  06DE               	decf	postinc2,f,c
 13195  004EA8  0E00               	movlw	0
 13196  004EAA  5ADD               	subwfb	postdec2,f,c
 13197  004EAC                     i2l5532:
 13198                           
 13199                           ; BSR set to: 1
 13200                           ;mcc_generated_files/tmr6.c: 194:  }
 13201  004EAC  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
 13202                           
 13203                           ; BSR set to: 1
 13204  004EAE  0E08               	movlw	8
 13205  004EB0  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
 13206  004EB2  D7E5               	goto	i2l5528
 13207  004EB4  0012               	return	
 13208  004EB6                     __end_of_TMR6_DefaultInterruptHandler:
 13209                           	opt callstack 0
 13210                           
 13211 ;; *************** function _TMR5_ISR *****************
 13212 ;; Defined at:
 13213 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;		None
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;		None
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  1    wreg      void 
 13220 ;; Registers used:
 13221 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 3F/1
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13231 ;;Total ram usage:        0 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; Hardware stack levels required when called:    2
 13234 ;; This function calls:
 13235 ;;		_TMR5_CallBack
 13236 ;;		_TMR5_WriteTimer
 13237 ;; This function is called by:
 13238 ;;		Interrupt level 2
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text95
 13243  004FCC                     __ptext95:
 13244                           	opt callstack 0
 13245  004FCC                     _TMR5_ISR:
 13246                           	opt callstack 18
 13247                           
 13248                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
 13249                           
 13250                           ; BSR set to: 1
 13251                           ;incstack = 0
 13252  004FCC  0139               	movlb	57	; () banked
 13253  004FCE  9DA8               	bcf	168,6,b	;volatile
 13254                           
 13255                           ; BSR set to: 57
 13256                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
 13257  004FD0  0060  F648  F004   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 13258  004FD6  0060  F64C  F005   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 13259  004FDC  EC32  F029         	call	_TMR5_WriteTimer	;wreg free
 13260                           
 13261                           ; BSR set to: 57
 13262                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
 13263  004FE0  0101               	movlb	1	; () banked
 13264  004FE2  4B90               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 13265  004FE4  2B91               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 13266  004FE6  5191               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 13267  004FE8  E104               	bnz	i2u569_40
 13268  004FEA  0E32               	movlw	50
 13269  004FEC  5D90               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 13270  004FEE  A0D8               	btfss	status,0,c
 13271  004FF0  0011               	retfie		f
 13272  004FF2                     i2u569_40:
 13273                           
 13274                           ; BSR set to: 1
 13275                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
 13276  004FF2  EC66  F029         	call	_TMR5_CallBack	;wreg free
 13277                           
 13278                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
 13279  004FF6  0E00               	movlw	0
 13280  004FF8  0101               	movlb	1	; () banked
 13281  004FFA  6F91               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 13282  004FFC  0E00               	movlw	0
 13283  004FFE  6F90               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 13284                           
 13285                           ; BSR set to: 1
 13286  005000  0011               	retfie		f
 13287  005002                     __end_of_TMR5_ISR:
 13288                           	opt callstack 0
 13289                           
 13290 ;; *************** function _TMR5_WriteTimer *****************
 13291 ;; Defined at:
 13292 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;  timerVal        2    3[COMRAM] unsigned short 
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;		None
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  1    wreg      void 
 13299 ;; Registers used:
 13300 ;;		None
 13301 ;; Tracked objects:
 13302 ;;		On entry : 3F/39
 13303 ;;		On exit  : 3F/39
 13304 ;;		Unchanged: 3E/0
 13305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13310 ;;Total ram usage:        2 bytes
 13311 ;; Hardware stack levels used:    1
 13312 ;; This function calls:
 13313 ;;		Nothing
 13314 ;; This function is called by:
 13315 ;;		_TMR5_ISR
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           	psect	text96
 13320  005264                     __ptext96:
 13321                           	opt callstack 0
 13322  005264                     _TMR5_WriteTimer:
 13323                           	opt callstack 19
 13324                           
 13325                           ; BSR set to: 57
 13326                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
 13327                           
 13328                           ; BSR set to: 1
 13329                           ;incstack = 0
 13330  005264  A49A               	btfss	154,2,c	;volatile
 13331  005266  D009               	goto	i2l776
 13332                           
 13333                           ; BSR set to: 57
 13334                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
 13335  005268  909A               	bcf	154,0,c	;volatile
 13336                           
 13337                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
 13338  00526A  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13339                           
 13340                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
 13341  005270  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13342                           
 13343                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
 13344  005276  809A               	bsf	154,0,c	;volatile
 13345                           
 13346                           ;mcc_generated_files/tmr5.c: 142:     }
 13347  005278  0012               	return	
 13348  00527A                     i2l776:
 13349                           
 13350                           ; BSR set to: 57
 13351                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
 13352  00527A  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13353                           
 13354                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
 13355  005280  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13356                           
 13357                           ; BSR set to: 57
 13358  005286  0012               	return		;funcret
 13359  005288                     __end_of_TMR5_WriteTimer:
 13360                           	opt callstack 0
 13361                           
 13362 ;; *************** function _TMR5_CallBack *****************
 13363 ;; Defined at:
 13364 ;;		line 185 in file "mcc_generated_files/tmr5.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;		None
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;		None
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  1    wreg      void 
 13371 ;; Registers used:
 13372 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13373 ;; Tracked objects:
 13374 ;;		On entry : 3F/1
 13375 ;;		On exit  : 0/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13382 ;;Total ram usage:        0 bytes
 13383 ;; Hardware stack levels used:    1
 13384 ;; Hardware stack levels required when called:    1
 13385 ;; This function calls:
 13386 ;;		Absolute function
 13387 ;;		_TMR5_DefaultInterruptHandler
 13388 ;; This function is called by:
 13389 ;;		_TMR5_ISR
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text97
 13394  0052CC                     __ptext97:
 13395                           	opt callstack 0
 13396  0052CC                     _TMR5_CallBack:
 13397                           	opt callstack 18
 13398                           
 13399                           ; BSR set to: 1
 13400                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
 13401                           
 13402                           ; BSR set to: 57
 13403                           ;incstack = 0
 13404  0052CC  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13405  0052CE  1167               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13406  0052D0  1168               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13407  0052D2  B4D8               	btfsc	status,2,c
 13408  0052D4  0012               	return	
 13409                           
 13410                           ; BSR set to: 1
 13411                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
 13412  0052D6  D801               	call	i2u505_48
 13413  0052D8  0012               	return	
 13414  0052DA                     i2u505_48:
 13415  0052DA  0005               	push	
 13416  0052DC  6EFA               	movwf	pclath,c
 13417  0052DE  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13418  0052E0  6EFD               	movwf	tosl,c
 13419  0052E2  5167               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13420  0052E4  6EFE               	movwf	tosh,c
 13421  0052E6  5168               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13422  0052E8  6EFF               	movwf	tosu,c
 13423  0052EA  50FA               	movf	pclath,w,c
 13424  0052EC  0012               	return		;indir
 13425  0052EE                     __end_of_TMR5_CallBack:
 13426                           	opt callstack 0
 13427                           
 13428 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13429 ;; Defined at:
 13430 ;;		line 198 in file "mcc_generated_files/tmr5.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;		None
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg, status,2, status,0
 13439 ;; Tracked objects:
 13440 ;;		On entry : 3F/1
 13441 ;;		On exit  : 3F/1
 13442 ;;		Unchanged: 3F/0
 13443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13448 ;;Total ram usage:        1 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_TMR5_Initialize
 13454 ;;		_TMR5_CallBack
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text98
 13459  00535E                     __ptext98:
 13460                           	opt callstack 0
 13461  00535E                     _TMR5_DefaultInterruptHandler:
 13462                           	opt callstack 18
 13463                           
 13464                           ; BSR set to: 1
 13465                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 13466                           
 13467                           ;incstack = 0
 13468  00535E  A0BE               	btfss	190,0,c	;volatile
 13469  005360  D002               	goto	i2u471_40
 13470  005362  0E01               	movlw	1
 13471  005364  D001               	goto	i2u471_46
 13472  005366                     i2u471_40:
 13473  005366  0E00               	movlw	0
 13474  005368                     i2u471_46:
 13475  005368  0AFF               	xorlw	255
 13476  00536A  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
 13477  00536C  50BE               	movf	190,w,c	;volatile
 13478  00536E  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13479  005370  0BFE               	andlw	-2
 13480  005372  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13481  005374  6EBE               	movwf	190,c	;volatile
 13482                           
 13483                           ; BSR set to: 1
 13484  005376  0012               	return		;funcret
 13485  005378                     __end_of_TMR5_DefaultInterruptHandler:
 13486                           	opt callstack 0
 13487                           
 13488                           ;
 13489                           ; Interrupt Vector Table @ 0x8
 13490                           ;
 13491                           
 13492                           	psect	ivt0x8
 13493  000008                     __pivt0x8:
 13494                           	opt callstack 0
 13495  000008                     ivt0x8_base:
 13496                           	opt callstack 0
 13497                           
 13498                           ; Vector 0 : SWINT
 13499  000008  153F               	dw	_Default_ISR shr (0+2)
 13500                           
 13501                           ; Vector 1 : HLVD
 13502  00000A  153F               	dw	_Default_ISR shr (0+2)
 13503                           
 13504                           ; Vector 2 : OSF
 13505  00000C  153F               	dw	_Default_ISR shr (0+2)
 13506                           
 13507                           ; Vector 3 : CSW
 13508  00000E  153F               	dw	_Default_ISR shr (0+2)
 13509                           
 13510                           ; Vector 4 : NVM
 13511  000010  153F               	dw	_Default_ISR shr (0+2)
 13512                           
 13513                           ; Vector 5 : SCAN
 13514  000012  153F               	dw	_Default_ISR shr (0+2)
 13515                           
 13516                           ; Vector 6 : CRC
 13517  000014  153F               	dw	_Default_ISR shr (0+2)
 13518                           
 13519                           ; Vector 7 : IOC
 13520  000016  153F               	dw	_Default_ISR shr (0+2)
 13521                           
 13522                           ; Vector 8 : INT0
 13523  000018  153F               	dw	_Default_ISR shr (0+2)
 13524                           
 13525                           ; Vector 9 : ZCD
 13526  00001A  153F               	dw	_Default_ISR shr (0+2)
 13527                           
 13528                           ; Vector 10 : AD
 13529  00001C  153F               	dw	_Default_ISR shr (0+2)
 13530                           
 13531                           ; Vector 11 : ADT
 13532  00001E  153F               	dw	_Default_ISR shr (0+2)
 13533                           
 13534                           ; Vector 12 : CMP1
 13535  000020  153F               	dw	_Default_ISR shr (0+2)
 13536                           
 13537                           ; Vector 13 : SMT1
 13538  000022  153F               	dw	_Default_ISR shr (0+2)
 13539                           
 13540                           ; Vector 14 : SMT1PRA
 13541  000024  153F               	dw	_Default_ISR shr (0+2)
 13542                           
 13543                           ; Vector 15 : SMT1PRW
 13544  000026  153F               	dw	_Default_ISR shr (0+2)
 13545                           
 13546                           ; Vector 16 : DMA1SCNT
 13547  000028  153F               	dw	_Default_ISR shr (0+2)
 13548                           
 13549                           ; Vector 17 : DMA1DCNT
 13550  00002A  153F               	dw	_Default_ISR shr (0+2)
 13551                           
 13552                           ; Vector 18 : DMA1OR
 13553  00002C  153F               	dw	_Default_ISR shr (0+2)
 13554                           
 13555                           ; Vector 19 : DMA1A
 13556  00002E  153F               	dw	_Default_ISR shr (0+2)
 13557                           
 13558                           ; Vector 20 : SPI1RX
 13559  000030  153F               	dw	_Default_ISR shr (0+2)
 13560                           
 13561                           ; Vector 21 : SPI1TX
 13562  000032  153F               	dw	_Default_ISR shr (0+2)
 13563                           
 13564                           ; Vector 22 : SPI1
 13565  000034  153F               	dw	_Default_ISR shr (0+2)
 13566                           
 13567                           ; Vector 23 : I2C1RX
 13568  000036  153F               	dw	_Default_ISR shr (0+2)
 13569                           
 13570                           ; Vector 24 : I2C1TX
 13571  000038  153F               	dw	_Default_ISR shr (0+2)
 13572                           
 13573                           ; Vector 25 : I2C1
 13574  00003A  153F               	dw	_Default_ISR shr (0+2)
 13575                           
 13576                           ; Vector 26 : I2C1E
 13577  00003C  153F               	dw	_Default_ISR shr (0+2)
 13578                           
 13579                           ; Vector 27 : U1RX
 13580  00003E  146C               	dw	_UART1_rx_vect_isr shr (0+2)
 13581                           
 13582                           ; Vector 28 : U1TX
 13583  000040  1463               	dw	_UART1_tx_vect_isr shr (0+2)
 13584                           
 13585                           ; Vector 29 : U1E
 13586  000042  153F               	dw	_Default_ISR shr (0+2)
 13587                           
 13588                           ; Vector 30 : U1
 13589  000044  153F               	dw	_Default_ISR shr (0+2)
 13590                           
 13591                           ; Vector 31 : TMR0
 13592  000046  153F               	dw	_Default_ISR shr (0+2)
 13593                           
 13594                           ; Vector 32 : TMR1
 13595  000048  153F               	dw	_Default_ISR shr (0+2)
 13596                           
 13597                           ; Vector 33 : TMR1G
 13598  00004A  153F               	dw	_Default_ISR shr (0+2)
 13599                           
 13600                           ; Vector 34 : TMR2
 13601  00004C  153F               	dw	_Default_ISR shr (0+2)
 13602                           
 13603                           ; Vector 35 : CCP1
 13604  00004E  153F               	dw	_Default_ISR shr (0+2)
 13605                           
 13606                           ; Vector 36 : Undefined
 13607  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13608                           
 13609                           ; Vector 37 : NCO1
 13610  000052  153F               	dw	_Default_ISR shr (0+2)
 13611                           
 13612                           ; Vector 38 : CWG1
 13613  000054  153F               	dw	_Default_ISR shr (0+2)
 13614                           
 13615                           ; Vector 39 : CLC1
 13616  000056  153F               	dw	_Default_ISR shr (0+2)
 13617                           
 13618                           ; Vector 40 : INT1
 13619  000058  153F               	dw	_Default_ISR shr (0+2)
 13620                           
 13621                           ; Vector 41 : CMP2
 13622  00005A  153F               	dw	_Default_ISR shr (0+2)
 13623                           
 13624                           ; Vector 42 : DMA2SCNT
 13625  00005C  153F               	dw	_Default_ISR shr (0+2)
 13626                           
 13627                           ; Vector 43 : DMA2DCNT
 13628  00005E  153F               	dw	_Default_ISR shr (0+2)
 13629                           
 13630                           ; Vector 44 : DMA2OR
 13631  000060  153F               	dw	_Default_ISR shr (0+2)
 13632                           
 13633                           ; Vector 45 : DMA2A
 13634  000062  153F               	dw	_Default_ISR shr (0+2)
 13635                           
 13636                           ; Vector 46 : I2C2RX
 13637  000064  153F               	dw	_Default_ISR shr (0+2)
 13638                           
 13639                           ; Vector 47 : I2C2TX
 13640  000066  153F               	dw	_Default_ISR shr (0+2)
 13641                           
 13642                           ; Vector 48 : I2C2
 13643  000068  153F               	dw	_Default_ISR shr (0+2)
 13644                           
 13645                           ; Vector 49 : I2C2E
 13646  00006A  153F               	dw	_Default_ISR shr (0+2)
 13647                           
 13648                           ; Vector 50 : U2RX
 13649  00006C  1487               	dw	_UART2_rx_vect_isr shr (0+2)
 13650                           
 13651                           ; Vector 51 : U2TX
 13652  00006E  147E               	dw	_UART2_tx_vect_isr shr (0+2)
 13653                           
 13654                           ; Vector 52 : U2E
 13655  000070  153F               	dw	_Default_ISR shr (0+2)
 13656                           
 13657                           ; Vector 53 : U2
 13658  000072  153F               	dw	_Default_ISR shr (0+2)
 13659                           
 13660                           ; Vector 54 : TMR3
 13661  000074  153F               	dw	_Default_ISR shr (0+2)
 13662                           
 13663                           ; Vector 55 : TMR3G
 13664  000076  153F               	dw	_Default_ISR shr (0+2)
 13665                           
 13666                           ; Vector 56 : TMR4
 13667  000078  153F               	dw	_Default_ISR shr (0+2)
 13668                           
 13669                           ; Vector 57 : CCP2
 13670  00007A  153F               	dw	_Default_ISR shr (0+2)
 13671                           
 13672                           ; Vector 58 : Undefined
 13673  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13674                           
 13675                           ; Vector 59 : CWG2
 13676  00007E  153F               	dw	_Default_ISR shr (0+2)
 13677                           
 13678                           ; Vector 60 : CLC2
 13679  000080  153F               	dw	_Default_ISR shr (0+2)
 13680                           
 13681                           ; Vector 61 : INT2
 13682  000082  153F               	dw	_Default_ISR shr (0+2)
 13683                           
 13684                           ; Vector 62 : Undefined
 13685  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13686                           
 13687                           ; Vector 63 : Undefined
 13688  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13689                           
 13690                           ; Vector 64 : Undefined
 13691  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13692                           
 13693                           ; Vector 65 : Undefined
 13694  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13695                           
 13696                           ; Vector 66 : Undefined
 13697  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13698                           
 13699                           ; Vector 67 : Undefined
 13700  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13701                           
 13702                           ; Vector 68 : Undefined
 13703  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13704                           
 13705                           ; Vector 69 : Undefined
 13706  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13707                           
 13708                           ; Vector 70 : TMR5
 13709  000094  13F3               	dw	_TMR5_ISR shr (0+2)
 13710                           
 13711                           ; Vector 71 : TMR5G
 13712  000096  153F               	dw	_Default_ISR shr (0+2)
 13713                           
 13714                           ; Vector 72 : TMR6
 13715  000098  1447               	dw	_TMR6_ISR shr (0+2)
 13716                           
 13717                           ; Vector 73 : CCP3
 13718  00009A  153F               	dw	_Default_ISR shr (0+2)
 13719                           
 13720                           ; Vector 74 : CWG3
 13721  00009C  153F               	dw	_Default_ISR shr (0+2)
 13722                           
 13723                           ; Vector 75 : CLC3
 13724  00009E  153F               	dw	_Default_ISR shr (0+2)
 13725                           
 13726                           ; Vector 76 : Undefined
 13727  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13728                           
 13729                           ; Vector 77 : Undefined
 13730  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13731                           
 13732                           ; Vector 78 : Undefined
 13733  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13734                           
 13735                           ; Vector 79 : Undefined
 13736  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13737                           
 13738                           ; Vector 80 : CCP4
 13739  0000A8  153F               	dw	_Default_ISR shr (0+2)
 13740                           
 13741                           ; Vector 81 : CLC4
 13742  0000AA  153F               	dw	_Default_ISR shr (0+2)
 13743  0000AC                     ivt0x8_undefint:
 13744                           	opt callstack 0
 13745  0000AC  00FF               	reset	
 13746                           
 13747                           	psect	text99
 13748  000000                     __ptext99:
 13749                           	opt callstack 0
 13750                           
 13751                           	psect	rparam
 13752  0000                     tosu	equ	0x3FFF
 13753                           tosh	equ	0x3FFE
 13754                           tosl	equ	0x3FFD
 13755                           stkptr	equ	0x3FFC
 13756                           pclatu	equ	0x3FFB
 13757                           pclath	equ	0x3FFA
 13758                           pcl	equ	0x3FF9
 13759                           tblptru	equ	0x3FF8
 13760                           tblptrh	equ	0x3FF7
 13761                           tblptrl	equ	0x3FF6
 13762                           tablat	equ	0x3FF5
 13763                           prodh	equ	0x3FF4
 13764                           prodl	equ	0x3FF3
 13765                           indf0	equ	0x3FEF
 13766                           postinc0	equ	0x3FEE
 13767                           postdec0	equ	0x3FED
 13768                           preinc0	equ	0x3FEC
 13769                           plusw0	equ	0x3FEB
 13770                           fsr0h	equ	0x3FEA
 13771                           fsr0l	equ	0x3FE9
 13772                           wreg	equ	0x3FE8
 13773                           indf1	equ	0x3FE7
 13774                           postinc1	equ	0x3FE6
 13775                           postdec1	equ	0x3FE5
 13776                           preinc1	equ	0x3FE4
 13777                           plusw1	equ	0x3FE3
 13778                           fsr1h	equ	0x3FE2
 13779                           fsr1l	equ	0x3FE1
 13780                           bsr	equ	0x3FE0
 13781                           indf2	equ	0x3FDF
 13782                           postinc2	equ	0x3FDE
 13783                           postdec2	equ	0x3FDD
 13784                           preinc2	equ	0x3FDC
 13785                           plusw2	equ	0x3FDB
 13786                           fsr2h	equ	0x3FDA
 13787                           fsr2l	equ	0x3FD9
 13788                           status	equ	0x3FD8


Data Sizes:
    Strings     78
    Constant    0
    Data        68
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160     62      78
    BANK1           256      0     224
    BANK2           256    128     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S3191_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_16(CODE[4]), 
		 -> STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[5]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    once@once_flag	PTR _Bool  size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    switches	PTR struct IN_data size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _rand->___omul
    _led_lightshow->___awdiv
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _send_lcd_cmd_long->_wdtdelay
    _eaDogM_WriteCommand->_send_lcd_cmd
    _send_lcd_cmd->_wdtdelay
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod
    _calc_pot->___fltol
    _lp_filter->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___fldiv->___flsub
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_Digital232_RW
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_calc_pot
    _printf->_vfprintf
    _calc_pot->___fltol
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_work_sw

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   99848
                                             34 BANK0     28    28      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                            ___awdiv
                            ___fldiv
                           ___xxtofl
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                      _led_lightshow
                               _once
                               _rand
                            _sprintf
                              _srand
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                            128   128      0   18545
                                              0 BANK2    128   128      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16     9      7   14221
                                              4 BANK0     16     9      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    2786
                                             13 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   4     2      2    1419
                                              9 COMRAM     4     2      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2     211
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     456
                                             29 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              24     8     16     456
                                              5 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _once                                                 2     0      2     332
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    2403
                                             13 COMRAM     5     3      2
                         _StartTimer
                          _TimerDone
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    2140
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0     765
                                             10 COMRAM     1     1      0
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     672
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1486
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     605
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     121
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   17220
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1834
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   34104
                                             30 BANK0      4     4      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                           _calc_pot
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   13996
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   13369
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   12617
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2922
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7129
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4863
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     400
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1670
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _calc_pot                                             4     2      2   18030
                                             26 BANK0      4     2      2
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _lp_filter
 ---------------------------------------------------------------------------------
 (3) _lp_filter                                           22    14      8   13376
                                             79 COMRAM     2     2      0
                                              0 BANK0     20    12      8
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3827
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3442
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3236
                                             21 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2183
                                             54 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     746
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                             81 COMRAM     4     4      0
                                             20 BANK0      6     2      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                          _lp_filter (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2    1322
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     332
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _calc_pot
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _lp_filter (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _lp_filter
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   ___awdiv
   ___fldiv
     ___fladd (ARG)
     ___flmul (ARG)
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _eaDogM_WriteCommand
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _led_lightshow
     _StartTimer
     _TimerDone
     ___awdiv
   _once
   _rand
     ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
         _fputc
           _putch
             _UART2_Write
         _stoa
           _fputc
             _putch
               _UART2_Write
           _strlen
   _srand
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     80      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      4E       5       48.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     228      58        0.0%
DATA                 0      0     228       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 13 17:24:52 2020

                           _SPI1_Exchange8bit 5344                                  ___fldiv@aexp 004F  
                                ___fldiv@bexp 004E              __end_of_TMR5_SetInterruptHandler 5498  
                   __end_of_UART2_is_rx_ready 54EC                                  ___fldiv@sign 0047  
                          ?_SPI1_Exchange8bit 0001                                   __CFG_CP$OFF 000000  
                                          l68 5322                                            _IO 01A9  
                                ___awdiv@sign 000B                        __end_of_FVR_Initialize 54E6  
                           ??_TMR5_WriteTimer 0006                                   __CFG_LVP$ON 000000  
                               work_sw@buffer 0200                                           l494 4DD4  
                                         _GIE 01FE97                                           l989 5352  
                                         _abs 4E3C                           ??_SPI1_Exchange8bit 0006  
                                         _pad 4400                       __size_of_PMD_Initialize 0022  
               eaDogM_WriteStringAtPos@strPtr 000F                               _TMR2_Initialize 52EE  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                                  ___flmul@aexp 0023  
                                ___flmul@bexp 0024                               send_lcd_cmd@cmd 000A  
                          _UART1_Transmit_ISR 5034                                 calc_pot@value 007A  
                                ___flmul@sign 0022                                  ___flmul@temp 002D  
                                ___flmul@prod 0029                                 __CFG_BBEN$OFF 000000  
                                __CFG_ZCD$OFF 000000                                  ___fltol@exp1 0079  
                                        ?_abs 0018                                          l2014 3488  
                                        l1206 2BDA                                          l2025 34F6  
                                        l2105 4E6C                                          l2026 34F2  
                                        l1242 50DA                                          l1082 226E  
                                        l1171 3738                                          l2044 24A8  
                                        l2061 276E                                          l2053 26D8  
                                        l1093 23E8                                          l2054 26D4  
                                        l1166 366A                                          l1078 21E8  
                                        l1087 22DC                                          l1265 4EC8  
                                        l1089 2322                                          l1371 30E6  
                                        l2092 3C36                                          l2085 3BB0  
                                        l1358 443A                                          l1369 30DA  
                                        l1398 3A68                                          l6100 4DF6  
                                        l6102 4DF8                          _ADCC_StartConversion 54AC  
                                        l1960 28EE                                          l6200 3DC6  
                                        l6112 44CA                                          l6122 4C18  
                                        l7012 42EE                                          l6204 3DEC  
                                        l6220 3E6E                                          l6132 4E08  
                                        l6124 4C1C                                          l7030 432E  
                                        l7022 4306                                          l6142 4420  
                                        l6302 32CE                                          ?_pad 0018  
                                        l1975 29E2                                          l1959 2910  
                                        l7024 4312                                          l7016 42FE  
                                        l7040 3BC8                                          l1984 2A4A  
                                        l6240 3F20                                          l6232 3EE4  
                                        l6224 3E88                                          l6216 3E4A  
                                        l6136 4E24                                          l6152 4460  
                                        l1985 2A46                                          l7050 3BF8  
                                        l6226 3E9C                                          l6146 4432  
                                        l6250 30BE                                          l6314 3A1C  
                                        l7060 3C68                                          l7052 3C1E  
                                        l6500 2A1C                                          l6172 3CF2  
                                        l6236 3EFA                                          l6156 4494  
                                        l6148 4444                                          l6332 3AC0  
                                        l6324 3A86                                          l7046 3BE6  
                                        l6086 4DBE                                          l6342 3B24  
                                        l7048 3BEC                                          l6440 2900  
                                        l6360 27D8                                          l6184 3D40  
                                        l6264 3104                                          l6328 3AA2  
                                        l7312 50E4                                          l7058 3C5C  
                                        l6506 2A26                                          l6426 289E  
                                        l6186 3D54                                          l6178 3D1A  
                                        l6346 3B40                                          l6338 3B0A  
                                        l6602 39A6                                          l7076 3CAC  
                                        l6540 2AD0                                          l6364 27DC  
                                        l6196 3DB0                                          l6268 3114  
                                        l7332 4800                                          l7262 4D6A  
                                        l6710 34BC                                          l6534 2AC6  
                                        l6526 2AA0                                          l6462 2956  
                                        l6454 2934                                          l6438 28FC  
                                        l7318 3F72                                          l6278 3250  
                                        l6704 349E                                          l6632 3334  
                                        l6464 295A                                          l6472 296C  
                                        l6384 2820                                          l6608 39B8  
                                        l7360 495A                                          l7336 4824  
                                        l6730 354A                                          l6538 2ACE  
                                        l6490 2A06                                          l6482 29D2  
                                        l6298 32B4                                          l7522 373C  
                                        l7362 4962                                          l7354 4944  
                                        l6660 33A8                                          l6652 3374  
                                        l6628 3330                                          l6396 2844  
                                        l6388 2824                                          l7508 3712  
                                        l7460 35CC                                          l7380 499A  
                                        l7372 4982                                          l7348 4934  
                                        l7612 2B9A                                          l6734 356E  
                                        l6582 38F2                                          l7534 3784  
                                        l7622 2BE4                                          l6744 35A6  
                                        l6648 3370                                          l6592 395E  
                                        l7528 375A                                          l7480 3646  
                                        l7464 35F8                                          l7376 498C  
                                        l7704 2D8E                                          l7640 2C56  
                                        l7608 2B6E                                          l6922 5188  
                                        l6746 35A8                                          l6738 3598  
                                        l6674 33DE                                          l6666 33C6  
                                        l6842 269E                                          l6770 2468  
                                        l7554 37C0                                          l7634 2C2E  
                                        l7618 2BBE                                          l6692 3460  
                                        l6684 3438                                          l6836 2680  
                                        l6932 2DD4                                          l7484 3652  
                                        l7476 363A                                          l7652 2C92  
                                        l7628 2C06                                          l7804 221E  
                                        l7812 2274                                          l6862 272C  
                                        l6766 2454                                          l6950 303E  
                                        l6598 399C                                          l7494 3674  
                                        l7670 2CDE                                          l7590 2B24  
                                        l7582 2B02                                          l7718 5118  
                                        l6784 2494                                          l6768 2458  
                                        l6936 2DEC                                          l7488 365E  
                                        l7496 367C                                          l7672 2CEC  
                                        l7656 2C9C                                          l6698 3486  
                                        l6866 274A                                          l6794 24C6  
                                        l6786 2498                                          l7498 36B0  
                                        l7594 2B2A                                          l7692 2D3E  
                                        l7676 2CF6                                          l6980 4AEA  
                                        l7828 22EC                                          l7772 215E  
                                        l7764 2140                                          l6878 278E  
                                        l6974 4AC2                                          l7688 2D36  
                                        l7872 240A                                          l7848 2398  
                                        l6986 4BC0                                          l7698 2D66  
                                        l7786 2198                                          l7794 21EE  
                                        l6996 429C                                          l6988 4BE4  
                                        STR_1 2001                                          STR_2 2012  
                                        STR_3 2023                                          STR_4 202F  
                                        STR_5 204C                                          STR_6 2048  
                                        STR_7 204C                                          STR_8 2038  
                                        STR_9 204C                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          u6030 44C2  
                                        u6130 4E4A                                          u6050 450A  
                                        _T6PR 003F93                                          u6060 4C46  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        u6310 30D0                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u6240 3EA0  
                                        u6400 329E                                          _PMD4 0039C4  
                                        u6161 3D20                                          _PMD5 0039C5  
                                        u6330 30FE                                          _PMD6 0039C6  
                                        u6067 4C38                                          _PMD7 0039C7  
                                        u7140 34EC                                          u6180 3D58  
                                        u6340 325E                                          u6421 39F8  
                                        u6270 3090                                          u6510 3B54  
                                        u7320 26CE                                          u7400 2DBA  
                                        u6360 3280                                          u6280 3092  
                                        u8200 2CBC                                          u8120 2C16  
                                        u6361 327E                                          u6610 28C2  
                                        u6370 328E                                          u7180 3558  
                                        u6620 28D2                                          u6380 3292  
                                        u8300 2D86                                          u8140 2C3E  
                                        u7510 4318                                          u7190 357C  
                                        u6630 28D4                                          u6470 3AB6  
                                        u8310 2D9E                                          u7360 273A  
                                        u7280 24B4                                          u6480 3AEA  
                                        u8240 2D06                                          u8160 2C66  
                                        u8080 2BB2                                          u7370 2758  
                                        u6810 2A40                                          u8250 2D16  
                                        u8090 2BCE                                          u8330 4182  
                                        u7460 428A                                          u6660 2918  
                                        u7470 42C2                                          u8270 2D4E  
                                        u8190 2CAC                                          u6487 3ADC  
                                        u8335 4170                                          u8280 2D5E  
                                        u7721 47FA                                          u8290 2D76  
                                        u7475 42B8                                          u7635 4D24  
                                        u7636 4D26                                          u7590 3C72  
                                        u6870 2AAC                                          u6790 2A2A  
                                        u6950 386E                                          u7680 54C6  
                                        u7675 4F52                                          u7780 4966  
                                        u8580 23C6                                          u7950 3798  
                                        u7970 37AC                                          _PLLR 01CEE0  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001                        led_lightshow@alive_led 00A0  
                                        abs@a 0018                                          _dbuf 0280  
                                        _main 2050                                          _dtoa 3058  
                                        _rand 4086                                          _seed 0196  
                                        _once 50F2                                          _prec 009E  
                                        _nout 018A                                          pad@i 001F  
                       __end_of_Digital232_RW 37F0                                          pad@p 001C  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0021  
                                        fsr2l 003FD9                                          _stoa 39EE  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0192  
                              ?_led_lightshow 000E                     __end_of_SPI1_Exchange8bit 535E  
                             ___fldiv@new_exp 0048                 ??_UART1_SetTxInterruptHandler 0009  
               ??_UART2_SetRxInterruptHandler 0009                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 51B0                                  ___param_bank 000000  
                                 ?_UART2_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 001A                                         ??_pad 001E  
                             ?_FVR_Initialize 0001                __size_of_OSCILLATOR_Initialize 001C  
                        ??_UART1_Transmit_ISR 0001                 __end_of_OSCILLATOR_Initialize 5328  
                               ___fltol@sign1 0078                               __end_of___aodiv 3E1E  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                             __end_of___fladd 2AF4                                         ?_main 0001  
                                       ?_dtoa 0023                                         _ADCLK 003EFF  
                             __end_of___aomod 3F52                                         _ADPCH 003EF1  
                             __end_of___fldiv 35B0                                         ?_rand 001E  
                                       _ADREF 003EFD                               __end_of___awdiv 49A8  
                                       ?_once 0006                                         STR_10 203C  
                                       STR_11 204C                                         STR_12 2040  
                                       STR_13 204C                                         STR_14 2044  
                                       STR_15 204C                                         STR_16 2034  
                               __CFG_WDTE$OFF 000000                                         _ADRPT 003EEC  
                             __end_of___flmul 27AC                               __end_of___flsub 4B52  
                             __end_of___fltol 4348                                         ?_stoa 0011  
                             ___awdiv@divisor 0008                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                      eaDogM_WriteStringAtPos@c 000E  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                    eaDogM_WriteStringAtPos@r 0011                                         _T5CLK 003F9D  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                __CFG_DEBUG$OFF 000000  
                                       _T6HLT 003F95                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         _U2UIR 003DE0  
                                       _U1TXB 003DEA                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         i2l344 5060  
                                       _T6TMR 003F92                                         i2l518 5092  
                                       _T6RST 003F97                           ??_UART1_rx_vect_isr 0001  
                                       i2l776 527A                               ___awdiv@counter 000A  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 0049  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 54FC  
                    eaDogM_WriteString@strPtr 000A                       ??_ADCC_IsConversionDone 0006  
           __size_of_TMR6_SetInterruptHandler 0014                     ?_TMR6_SetInterruptHandler 0006  
                           _UART1_tx_vect_isr 518C                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR5_ISR 5002                              __end_of_TMR6_ISR 5144  
                                       _flags 0056                               _Digital232_init 4194  
                       ?_ADCC_StartConversion 0001                                         _fputc 44B2  
                  __size_of_send_lcd_cmd_long 0024                                         _fputs 4DFE  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                                       _srand 4F60                                         pad@fp 0018  
                                       _width 018C                                         _putch 54D4  
                                       dtoa@d 0025                                         dtoa@i 0045  
                                       main@y 009D                                         dtoa@n 003D  
                                       dtoa@p 0037                                         dtoa@s 003B  
                                       dtoa@w 0039                              led_lightshow@seq 0012  
                                       pclath 003FFA                                         tablat 003FF5  
                   ??_eaDogM_WriteStringAtPos 0011                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 001D  
                                       stoa@l 0025                                         stoa@p 0023  
                                       stoa@s 0013                                         stoa@w 001F  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5434  
                 _UART1_SetRxInterruptHandler 5420                               __end_of_sprintf 4CEE  
                             __end_of_work_sw 4920      __end_of_UART1_DefaultFramingErrorHandler 5502  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5500  
                         ??_UART1_tx_vect_isr 0001                     __end_of_UART1_rx_vect_isr 51D4  
                    __size_of_SPI1_Initialize 0018                ??_TMR6_DefaultInterruptHandler 0001  
                             _TMR5_Initialize 4C5A                ??_UART2_SetOverrunErrorHandler 0009  
                             __initialization 49A8                             _UART2_rx_vect_isr 521C  
              eaDogM_WriteString@bytesWritten 000D                                  __end_of_main 2428  
                                __end_of_dtoa 3304                                  __end_of_rand 4194  
                                __end_of_once 511C                                  __end_of_stoa 3B62  
                  __size_of_UART2_is_rx_ready 0006                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                            ?_UART2_rx_vect_isr 0001  
                     __end_of_TMR2_Initialize 530C                                  ?_UART2_Write 0001  
                                      ??_main 0082                                        ??_dtoa 002D  
                                      ??_rand 0020                                        ??_once 0008  
                              __CFG_PR1WAY$ON 000000                      _TMR5_SetInterruptHandler 5484  
                                      ??_stoa 0015                                 __activetblptr 000003  
        __size_of_UART1_SetTxInterruptHandler 0014                           ??_UART2_rx_vect_isr 0001  
                         eaDogM_WriteString@i 000C                     __end_of_UART1_tx_vect_isr 51B0  
        __size_of_UART2_SetRxInterruptHandler 0014                                __CFG_MVECEN$ON 000000  
                             _TMR6_Initialize 5098                               _PWM8_Initialize 5390  
                 __end_of_UART2_RxDataHandler 5264                              _UART1_Initialize 4348  
                           _UART2_tx_vect_isr 51F8                            _UART2_Transmit_ISR 5066  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 0008  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0011                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0006  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 4F28  
                                      ?_srand 0006                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                            ?_UART2_tx_vect_isr 0001  
                              TimerDone@timer 0008                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U2CON0 003DDA                                        _U2CON1 003DDB  
                                      _U1BRGL 003DF5                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _T5GATE 003F9C  
                         __size_of_UART2_Read 0044                                        _T5GCON 003F9B  
                                      _RC3PPS 003A13                                        _RD1PPS 003A19  
                                      _RB6PPS 003A0E                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC6PPS 003A16  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                              __CFG_WDTCCS$SC 000000                                        i2l5500 508E  
                                      i2l5520 47EE                                        i2l5532 4EAC  
                                      i2l5528 4E7E                                        i2l5468 505C  
                                      i2l4944 51F2                                        i2l5488 4750  
                                      i2l4964 525E                                        _FVRCON 003EC1  
                               ?_init_display 0001                                        _IVTADH 00389E  
                                      _IVTADL 00389D                                        _IVTADU 00389F  
                __size_of_eaDogM_WriteCommand 000A                                        _OSCFRQ 0039DF  
                            __end_of_calc_pot 4086                           ?_UART2_Transmit_ISR 0001  
                             ??_led_lightshow 0010                         _UART1_SetErrorHandler 545C  
                            __end_of___xxtofl 3CC6                    ??_ADCC_GetConversionResult 0008  
                       SPI1_Exchange8bit@data 0006                           ?_PWM8_LoadDutyValue 0006  
                         ??_UART2_tx_vect_isr 0001                     __end_of_UART2_rx_vect_isr 5240  
                  __size_of_SPI1_Exchange8bit 001A                                __CFG_XINST$OFF 000000  
                            _UART2_Initialize 4560                                        _WaitMs 50C6  
                                _CCPTMRS1bits 003F5F                     _UART2_OverrunErrorHandler 016F  
                                vfprintf@cfmt 0055                           _uart2RxStatusBuffer 0132  
          __size_of_UART2_DefaultErrorHandler 0006                                        ___omul 47F4  
                                   ??___aodiv 0016                                     ??___fladd 000E  
                                   ??___aomod 0016                                     ??___fldiv 003F  
                                   ??___awdiv 000A                                __CFG_STVREN$ON 000000  
                                   ??___flmul 001E                                     ??___flsub 0037  
                                   ??___fltol 0052                    ?_UART2_DefaultErrorHandler 0001  
                        send_lcd_cmd_long@cmd 000A                                        clear_0 49EC  
                                      clear_1 49F8                                        clear_2 4A04  
                         UART2_Read@readValue 0006                              ___awdiv@quotient 000C  
                        ??_UART2_Transmit_ISR 0001                                        _printf 5328  
                                      pad@buf 001A                            _eaDogM_WriteString 4A8E  
                                      _sounds 01A5                                        dtoa@fp 0023  
                                      _strlen 4C0A                            __size_of_TimerDone 0024  
                     __end_of_Digital232_init 427C                          ??_PWM8_LoadDutyValue 0008  
                             _ADCC_Initialize 4B52                                        fputc@c 0008  
                              _PMD_Initialize 52AA                                        fputs@c 0015  
                                      fputs@i 0016                                        fputs@s 0011  
                   __end_of_UART2_tx_vect_isr 521C                                  __mediumconst 0000  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                                        srand@s 0006  
                      ??_ADCC_StartConversion 0006                           ?_eaDogM_WriteString 000A  
                            __end_of_wdtdelay 4EF0                                        stoa@cp 0021  
                                      stoa@fp 0011                              __end_of_vfprintf 4C0A  
                                 lp_filter@bn 0064                                 wdtdelay@delay 0006  
                                  _StartTimer 5002      TMR5_SetInterruptHandler@InterruptHandler 0006  
    TMR6_SetInterruptHandler@InterruptHandler 0006   UART2_SetTxInterruptHandler@InterruptHandler 0006  
 UART2_SetRxInterruptHandler@InterruptHandler 0006   UART1_SetTxInterruptHandler@InterruptHandler 0006  
 UART1_SetRxInterruptHandler@InterruptHandler 0006          __end_of_UART1_SetOverrunErrorHandler 5448  
       __size_of_UART1_SetOverrunErrorHandler 0014                  _UART1_SetOverrunErrorHandler 5434  
                   _UART1_DefaultErrorHandler 54EC                                     ??_sprintf 0056  
                                   ??_work_sw 0056                 __size_of_INTERRUPT_Initialize 0048  
                              ??_init_display 000B                  __size_of_UART1_RxDataHandler 0024  
                     __end_of_TMR5_Initialize 4CA6                                  ___xxtofl@arg 0010  
                                ___xxtofl@exp 000F                             _SYSTEM_Initialize 4F96  
                                ___xxtofl@val 0006                                    __accesstop 0060  
                     __end_of__initialization 4A20                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0024  
                                  ___fltol@f1 0074                               _TMR5_WriteTimer 5264  
                        ??_eaDogM_WriteString 000C                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler 53F8                                  __pidataBANK0 54F8  
                                __pidataBANK1 4D7A                           ??_SYSTEM_Initialize 000B  
                                   ?_TMR5_ISR 0001                                     ?_TMR6_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 4560  
                               __end_of_fputs 4E3C                             ??_SPI1_Initialize 0006  
           __end_of_UART2_DefaultErrorHandler 54F8                                 __end_of_srand 4F96  
                       __end_of_TMR5_CallBack 52EE                                 __end_of_putch 54DE  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 53A8  
                     __end_of_TMR6_Initialize 50C6                        __end_of_PMD_Initialize 52CC  
                           lp_filter@lp_speed 006C                    __size_of_UART1_tx_vect_isr 0024  
                   _UART1_FramingErrorHandler 017B                   ADCC_StartConversion@channel 0006  
                    _UART2_RxInterruptHandler 0187                                       ??_fputc 000C  
                   __end_of_SYSTEM_Initialize 4FCC                                       ??_fputs 0015  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0008  
                                     ??_putch 0007                                    __pbssBANK0 009E  
                                  __pbssBANK1 0100                                    __pbssBANK2 0280  
               ?_UART1_SetOverrunErrorHandler 0006                        ?_UART1_SetErrorHandler 0006  
                           __end_of_TimerDone 518C                  ?_UART2_SetTxInterruptHandler 0006  
                  __size_of_UART2_rx_vect_isr 0024                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                          __size_of_lp_filter 02B0                              ??_FVR_Initialize 0006  
                                     ?_WaitMs 000B                                       ?___omul 0006  
                                ??_UART2_Read 0006                               __CFG_PPS1WAY$ON 000000  
            __end_of_TMR6_SetInterruptHandler 5484          __end_of_UART2_SetFramingErrorHandler 53F8  
       __size_of_UART2_SetFramingErrorHandler 0014                  _UART2_SetFramingErrorHandler 53E4  
                     __end_of_ADCC_Initialize 4BAE                                 ?_send_lcd_cmd 0001  
                                  ??_TMR5_ISR 0006                                    ??_TMR6_ISR 0004  
                         ___omul@multiplicand 000E                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0064  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 46B8  
                                     ?_strlen 0006                               StartTimer@count 0006  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                                   ?_calc_pot 007A                               StartTimer@timer 000A  
                            ?_Digital232_init 0001                           __CFG_PWRTS$PWRT_OFF 000000  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                  __size_of_UART2_tx_vect_isr 0024                          __size_of_UART2_Write 0042  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0006  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 01FE                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _PWM8DCH 003F61  
                                     _PWM8DCL 003F60                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                __size_of_ADCC_IsConversionDone 000E  
                                 ?_StartTimer 0006                 __end_of_ADCC_IsConversionDone 54CA  
                         ??_UART1_Receive_ISR 0001                       __end_of_TMR5_WriteTimer 5288  
                          __end_of_UART2_Read 4D7A                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0006                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0006                                       __Lparam 0000  
                    __end_of_UART1_Initialize 4400                 ??_UART2_SetTxInterruptHandler 0009  
                  ??_TMR5_SetInterruptHandler 0009                               __size_of_WaitMs 002C  
                              ??_send_lcd_cmd 000A                                       ___aodiv 3CC6  
                                     ___fladd 27AC                                       ___aomod 3E1E  
                                     ___fldiv 3304                                       ___awdiv 4920  
                             __size_of___omul 009A                                       ___flmul 2428  
                                     ___flsub 4AF4                                       ___fltol 427C  
                                   ?_wdtdelay 0006                     __end_of_UART1_Receive_ISR 4756  
                                   ?_vfprintf 0060                                  __psmallconst 2000  
               ?_UART2_SetFramingErrorHandler 0006                          __end_of_init_display 4A8E  
                                     __pcinit 49A8                           _eaDogM_WriteCommand 54CA  
                            ?_PWM8_Initialize 0001                              ?_TMR6_Initialize 0001  
                                     __ramtop 2000                   __size_of_UART1_Transmit_ISR 0032  
                                     __ptext0 2050                                       __ptext1 488E  
                                     __ptext2 4CA6                                       __ptext3 5288  
                                     __ptext4 4A8E                                       __ptext5 4F60  
                                     __ptext6 4086                                       __ptext7 47F4  
                                     __ptext8 50F2                                       __ptext9 2AF4  
                           _UART2_Receive_ISR 4756                               __size_of_printf 001C  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strlen 0050  
                                  ??_calc_pot 007C      __end_of_UART2_DefaultOverrunErrorHandler 5504  
   __size_of_UART2_DefaultOverrunErrorHandler 0002            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler 5502  
                       _OSCILLATOR_Initialize 530C                                  __size_of_abs 003E  
                      __size_of_Digital232_RW 0240                                  __size_of_pad 00B2  
                          ?_UART2_Receive_ISR 0001                                    ??___xxtofl 000A  
                           __end_of_lp_filter 3058                      ??_PIN_MANAGER_Initialize 0006  
                             __CFG_WRTSAF$OFF 000000                                     _T5CONbits 003F9A  
                    __end_of_UART2_Initialize 460C                                       _otto_b1 01D2  
                  __size_of_SYSTEM_Initialize 0036                                       _sprintf 4CA6  
                          led_lightshow@cylon 00AD                          end_of_initialization 4A20  
                                     _work_sw 488E                           ??_UART2_Receive_ISR 0001  
                          led_lightshow@speed 000E                          ?_eaDogM_WriteCommand 0001  
                              ___omul@product 0016                                       fputc@fp 000A  
         __end_of_UART1_SetTxInterruptHandler 5420                   _UART1_SetTxInterruptHandler 540C  
                                     fputs@fp 0013           __end_of_UART2_SetRxInterruptHandler 53D0  
                 _UART2_SetRxInterruptHandler 53BC                ??_UART1_SetOverrunErrorHandler 0009  
                           __end_of_vfpfcnvrt 39EE                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_wdtdelay 000A  
                            ?_ADCC_Initialize 0001                   ??_UART2_DefaultErrorHandler 0001  
                         __size_of_StartTimer 0032                                    ??_vfprintf 0055  
                                lp_filter@new 0060                     __end_of_UART2_Receive_ISR 47F4  
                              wdtdelay@dcount 0162                           _UART1_RxDataHandler 51D4  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@a 0008  
                                     strlen@s 0006                      _TMR6_SetInterruptHandler 5470  
                       _TMR5_InterruptHandler 0166                                   ___fladd@grs 0015  
        __size_of_UART2_SetTxInterruptHandler 0014                         WaitMs@numMilliseconds 000B  
                               ___xxtofl@sign 000E                      ?_eaDogM_WriteStringAtPos 000E  
                                 ___fldiv@grs 004A                                   ___fldiv@rem 0043  
                            __CFG_FEXTOSC$ECH 000000                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0004                         ??_eaDogM_WriteCommand 000B  
                     TMR5_WriteTimer@timerVal 0004                  __size_of_UART2_RxDataHandler 0024  
                                 ___flmul@grs 0025                                    main@buffer 0084  
                             _SPI1_Initialize 5378                                 _Digital232_RW 35B0  
                       __end_of_led_lightshow 2DA8                                led_lightshow@j 018E  
                              __end_of_WaitMs 50F2                  __end_of_INTERRUPT_Initialize 4D36  
                  __size_of_UART1_Receive_ISR 009E                                __end_of___omul 488E  
                                 vfpfcnvrt@ap 004A                                   vfpfcnvrt@cp 0053  
                                 vfpfcnvrt@fp 0047                                   vfpfcnvrt@ll 004B  
                           __size_of_TMR5_ISR 0036                             __size_of_TMR6_ISR 0028  
                 __size_of_UART2_Transmit_ISR 0032                        ?_OSCILLATOR_Initialize 0001  
           __size_of_ADCC_GetConversionResult 0014                     ?_ADCC_GetConversionResult 0006  
                              __end_of_printf 5344                   __size_of_PWM8_LoadDutyValue 0038  
                              __end_of_strlen 4C5A                ??_UART2_SetFramingErrorHandler 0009  
                         start_initialization 49A8          __end_of_TMR5_DefaultInterruptHandler 5378  
       __size_of_TMR5_DefaultInterruptHandler 001A                  _TMR5_DefaultInterruptHandler 535E  
             __size_of_PIN_MANAGER_Initialize 00AC                                   __end_of_abs 4E7A  
                                 __end_of_pad 44B2                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0009                     _UART2_DefaultErrorHandler 54F2  
                        __end_of_send_lcd_cmd 4F28                         ??_UART1_RxDataHandler 0001  
               __size_of_ADCC_StartConversion 0010                                   putch@txData 0007  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0152  
                           ___omul@multiplier 0006                                 _uart1TxBuffer 015A  
                               _uart2RxBuffer 013A                                ?_Digital232_RW 0001  
                               _uart2TxBuffer 0142                              __CFG_LPBOREN$OFF 000000  
                                    ??_WaitMs 000D                         __size_of_init_display 0068  
                                 vfprintf@fmt 0062                   __size_of_eaDogM_WriteString 0066  
                            ??_PMD_Initialize 0006                                     _TimerDone 5168  
                                    ??___omul 0016                                   __pdataBANK0 00AC  
                                 __pdataBANK1 019E                    __size_of_UART2_Receive_ISR 009E  
                           UART2_Write@txData 0006                                      ??_printf 0056  
                                    ??_strlen 0008               __end_of_eaDogM_WriteStringAtPos 52AA  
                                   ___fladd@a 000A                                     ___fladd@b 0006  
                                   ___fldiv@a 003B                                     ___fldiv@b 0037  
                                   ___flmul@a 001A                                     ___flmul@b 0016  
                                 __pbssCOMRAM 0056                                     ___flsub@a 0033  
                                   ___flsub@b 002F                            _UART1_ErrorHandler 0175  
                   _UART2_FramingErrorHandler 0172                                 __pcstackBANK0 0060  
                               __pcstackBANK2 0200                              ___aodiv@dividend 0006  
                           __size_of_calc_pot 0134                      __size_of_TMR2_Initialize 001E  
                                ??_StartTimer 0008                             __size_of___xxtofl 0164  
                     __end_of_SPI1_Initialize 5390                      _UART1_RxInterruptHandler 0181  
                    _UART2_TxInterruptHandler 0184                 ?_TMR5_DefaultInterruptHandler 0001  
                              Digital232_RW@i 0080                                Digital232_RW@j 0081  
                              Digital232_RW@x 00A2                                  _init_display 4A26  
                      __size_of_TMR5_CallBack 0022                   PWM8_LoadDutyValue@dutyValue 0006  
                     ??_UART2_SetErrorHandler 0009                  ?_UART1_SetRxInterruptHandler 0006  
                       _TMR6_InterruptHandler 0169                                _lp_filter$3690 0068  
                      _PIN_MANAGER_Initialize 460C                                     _dtoa$2719 0035  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 545C  
       __size_of_UART1_SetFramingErrorHandler 0014                  _UART1_SetFramingErrorHandler 5448  
                                  ?_TimerDone 0001                                      ?___aodiv 0006  
                                    ?___fladd 0006                                      ?___aomod 0006  
                                    ?___fldiv 0037                                      ?___awdiv 0006  
                            ___aodiv@quotient 0018                                      ?___flmul 0016  
                                    ?___flsub 002F                                      ?___fltol 0074  
                          ??_UART1_Initialize 0009                            __end_of_StartTimer 5034  
                            _uart1RxLastError 0195                                 ??_UART2_Write 0006  
                           __size_of_wdtdelay 003A                             __size_of_vfprintf 005C  
                      __CFG_BBSIZE$BBSIZE_512 000000                                   __smallconst 2000  
    __end_of_UART1_DefaultOverrunErrorHandler 5500     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 54FE                             ?_UART2_Initialize 0001  
                                    ?_sprintf 0064                                __size_of_fputc 00AE  
                                    _T2CLKCON 003FAE                                __size_of_fputs 003E  
                                   _lp_filter 2DA8                                   _U1ERRIRbits 003DF9  
                                    ?_work_sw 0001                                __size_of_srand 0036  
                          ??_UART2_Initialize 0009                                __size_of_putch 000A  
                    __size_of_Digital232_init 00E8                          _INTERRUPT_Initialize 4CEE  
                                    _T6CLKCON 003F96                               ??_Digital232_RW 007E  
                            _uart2RxLastError 0194                         _ADCC_IsConversionDone 54BC  
                                 _U2ERRIRbits 003DE1         UART2_SetErrorHandler@interruptHandler 0006  
       UART1_SetErrorHandler@interruptHandler 0006                                      _LATCbits 003FBC  
                                    _LATEbits 003FBE                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0120  
                                    _IPR6bits 003986                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                 ??_UART1_SetRxInterruptHandler 0009  
                                    i2u500_48 47D8                                      i2u505_48 52DA  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    i2u471_40 5366                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    i2u471_46 5368                                      _SPI1CON2 003D16  
                                    i2u560_48 519C                                      i2u490_48 4710  
                                    i2u562_48 51C0                                      i2u490_49 4724  
                                    i2u564_48 5208                                      i2u492_48 473A  
                                    i2u566_48 522C                                      _PIR8bits 0039A8  
                                    i2u569_40 4FF2                                      i2u568_48 5130  
                                    i2u496_48 4780                                      i2u488_48 46E2  
                                    i2u496_49 4794                                      i2u488_49 46F6  
                                    _PIR9bits 0039A9                                      i2u498_48 47AE  
                                    i2u498_49 47C2                    ??_TMR6_SetInterruptHandler 0009  
                    __size_of_TMR5_Initialize 004C                    __end_of_UART1_Transmit_ISR 5066  
                                    _TMR5_ISR 4FCC                                      _TMR6_ISR 511C  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 37F0  
                               _TMR5_CallBack 52CC                           _UART2_RxDataHandler 5240  
                                  _ADCON0bits 003EF8                       __size_of_FVR_Initialize 0008  
                       __size_of_send_lcd_cmd 0038             __size_of_TMR5_SetInterruptHandler 0014  
                   ?_TMR5_SetInterruptHandler 0006                            _UART2_ErrorHandler 016C  
                         __end_of_UART2_Write 4DFE                      __size_of_PWM8_Initialize 0018  
                    __size_of_TMR6_Initialize 002E                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 49BC  
                                  ?_lp_filter 0060                         ?_INTERRUPT_Initialize 0001  
                        ?_UART2_RxDataHandler 0001                        _uart1TxBufferRemaining 00A9  
                           ??_TMR2_Initialize 0006                ??_TMR5_DefaultInterruptHandler 0004  
         __end_of_UART2_SetTxInterruptHandler 53BC                   _UART2_SetTxInterruptHandler 53A8  
                                _uart1RxCount 00A7                                  _uart2RxCount 00A3  
                                    __Hrparam 0000              __size_of_eaDogM_WriteStringAtPos 0022  
            __end_of_ADCC_GetConversionResult 54AC                       __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                  vfprintf@ap 0063                                      __Lrparam 0000  
                                  vfprintf@fp 0060                            __CFG_BOREN$SBORDIS 000000  
                                 ??_TimerDone 0006                       ??_OSCILLATOR_Initialize 0006  
                                _send_lcd_cmd 4EF0                              __size_of___aodiv 0158  
                            __size_of___fladd 0348                              __size_of___aomod 0134  
                            __size_of___fldiv 02AC                              __size_of___awdiv 0088  
                            __size_of___flmul 0384                              __size_of___flsub 005E  
                            __size_of___fltol 00CC                                ?_TMR5_CallBack 0001  
                                  ?_vfpfcnvrt 0047                               ___aodiv@divisor 000E  
                             ___aodiv@counter 0016          __size_of_UART1_SetRxInterruptHandler 0014  
                                    _calc_pot 3F52                                    sprintf@fmt 0066  
                             lp_filter@smooth 0100                                      ___xxtofl 3B62  
                    __size_of_ADCC_Initialize 005C                   __end_of_eaDogM_WriteCommand 54D4  
                                    __pivt0x8 0008                                      __ptext10 4920  
                                    __ptext11 4A26                                      __ptext20 53BC  
                                    __ptext12 5144                                      __ptext21 53D0  
                                    __ptext13 54CA                                      __ptext30 5098  
                                    __ptext22 53E4                                      __ptext14 4EF0  
                                    __ptext31 5470                                      __ptext23 53F8  
                                    __ptext15 4EB6                                      __ptext40 4CEE  
                                    __ptext32 4C5A                                      __ptext24 4348  
                                    __ptext16 5344                                      __ptext41 54DE  
                                    __ptext33 5484                                      __ptext25 540C  
                                    __ptext17 4F96                                      __ptext50 3058  
                                    __ptext42 4B52                                      __ptext34 52EE  
                                    __ptext26 5420                                      __ptext18 4560  
                                    __ptext51 4400                                      __ptext43 4194  
                                    __ptext35 5378                                      __ptext27 5434  
                                    __ptext19 53A8                                      __ptext60 3F52  
                                    __ptext52 4C0A                                      __ptext44 50C6  
                                    __ptext36 5390                                      __ptext28 5448  
                                    __ptext61 2DA8                                      __ptext53 4DFE  
                                    __ptext45 35B0                                      __ptext37 52AA  
                                    __ptext29 545C                                      __ptext70 5168  
                                    __ptext62 4AF4                                      __ptext54 44B2  
                                    __ptext46 5328                                      __ptext38 460C  
                                    __ptext71 5002                                      __ptext63 27AC  
                                    __ptext55 54D4                                      __ptext47 4BAE  
                                    __ptext39 530C                                      __ptext80 46B8  
                                    __ptext72 4F28                                      __ptext64 2428  
                                    __ptext56 4DBC                                      __ptext48 37F0  
                                    __ptext81 54FE                                      __ptext73 54AC  
                                    __ptext65 3304                                      __ptext57 4E3C  
                                    __ptext49 39EE                                      __ptext90 5504  
                                    __ptext82 5500                                      __ptext74 54BC  
                                    __ptext66 3B62                                      __ptext58 3E1E  
                                    __ptext91 54F2                                      __ptext83 54EC  
                                    __ptext75 5498                                      __ptext67 427C  
                                    __ptext59 3CC6                                      __ptext92 5240  
                                    __ptext84 51D4                                      __ptext76 54FC  
                                    __ptext68 54E6                                      __ptext93 511C  
                                    __ptext85 51F8                                      __ptext77 518C  
                                    __ptext69 4D36                                      __ptext94 4E7A  
                                    __ptext86 5066                                      __ptext78 5034  
                                    __ptext95 4FCC                                      __ptext87 521C  
                                    __ptext79 51B0                                      __ptext96 5264  
                                    __ptext88 4756                                      __ptext97 52CC  
                                    __ptext89 5502                                      __ptext98 535E  
                                    __ptext99 0000                        ?_ADCC_IsConversionDone 0001  
              __size_of_UART1_SetErrorHandler 0014                 TMR6_DefaultInterruptHandler@i 0003  
               __end_of_UART1_SetErrorHandler 5470                              __size_of_sprintf 0048  
                       ??_UART2_RxDataHandler 0001                              __size_of_work_sw 0092  
                         led_lightshow@LED_UP 00AC                                 __size_of_main 03D8  
                               __size_of_dtoa 02AC                                 __size_of_rand 010E  
                               __size_of_once 002A                                 __size_of_stoa 0174  
    __end_of_UART2_DefaultFramingErrorHandler 5506     __size_of_UART2_DefaultFramingErrorHandler 0002  
          ??_UART2_DefaultFramingErrorHandler 0001             ?_UART2_DefaultFramingErrorHandler 0001  
            _UART2_DefaultFramingErrorHandler 5504                          __CFG_WDTCWS$WDTCWS_7 000000  
                                 _IVTLOCKbits 003FD4                             ??_Digital232_init 0056  
                    __size_of_TMR5_WriteTimer 0024                     _UART1_OverrunErrorHandler 0178  
                                   stoa@F1139 019E  UART2_SetOverrunErrorHandler@interruptHandler 0006  
UART1_SetOverrunErrorHandler@interruptHandler 0006            __size_of_UART1_DefaultErrorHandler 0006  
                __end_of_ADCC_StartConversion 54BC                    ?_UART1_DefaultErrorHandler 0001  
                                    _wdtdelay 4EB6                    __end_of_UART2_Transmit_ISR 5098  
                                    _vfprintf 4BAE                                     printf@fmt 0064  
                  __end_of_PWM8_LoadDutyValue 4F60                                      _switches 01A7  
                                 _UART2_Write 4DBC                             ??_TMR5_Initialize 0009  
                            ___aomod@dividend 0006                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0009                   __end_of_UART1_RxDataHandler 51F8  
                                 _uart1RxHead 005A                                   _uart1TxHead 00AB  
                                 _uart2RxHead 0059                                   _uart1RxTail 00A8  
                                 _uart2TxHead 00A6                                   _uart1TxTail 00AA  
                                 _uart2RxTail 0058                        __size_of_led_lightshow 02B4  
                                 _uart2TxTail 00A5                        ??_INTERRUPT_Initialize 0006  
        __end_of_TMR6_DefaultInterruptHandler 4EB6         __size_of_TMR6_DefaultInterruptHandler 003C  
                _TMR6_DefaultInterruptHandler 4E7A                                   ??_lp_filter 0050  
        __end_of_UART2_SetOverrunErrorHandler 53E4         __size_of_UART2_SetOverrunErrorHandler 0014  
                _UART2_SetOverrunErrorHandler 53D0                                      intlevel2 0000  
                                   sprintf@ap 006D                             _send_lcd_cmd_long 5144  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0009  
                           ??_PWM8_Initialize 0006                             __CFG_CLKOUTEN$OFF 000000  
                          ?_send_lcd_cmd_long 0001                    __end_of_eaDogM_WriteString 4AF4  
              __size_of_UART2_SetErrorHandler 0014                 __end_of_UART2_SetErrorHandler 540C  
                         _uart1RxStatusBuffer 014A                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                               ??_TMR5_CallBack 0005  
                         ??_send_lcd_cmd_long 000A                                      printf@ap 0069  
                      eaDogM_WriteCommand@cmd 000B                                    _UART2_Read 4D36  
UART2_SetFramingErrorHandler@interruptHandler 0006  UART1_SetFramingErrorHandler@interruptHandler 0006  
                    _ADCC_GetConversionResult 5498             __end_of_UART1_DefaultErrorHandler 54F2  
                             ___aomod@divisor 000E                                   ??_vfpfcnvrt 004B  
                                    stoa@nuls 0016                               ___aomod@counter 0016  
                           _UART2_is_rx_ready 54E6                        _uart2TxBufferRemaining 00A4  
                              _FVR_Initialize 54DE                                 lp_filter@lp_x 0070  
                                    sprintf@f 006E                                      sprintf@s 0064  
                               lp_filter@slow 0066                            ?_UART2_is_rx_ready 0001  
                       TMR5_ISR@CountCallBack 0190                     __size_of_UART1_Initialize 00B8  
                    _UART1_TxInterruptHandler 017E                           ??_UART2_is_rx_ready 0006  
                   __end_of_send_lcd_cmd_long 5168                                 ___fladd@signs 0012  
                         __end_of_Default_ISR 54FE                                  ___aodiv@sign 0017  
              __end_of_PIN_MANAGER_Initialize 46B8                             ??_ADCC_Initialize 0006  
               ?_TMR6_DefaultInterruptHandler 0001                 ?_UART2_SetOverrunErrorHandler 0006  
                                ___fladd@aexp 0013                                  ___fladd@bexp 0014  
                ?_UART1_SetTxInterruptHandler 0006                       _eaDogM_WriteStringAtPos 5288  
                ?_UART2_SetRxInterruptHandler 0006                                  ___aomod@sign 0017  
                               once@once_flag 0006                                 _led_lightshow 2AF4  
                   __size_of_UART2_Initialize 00AC  
